[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"    id \"checkstyle\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"    mainClass.set(\"nimbus.Launcher\")","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"    archiveBaseName \u003d \"nimbus\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"checkstyle {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"# Nimbus User Guide","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"![Product Screenshot](Ui.png)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"\u003e “The secret of getting ahead is getting started.” – Mark Twain","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"Nimbus frees your mind of having to remember things you need to do. It is:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"- **user-friendly**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"- *cross-platform* compatible","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"- ~~slow~~ **SUPER FAST** 🚀 to use","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"And it is **FREE**!","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"## Features","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"### 1. List Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `list`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"This command displays all saved tasks currently in your list.  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"If no tasks exist, it prompts you to add some.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"Expected output (when tasks exist):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"1. [T][ ] Read book","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"2. [D][ ] Submit assignment (by: Dec 01 2023, 2:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"3. [E][ ] Team meeting (from: Nov 30 2023, 2:00 pm to: Nov 30 2023, 4:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"Expected output (when no tasks exist):","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"Hmm... Your task list is empty. Ready to add something?","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"### 2. Add Todo Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `todo \u003ctask description\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"**Example:** `todo Buy groceries`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"Adds a simple todo task to the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"### 3. Add Deadline Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `deadline \u003ctask description\u003e /by \u003cdate\u003e \u003ctime\u003e`  ","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"**Example:** `deadline Submit report /by 2024-02-25 2359`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"Adds a task with a specific deadline.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"  [D][ ] Submit report (by: Feb 25 2024, 11:59 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"### 4. Add Event Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `event \u003ctask description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"**Example:** `event Project meeting /from 2024-02-26 1000 /to 2024-02-26 1200`","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"Adds an event task with a start and end time.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"  [E][ ] Project meeting (from: Feb 26 2024, 10:00 am to: Feb 26 2024, 12:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"### 5. Mark Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `mark \u003ctask number\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"**Example:** `mark 1`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"Marks a task as completed.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"  [T][X] Buy groceries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"### 6. Unmark Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `unmark \u003ctask number\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"**Example:** `unmark 1`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"Unmarks a completed task.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"  [T][ ] Buy groceries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"### 7. Delete Task","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `delete \u003ctask number\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"**Example:** `delete 2`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"Removes a task from the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"  [D][ ] Submit report (by: Feb 25 2024, 11:59 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jamesberyl"},"content":"### 8. Find Tasks by Date","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `find_date \u003cdate\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jamesberyl"},"content":"**Example:** `find_date 2024-02-26`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jamesberyl"},"content":"Finds all tasks occurring on a specific date.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jamesberyl"},"content":"Tasks on Feb 26 2024:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jamesberyl"},"content":"  [E][ ] Project meeting (from: Feb 26 2024, 10:00 am to: Feb 26 2024, 12:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"### 9. Find Tasks by Keyword","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `find \u003ckeyword\u003e`  ","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"**Example:** `find meeting`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"Finds tasks that contain the specified keyword.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"Here are the matching tasks for \"meeting\":","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"1. [E][ ] Project meeting (from: Feb 26 2024, 10:00 am to: Feb 26 2024, 12:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jamesberyl"},"content":"### 10. Clear All Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `clear`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jamesberyl"},"content":"Removes all tasks from the list.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jamesberyl"},"content":"✅ All tasks have been cleared.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jamesberyl"},"content":"### 11. Sort Tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `sort`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jamesberyl"},"content":"Sorts tasks in chronological order:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jamesberyl"},"content":"1. Events (earliest start time first, then by end time)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jamesberyl"},"content":"2. Deadlines (earliest due date first)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jamesberyl"},"content":"3. Todo tasks (by creation time)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jamesberyl"},"content":"Tasks sorted successfully:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jamesberyl"},"content":"1. [E][ ] Project meeting (from: Feb 26 2024, 10:00 am to: Feb 26 2024, 12:00 pm)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jamesberyl"},"content":"2. [T][ ] Buy groceries","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jamesberyl"},"content":"### 12. Exit the Application","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jamesberyl"},"content":"**Usage:** `bye`","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jamesberyl"},"content":"Terminates the chatbot and displays a farewell message.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jamesberyl"},"content":"Expected output:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jamesberyl"},"content":"Stay awesome, and I’ll see you soon! 👋","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jamesberyl"},"content":"```","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"jamesberyl":156,"-":23}},{"path":"src/main/java/nimbus/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     * @param img  The image representing the speaker\u0027s face.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"            assert fxmlLoader.getLocation() !\u003d null : \"FXML file not found at the specified location\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        assert dialog !\u003d null : \"Label \u0027dialog\u0027 is not initialized (FXML loading issue)\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"        assert displayPicture !\u003d null : \"ImageView \u0027displayPicture\u0027 is not initialized (FXML loading issue)\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"     * Flips the dialog box so that the ImageView is positioned on the left","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"     * and the text is aligned to the right. Also applies the reply-label CSS class to the text.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"     * Creates a dialog box for the user with the specified text and image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"     * @param img  The image representing the user\u0027s face.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"     * @return A DialogBox instance representing the user\u0027s dialog.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"     * Creates a dialog box for the bot with the specified text and image.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"     * The dialog box is flipped so that the bot\u0027s image appears on the left.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"     * @param img  The image representing the bot\u0027s face.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"     * @return A DialogBox instance representing the bot\u0027s dialog.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"    public static DialogBox getNimbusDialog(String text, Image img) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"        db.flip();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"        return db;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"jamesberyl":88}},{"path":"src/main/java/nimbus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"     * Launches the JavaFX application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"jamesberyl":18}},{"path":"src/main/java/nimbus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":" * The main entry point for the Nimbus application, providing a graphical user interface (GUI) using JavaFX and FXML.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    private final Nimbus nimbus \u003d new Nimbus();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Main instance and initializes the Nimbus chatbot.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If there is an error initializing the chatbot.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    public Main() throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     * Starts the JavaFX application and sets up the main window.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        assert stage !\u003d null : \"Primary stage should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"            assert fxmlLoader.getLocation() !\u003d null : \"FXML file not found at the specified location\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"            assert ap !\u003d null : \"Failed to load AnchorPane from FXML\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"            stage.setTitle(\"Nimbus - Your friendly TaskManager\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"            assert fxmlLoader.getController() !\u003d null : \"FXML controller is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNimbus(nimbus);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"            stage.show();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"jamesberyl":54}},{"path":"src/main/java/nimbus/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":" * This class handles user interactions, displays dialog boxes, and manages input processing.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    private Nimbus nimbus;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    private final Image nimbusImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Nimbus.png\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * Initializes the main window.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     * This method binds the vertical scroll property of the scroll pane to the height property","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     * of the dialog container, ensuring that new messages appear at the bottom.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"                DialogBox.getNimbusDialog(\" Hey there! I\u0027m Nimbus, your assistant. \\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"                        + \"How can I make your day brighter?\", nimbusImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"     * Injects the Nimbus instance into the controller.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"     * @param n The Nimbus chatbot instance.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    public void setNimbus(Nimbus n) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"        nimbus \u003d n;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"     * Handles user input by creating dialog boxes.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"     * This method retrieves the user\u0027s input, generates a response from the Nimbus chatbot,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"     * creates dialog boxes for both the user and the chatbot, appends them to the dialog container,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"     * and then clears the user input field.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"    @FXML","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        String response \u003d nimbus.getResponse(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"                DialogBox.getNimbusDialog(response, nimbusImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"        );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false}],"authorContributionMap":{"jamesberyl":69}},{"path":"src/main/java/nimbus/Nimbus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import nimbus.ui.UI;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import nimbus.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasklist.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import nimbus.parser.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":" * The main class for the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":" * Initializes the user interface, storage, task list, and parser,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":" * and manages the application\u0027s main execution flow.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"public class Nimbus {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    private final UI ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Nimbus chatbot instance with the specified file path for storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     * @param filepath The path to the file where tasks are stored.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"    public Nimbus(String filepath) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        this.taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"        this.parser \u003d new Parser(taskList, ui, storage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"     * Default constructor for JavaFX GUI.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"     * Uses the default storage file path.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    public Nimbus() throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        this(\"./data/nimbus.txt\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"     * Processes user input and returns Nimbus\u0027s response.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"     * This method is used by the GUI to interact with the chatbot.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"     * @return The chatbot\u0027s response.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"                String exitMessage \u003d ui.showExitMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"                delay.play();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"                return exitMessage;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"            return parser.processCommand(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"        } catch (NimbusException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":68}},{"path":"src/main/java/nimbus/exceptions/NimbusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":" * Represents a custom exception specific to the Nimbus Chatbot.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":" * This exception is thrown to indicate issues related to user input validation,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":" * task processing errors, or file handling operations within the Nimbus system.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"public class NimbusException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a {@code NimbusException} with the specified error message.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"     * @param message The detailed error message describing the cause of the exception.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"    public NimbusException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"jamesberyl":17}},{"path":"src/main/java/nimbus/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import nimbus.storage.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasklist.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import nimbus.ui.UI;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":" * Handles the parsing and processing of user commands in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":" * This class interprets user input, identifies commands, and invokes corresponding actions","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":" * on the task list, UI, and storage components.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    private final UI ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Parser with the specified task list, UI, and storage components.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"     * @param taskList The task list to manage user tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"     * @param ui The UI component to display messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"     * @param storage The storage component to persist tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    public Parser(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     * Represents the list of supported commands in the Nimbus application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    public enum Command {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"        BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND_DATE, FIND, CLEAR, SORT;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"         * Parses the user input and returns the corresponding command.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"         *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"         * @param input The raw user input string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"         * @return The corresponding Command enum value.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"         * @throws NimbusException If the command is unrecognized.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"         */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"        public static Command parseCommand(String input) throws NimbusException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"            String commandKeyword \u003d extractCommandKeyword(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"                return Command.valueOf(commandKeyword);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"                throw new NimbusException(\"Oops! I don\u0027t recognize that command.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        private static String extractCommandKeyword(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"            return input.split(\" \")[0].toUpperCase();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"     * Processes the user input by identifying the command and executing the corresponding action.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input command string.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"     * @return A string containing the response message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the input is invalid, unrecognized, or causes an error during processing.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"    public String processCommand(String input) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Oops! It seems like you entered nothing.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"        Command command \u003d Command.parseCommand(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"        String response;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"        switch (command) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"        case BYE -\u003e {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"            response \u003d ui.showExitMessage();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        case LIST -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"            response \u003d ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"        case TODO -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.addTodoTask(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"        case DEADLINE -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.addDeadlineTask(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"        case EVENT -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.addEventTask(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"        case MARK -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.markTask(input, true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"        case UNMARK -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.markTask(input, false);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"        case DELETE -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.deleteTask(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"        case FIND_DATE -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.findTasksByDate(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jamesberyl"},"content":"        case FIND -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.findTasksByKeyword(input);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"        case CLEAR -\u003e {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.clearAllTasks(ui);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"        case SORT -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"            response \u003d taskList.sortTasks();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"        default -\u003e throw new NimbusException(\"Oops! I don\u0027t recognize that command.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"        return response;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jamesberyl":116}},{"path":"src/main/java/nimbus/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":" * Handles the storage and retrieval of tasks from a local file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":" * This class manages reading from and writing to the file system,","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":" * ensuring that tasks persist between sessions.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"     * Ensures the parent directory exists before saving.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If there is an error while saving.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"            boolean created \u003d parentDir.mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"            if (!created) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"                throw new NimbusException(\"Error: Could not create directory for storage file.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"                writer.newLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"     * If the file does not exist, returns an empty ArrayList.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If there is an error while loading tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"            String line;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"                    tasks.add(parseTask(line));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"                    System.err.println(\"Skipping corrupted task in storage: \" + line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"     * Parses a task line from storage and converts it into a Task object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"     * @param line The stored task string in format: TYPE | STATUS | DESCRIPTION | (OPTIONAL: DATE/TIME)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException if the format is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"    private Task parseTask(String line) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jamesberyl"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jamesberyl"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Invalid task data format: \" + line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"        String status \u003d parts[1].trim();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"        Task task;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"            switch (type) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"            case \"T\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"                break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"            case \"D\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jamesberyl"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jamesberyl"},"content":"                    throw new NimbusException(\"Invalid deadline format: \" + line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jamesberyl"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jamesberyl"},"content":"                String deadline \u003d parts[3].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jamesberyl"},"content":"                task \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jamesberyl"},"content":"                break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jamesberyl"},"content":"            case \"E\":","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jamesberyl"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jamesberyl"},"content":"                    throw new NimbusException(\"Invalid event format: \" + line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jamesberyl"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jamesberyl"},"content":"                String startTime \u003d parts[3].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"                String endTime \u003d parts[4].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"                task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"                break;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"            default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"                throw new NimbusException(\"Unknown task type: \" + line);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Error parsing task: \" + e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jamesberyl"},"content":"        return task;","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jamesberyl":144}},{"path":"src/main/java/nimbus/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasklist;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import nimbus.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"import nimbus.ui.UI;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":" * Manages the list of tasks in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":" * Handles operations such as adding, marking, deleting, and searching tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"public class TaskList {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    private final UI ui;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a TaskList with the specified storage and UI components.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * Loads existing tasks from storage if available.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     * @param storage The storage component to persist tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     * @param ui The UI component to display messages to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    public TaskList(Storage storage, UI ui) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"        this.tasks \u003d storage.loadTasks();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"        return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"     * Adds a Todo task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the description is empty.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"    public String addTodoTask(String input) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        assert input !\u003d null : \"Input for Todo task should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Oops! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"        return ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task description and deadline.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the input format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"    public String addDeadlineTask(String input) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        assert input !\u003d null : \"Input for Deadline task should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Oops! Deadlines need a description and a \u0027/by\u0027 date.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"        return ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task description, start time, and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the input format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"    public String addEventTask(String input) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"        assert input !\u003d null : \"Input for Event task should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Oops! Events need a description, \u0027/from\u0027 time, and \u0027/to\u0027 time.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Event(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jamesberyl"},"content":"        return ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"     * Marks or unmarks a task as done based on the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"     * @param isDone True to mark the task as done, false to unmark it.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the task number is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"    public String markTask(String input, boolean isDone) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"        int taskNumber \u003d parseTaskNumber(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jamesberyl"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jamesberyl"},"content":"            task.unmark();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jamesberyl"},"content":"        return ui.showTaskMarked(task, isDone);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jamesberyl"},"content":"     * Deletes a task from the task list based on the user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task number to be deleted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the task number is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"    public String deleteTask(String input) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"        int taskNumber \u003d parseTaskNumber(input);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"        Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"        return ui.showTaskDeleted(removedTask, tasks.size());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"     * Clears all tasks from the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"     * @param ui The UI component to handle user interaction.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"    public String clearAllTasks(UI ui) throws NimbusException {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jamesberyl"},"content":"        tasks.clear();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jamesberyl"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jamesberyl"},"content":"        return ui.showAllTasksCleared();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jamesberyl"},"content":"     * Finds tasks that match a specific date based on user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the date to search for tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jamesberyl"},"content":"    public String findTasksByDate(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jamesberyl"},"content":"            String dateStr \u003d input.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jamesberyl"},"content":"            LocalDate searchDate \u003d null;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jamesberyl"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jamesberyl"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jamesberyl"},"content":"                    DateTimeFormatter.ofPattern(\"MMM dd yyyy\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jamesberyl"},"content":"                    DateTimeFormatter.ofPattern(\"dd MM yyyy\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jamesberyl"},"content":"            };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jamesberyl"},"content":"            for (DateTimeFormatter format : formats) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jamesberyl"},"content":"                try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jamesberyl"},"content":"                    searchDate \u003d LocalDate.parse(dateStr, format);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jamesberyl"},"content":"                    break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jamesberyl"},"content":"                } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jamesberyl"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jamesberyl"},"content":"            if (searchDate \u003d\u003d null) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jamesberyl"},"content":"                throw new NimbusException(\"Oops! Invalid date format! Try examples like:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jamesberyl"},"content":"                        + \" - 2023-10-15\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jamesberyl"},"content":"                        + \" - 15/10/2023\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jamesberyl"},"content":"                        + \" - Oct 15 2023\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jamesberyl"},"content":"                        + \" - 15 10 2023\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jamesberyl"},"content":"            return UI.showTasksOnDate(searchDate, tasks);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jamesberyl"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jamesberyl"},"content":"            return ui.showErrorMessage(\"Oops! Please enter a date after \u0027find_date\u0027. Example: find_date 2023-12-01\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jamesberyl"},"content":"        } catch (NimbusException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jamesberyl"},"content":"            return ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jamesberyl"},"content":"     * Parses the task number from user input.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the task number.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jamesberyl"},"content":"     * @return The zero-based index of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the task number is invalid or out of range.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jamesberyl"},"content":"    private int parseTaskNumber(String input) throws NimbusException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jamesberyl"},"content":"        assert input !\u003d null : \"Task number input should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jamesberyl"},"content":"        assert input.split(\" \").length \u003e 1 : \"Task number input should contain a number\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jamesberyl"},"content":"            int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jamesberyl"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jamesberyl"},"content":"                throw new NimbusException(\"Oops! That task number doesn\u0027t exist. Please check your list.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jamesberyl"},"content":"            return taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jamesberyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Oops! Please provide a valid task number.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jamesberyl"},"content":"     * Finds tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jamesberyl"},"content":"     * @param input The user input containing the keyword to search for.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jamesberyl"},"content":"    public String findTasksByKeyword(String input) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jamesberyl"},"content":"        try {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jamesberyl"},"content":"            String keyword \u003d input.split(\" \", 2)[1].trim();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jamesberyl"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jamesberyl"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jamesberyl"},"content":"                if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jamesberyl"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jamesberyl"},"content":"                }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jamesberyl"},"content":"            return ui.showMatchingTasks(matchingTasks, keyword);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jamesberyl"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jamesberyl"},"content":"            return ui.showErrorMessage(\"Oops! Please enter a keyword after \u0027find\u0027. Example: find book\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jamesberyl"},"content":"     * Sorts the tasks in the chronological order:","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jamesberyl"},"content":"     * 1. Events (earliest start time first, if equal, sort by earliest end time)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jamesberyl"},"content":"     * 2. Deadlines (earliest due date first)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jamesberyl"},"content":"     * 3. Todo tasks (sorted by creation time)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jamesberyl"},"content":"     * @return A message indicating that tasks have been sorted.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jamesberyl"},"content":"    public String sortTasks() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jamesberyl"},"content":"        tasks.sort(Comparator.comparing((Task task) -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jamesberyl"},"content":"            if (task instanceof Event event) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jamesberyl"},"content":"                return event.getFromDateTime(); // Sort Events by start time","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jamesberyl"},"content":"            } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jamesberyl"},"content":"                return deadline.getDueDateTime(); // Sort Deadlines by due date","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jamesberyl"},"content":"            } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jamesberyl"},"content":"                return task.getCreatedAt(); // Sort Todos by creation time","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jamesberyl"},"content":"        }).thenComparing(task -\u003e {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jamesberyl"},"content":"            if (task instanceof Event event) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jamesberyl"},"content":"                return event.getToDateTime(); // Sort Events by end time (breaking ties)","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jamesberyl"},"content":"            } else {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jamesberyl"},"content":"                return LocalDateTime.MAX; // Assign max value to ensure Todo tasks don\u0027t interfere","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jamesberyl"},"content":"        }));","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jamesberyl"},"content":"        return ui.showSortedTasks(tasks);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":258}},{"path":"src/main/java/nimbus/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":" * Represents a Deadline task in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":" * A Deadline task has a description and a specific date and time dueDateTime which it must be completed.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    private final LocalDateTime dueDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    private static final List\u003cDateTimeFormatter\u003e INPUT_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Deadline task with the specified description and due date/time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * @param dueDateTime The due date and time in a supported format.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the date/time format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"    public Deadline(String description, String dueDateTime) throws NimbusException {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"        this.dueDateTime \u003d parseDateTime(dueDateTime);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"        return dueDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"     * Parses the date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"     * Supports multiple date/time formats.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"     * @param dateTimeString The date and time string to parse.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the date/time format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws NimbusException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"        for (DateTimeFormatter format : INPUT_FORMATS) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"                return LocalDateTime.parse(dateTimeString, format);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        throw new NimbusException(\"Oops! Invalid date format! Try examples like:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"                + \" - 2023-10-15 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15/10/2023 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"                + \" - Oct 15 2023 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15 10 2023 1800\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"     * The format includes the task type, status, description, and due date/time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representation of the Deadline task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"     * Converts the Deadline task into a string suitable for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representing the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dueDateTime.format(INPUT_FORMATS.get(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"     * Checks if the Deadline task is scheduled for the specified date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"     * @param date The date to check against the task\u0027s due date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"     * @return True if the task is scheduled on the specified date, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"    public boolean isOnDate(LocalDateTime date) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"        return dueDateTime.toLocalDate().equals(date.toLocalDate());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":94}},{"path":"src/main/java/nimbus/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":" * Represents an Event task in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":" * An Event task has a description, a start date and time, and an end date and time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    private static final List\u003cDateTimeFormatter\u003e INPUT_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"),","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"            DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\")","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    );","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * @param from The start date and time in a supported format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     * @param to The end date and time in a supported format.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the date/time format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    public Event(String description, String from, String to) throws NimbusException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        return fromDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        return toDateTime;","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"     * Parses the date and time string into a LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"     * Supports multiple date/time formats.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"     * @param dateTimeString The date and time string toDateTime parse.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"     * @throws NimbusException If the date/time format is invalid.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws NimbusException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        for (DateTimeFormatter format : INPUT_FORMATS) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"            try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"                return LocalDateTime.parse(dateTimeString, format);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        throw new NimbusException(\"Oops! Invalid date format! Try examples like:\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"                + \" - 2023-10-15 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15/10/2023 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"                + \" - Oct 15 2023 1800\\n\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15 10 2023 1800\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"     * The format includes the task type, status, description, and date/time range.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representation of the Event task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDateTime.format(OUTPUT_FORMAT) + \" to: \" + toDateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"     * Converts the Event task into a string suitable for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representing the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + fromDateTime.format(INPUT_FORMATS.get(0)) + \" | \" + toDateTime.format(INPUT_FORMATS.get(0));","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"     * Checks if the Event task occurs on the specified date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"     * @param date The date toDateTime check against the event\u0027s start and end dates.","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"     * @return True if the event occurs on the specified date, false otherwise.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"    public boolean isOnDate(LocalDateTime date) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"        return fromDateTime.toLocalDate().equals(date.toLocalDate()) || toDateTime.toLocalDate().equals(date.toLocalDate());","lastModifiedDate":"2025-02-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":100}},{"path":"src/main/java/nimbus/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":" * Represents an abstract Task in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":" * A Task has a description and a completion status. This class serves as the","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":" * base class for specific task types such as Todo, Deadline, and Event.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"    protected String description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    protected LocalDateTime createdAt;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"        this.createdAt \u003d LocalDateTime.now();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    public LocalDateTime getCreatedAt() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"        return createdAt;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        return description;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"     * Displays \"X\" if the task is marked as done, or a blank space if not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"     * @return The status icon representing the task\u0027s completion status.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"     * Marks the task as done by setting its status to true.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"     * Unmarks the task, setting its status to not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"     * Converts the task into a string suitable for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"     * This method is abstract and must be implemented by subclasses.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representing the task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"     * The format includes the task\u0027s status icon and description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":83}},{"path":"src/main/java/nimbus/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":" * Represents a Todo task in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":" * A Todo task contains only a description without any specific date or time.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"        super(description);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"     * The format includes the task type \"[T]\", status icon, and description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representation of the Todo task.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"     * Converts the Todo task into a string suitable for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"     * The format includes the task type, completion status, and description.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"     * @return The formatted string representing the Todo task for file storage.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"    public String toFileString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"jamesberyl":39}},{"path":"src/main/java/nimbus/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"/**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":" * Handles all user interactions in the Nimbus Chatbot application.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":" * Responsible for displaying messages, reading user input, and presenting task-related information.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":" */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"public class UI {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"     * Displays an exit message when the application is terminated.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    public String showExitMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"        return \"Stay awesome, and I’ll see you soon! 👋\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    public String showErrorMessage(String message) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"        return \"⚠ ERROR: \" + message;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"            output.append(\"Hmm... Your task list is empty. Ready to add something?\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"            output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"                output.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        return output.toString().trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"     * Displays a confirmation message when a task is added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"     * @param size The current number of tasks in the list.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"    public String showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"        assert task !\u003d null : \"Task should not be null when adding\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        assert size \u003e\u003d 0 : \"Task list size should not be negative\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"                + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"     * Displays a message when a task is marked as done or not done.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"     * @param task The task that was marked or unmarked.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"     * @param isDone True if the task was marked as done, false if unmarked.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"    public String showTaskMarked(Task task, boolean isDone) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        assert task !\u003d null : \"Task to be marked should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"        } else {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"     * @param size The current number of tasks in the list after deletion.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"    public String showTaskDeleted(Task task, int size) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"        assert task !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"        assert size \u003e\u003d 0 : \"Task list size after deletion should not be negative\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"                + \"  \" + task + \"\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"                + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"     * Displays a message when all tasks have been cleared.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jamesberyl"},"content":"    public String showAllTasksCleared() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"        return \"✅ All tasks have been cleared.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"     * Displays tasks that occur on a specific date.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"     * @param searchDate The date to search for tasks.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"     * @param tasks The list of tasks to filter and display.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"    public static String showTasksOnDate(LocalDate searchDate, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"        assert searchDate !\u003d null : \"Search date should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jamesberyl"},"content":"        output.append(\"Tasks on \").append(searchDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))).append(\":\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jamesberyl"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jamesberyl"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jamesberyl"},"content":"            if (task instanceof Deadline deadline \u0026\u0026 deadline.isOnDate(searchDate.atStartOfDay())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jamesberyl"},"content":"                output.append(\"  \").append(task).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jamesberyl"},"content":"                isFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jamesberyl"},"content":"            if (task instanceof Event event \u0026\u0026 event.isOnDate(searchDate.atStartOfDay())) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jamesberyl"},"content":"                output.append(\"  \").append(task).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jamesberyl"},"content":"                isFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"        if (!isFound) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"            output.append(\"  No tasks found on this date.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"        return output.toString().trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"    /**","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"     * Displays tasks that match the given keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"     *","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jamesberyl"},"content":"     * @param keyword The keyword used for the search.","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jamesberyl"},"content":"     */","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jamesberyl"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks, String keyword) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jamesberyl"},"content":"        assert matchingTasks !\u003d null : \"Matching tasks list should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jamesberyl"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Search keyword should not be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jamesberyl"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jamesberyl"},"content":"        output.append(\"Here are the matching tasks for \\\"\").append(keyword).append(\"\\\":\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jamesberyl"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jamesberyl"},"content":"            output.append(\"  No matching tasks found.\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jamesberyl"},"content":"        } else {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jamesberyl"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jamesberyl"},"content":"                output.append((i + 1)).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jamesberyl"},"content":"            }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jamesberyl"},"content":"        return output.toString().trim();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jamesberyl"},"content":"    public String showSortedTasks(ArrayList\u003cTask\u003e sortedTasks) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jamesberyl"},"content":"        StringBuilder response \u003d new StringBuilder(\"Tasks sorted successfully:\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jamesberyl"},"content":"        for (int i \u003d 0; i \u003c sortedTasks.size(); i++) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jamesberyl"},"content":"            response.append((i + 1)).append(\". \").append(sortedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jamesberyl"},"content":"        return response.toString().trim();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"jamesberyl":169}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"jamesberyl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/23.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nimbus.MainWindow\"\u003e","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"jamesberyl":19}},{"path":"src/test/java/nimbus/exceptions/NimbusExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.exceptions;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"class NimbusExceptionTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"    void testExceptionMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d new NimbusException(\"This is a test error message.\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"This is a test error message.\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    void testThrowNimbusException() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"        Exception exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"            throw new NimbusException(\"Something went wrong!\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Something went wrong!\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    void testEmptyMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d new NimbusException(\"\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    void testNullMessage() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d new NimbusException(null);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        assertNull(exception.getMessage());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":35}},{"path":"src/test/java/nimbus/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import nimbus.storage.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasklist.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import nimbus.ui.UI;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"class ParserTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    private UI ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    void setUp() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"        storage \u003d new Storage(\"test_tasks.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"        parser \u003d new Parser(taskList, ui, storage);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    void testParseCommand_validCommand() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(Parser.Command.LIST, Parser.Command.parseCommand(\"list\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(Parser.Command.TODO, Parser.Command.parseCommand(\"todo Read book\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    void testParseCommand_invalidCommand() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"            Parser.Command.parseCommand(\"invalidCommand\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! I don\u0027t recognize that command.\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"    void testProcessCommand_emptyInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"            parser.processCommand(\"\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! It seems like you entered nothing.\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":55}},{"path":"src/test/java/nimbus/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Deadline;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Event;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import java.io.File;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"class StorageTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    private File tempFile;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"        tempFile \u003d File.createTempFile(\"nimbus_test\", \".txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        storage \u003d new Storage(tempFile.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    @AfterEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"    void tearDown() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"        if (tempFile.exists()) {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"            tempFile.delete();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"    void testSaveAndLoadTodoTask() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"        tasksToSave.add(new Todo(\"Test Todo\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        storage.saveTasks(tasksToSave);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[T][ ] Test Todo\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"    void testSaveAndLoadDeadlineTask() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"        tasksToSave.add(new Deadline(\"Submit report\", \"2023-12-01 1800\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        storage.saveTasks(tasksToSave);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[D][ ] Submit report (by: Dec 01 2023, 6:00 pm)\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"    void testSaveAndLoadEventTask() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        tasksToSave.add(new Event(\"Team meeting\", \"2023-11-01 1000\", \"2023-11-01 1200\"));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"        storage.saveTasks(tasksToSave);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(1, loadedTasks.size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Nov 01 2023, 10:00 am to: Nov 01 2023, 12:00 pm)\", loadedTasks.get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"    void testLoadFromNonExistentFile() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"        File nonExistentFile \u003d new File(\"non_existent_file.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        Storage newStorage \u003d new Storage(nonExistentFile.getAbsolutePath());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d newStorage.loadTasks();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":81}},{"path":"src/test/java/nimbus/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasklist;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import nimbus.storage.Storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasklist.TaskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import nimbus.ui.UI;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    private UI ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    void setUp() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"        storage \u003d new Storage(\"test_tasks.txt\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    void testAddTodoTask_validInput() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        taskList.addTodoTask(\"todo Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[T][ ] Read book\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"    void testAddTodoTask_emptyInput() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"            taskList.addTodoTask(\"todo \");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! The description of a todo cannot be empty.\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"    void testDeleteTask_validInput() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"        taskList.addTodoTask(\"todo Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"        taskList.deleteTask(\"delete 1\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"    void testDeleteTask_invalidIndex() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"            taskList.deleteTask(\"delete 5\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! That task number doesn\u0027t exist. Please check your list.\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"    void testMarkTask_validInput() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        taskList.addTodoTask(\"todo Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"        taskList.markTask(\"mark 1\", true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[T][X] Read book\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"    void testUnmarkTask_validInput() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"        taskList.addTodoTask(\"todo Read book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"        taskList.markTask(\"mark 1\", true);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        taskList.markTask(\"unmark 1\", false);","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[T][ ] Read book\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":78}},{"path":"src/test/java/nimbus/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"class DeadlineTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"    void testValidDeadlineCreation() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"2023-12-01 1800\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[D][ ] Submit report (by: Dec 01 2023, 6:00 pm)\", deadline.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    void testInvalidDateFormat() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"            new Deadline(\"Invalid date\", \"12-01-2023 1800\"); // Invalid format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! Invalid date format! Try examples like:\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"                + \" - 2023-10-15 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15/10/2023 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"                + \" - Oct 15 2023 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15 10 2023 1800\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    void testToFileString() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        Deadline deadline \u003d new Deadline(\"Complete assignment\", \"2023-11-20 1700\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"D | 0 | Complete assignment | 2023-11-20 1700\", deadline.toFileString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    void testIsOnDate() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"        Deadline deadline \u003d new Deadline(\"Project deadline\", \"2023-11-15 0900\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"2023-11-15T10:00\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(true, deadline.isOnDate(date));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":43}},{"path":"src/test/java/nimbus/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"class EventTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"    void testValidEventCreation() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"        Event event \u003d new Event(\"Team meeting\", \"2023-11-01 1000\", \"2023-11-01 1200\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Nov 01 2023, 10:00 am to: Nov 01 2023, 12:00 pm)\", event.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"    void testInvalidDateFormat() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"        NimbusException exception \u003d assertThrows(NimbusException.class, () -\u003e {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"            new Event(\"Invalid event\", \"2023/11/01 1000\", \"2023/11/01 1200\"); // Invalid format","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"        });","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"Oops! Invalid date format! Try examples like:\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"                + \" - 2023-10-15 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15/10/2023 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"                + \" - Oct 15 2023 1800\\n\"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"                + \" - 15 10 2023 1800\", exception.getMessage());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"    void testToFileString() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"        Event event \u003d new Event(\"Conference\", \"2023-12-05 0900\", \"2023-12-05 1700\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"E | 0 | Conference | 2023-12-05 0900 | 2023-12-05 1700\", event.toFileString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"    void testIsOnDate() throws NimbusException {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"        Event event \u003d new Event(\"Workshop\", \"2023-11-10 0900\", \"2023-11-11 1700\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"2023-11-11T15:00\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(true, event.isOnDate(date));","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":43}},{"path":"src/test/java/nimbus/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.tasks;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"class TodoTest {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"    void testTodoCreation() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"[T][ ] Read a book\", todo.toString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"    void testToFileString() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(\"T | 0 | Buy groceries\", todo.toFileString());","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":20}},{"path":"src/test/java/nimbus/ui/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"package nimbus.ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"import nimbus.exceptions.NimbusException;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Deadline;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Event;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Task;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"import nimbus.tasks.Todo;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"public class UITest {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"    private UI ui;","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jamesberyl"},"content":"    void setUp() {","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jamesberyl"},"content":"    void testShowExitMessage() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Stay awesome, and I’ll see you soon! 👋\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showExitMessage());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jamesberyl"},"content":"    void testShowErrorMessage() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"⚠ ERROR: File not found!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showErrorMessage(\"File not found!\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jamesberyl"},"content":"    void testShowEmptyTaskList() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Hmm... Your task list is empty. Ready to add something?\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showTaskList(taskList));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jamesberyl"},"content":"    void testShowTaskListWithTasks() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jamesberyl"},"content":"        Task task1 \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jamesberyl"},"content":"        Task task2 \u003d new Deadline(\"Submit report\", \"Feb 28 2025 1800\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jamesberyl"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jamesberyl"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jamesberyl"},"content":"                \"1. [T][ ] Read book\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jamesberyl"},"content":"                \"2. [D][ ] Submit report (by: Feb 28 2025, 6:00 pm)\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showTaskList(taskList));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jamesberyl"},"content":"    void testShowTaskAdded() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jamesberyl"},"content":"                \"  [T][ ] Read book\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jamesberyl"},"content":"                \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showTaskAdded(task, 1));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jamesberyl"},"content":"    void testShowTaskMarked() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jamesberyl"},"content":"        String expectedDone \u003d \"Nice! I\u0027ve marked this task as done:\\n  [T][X] Read book\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jamesberyl"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expectedDone, ui.showTaskMarked(task, true));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jamesberyl"},"content":"        task.unmark();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jamesberyl"},"content":"        String expectedNotDone \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  [T][ ] Read book\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expectedNotDone, ui.showTaskMarked(task, false));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jamesberyl"},"content":"    void testShowTaskDeleted() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jamesberyl"},"content":"                \"  [T][ ] Read book\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jamesberyl"},"content":"                \"Now you have 0 tasks in the list.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showTaskDeleted(task, 0));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jamesberyl"},"content":"    void testShowAllTasksCleared() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"✅ All tasks have been cleared.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showAllTasksCleared());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jamesberyl"},"content":"    void testShowTasksOnDate_NoTasks() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jamesberyl"},"content":"        LocalDate searchDate \u003d LocalDate.of(2025, 2, 20);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Tasks on Feb 20 2025:\\n  No tasks found on this date.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, UI.showTasksOnDate(searchDate, taskList));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jamesberyl"},"content":"    void testShowTasksOnDate_WithTasks() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jamesberyl"},"content":"        LocalDate searchDate \u003d LocalDate.of(2025, 2, 20);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jamesberyl"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"20/02/2025 1800\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jamesberyl"},"content":"        Event event \u003d new Event(\"Project Meeting\", \"20/02/2025 1000\", \"20/02/2025 1200\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jamesberyl"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jamesberyl"},"content":"        taskList.add(event);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Tasks on Feb 20 2025:\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jamesberyl"},"content":"                \"  [D][ ] Submit report (by: Feb 20 2025, 6:00 pm)\\n\" +","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jamesberyl"},"content":"                \"  [E][ ] Project Meeting (from: Feb 20 2025, 10:00 am to: Feb 20 2025, 12:00 pm)\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, UI.showTasksOnDate(searchDate, taskList));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jamesberyl"},"content":"    void testShowMatchingTasks_NoMatches() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Here are the matching tasks for \\\"report\\\":\\n  No matching tasks found.\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showMatchingTasks(taskList, \"report\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jamesberyl"},"content":"    void testShowMatchingTasks_WithMatches() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jamesberyl"},"content":"        Task task \u003d new Deadline(\"Submit report\", \"Feb 28 2025 1800\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jamesberyl"},"content":"        taskList.add(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Here are the matching tasks for \\\"report\\\":\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jamesberyl"},"content":"                \"1. [D][ ] Submit report (by: Feb 28 2025, 6:00 pm)\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showMatchingTasks(taskList, \"report\"));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jamesberyl"},"content":"    @Test","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jamesberyl"},"content":"    void testShowSortedTasks() throws NimbusException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jamesberyl"},"content":"        Task task1 \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jamesberyl"},"content":"        Task task2 \u003d new Deadline(\"Submit report\", \"Feb 28 2025 1800\");","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jamesberyl"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jamesberyl"},"content":"        sortedTasks.add(task1);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jamesberyl"},"content":"        sortedTasks.add(task2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jamesberyl"},"content":"        String expected \u003d \"Tasks sorted successfully:\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jamesberyl"},"content":"                \"1. [T][ ] Read book\\n\" +","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jamesberyl"},"content":"                \"2. [D][ ] Submit report (by: Feb 28 2025, 6:00 pm)\";","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jamesberyl"},"content":"        assertEquals(expected, ui.showSortedTasks(sortedTasks));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jamesberyl"},"content":"    }","lastModifiedDate":"2025-02-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jamesberyl"},"content":"}","lastModifiedDate":"2025-02-02","isFullCredit":false}],"authorContributionMap":{"jamesberyl":150}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jamesberyl"},"content":"clear","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jamesberyl"},"content":"y","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"todo Finish CS2103T Assignment","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"deadline Submit Report /by 2023-10-15 1800","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"deadline Pay Bills /by 15/10/2023 1400","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"deadline Apply for Internship /by Oct 20 2023 2359","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"deadline Attend Seminar /by 20 10 2023 1200","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"event Team Meeting /from 2023-12-01 1000 /to 2023-12-01 1200","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"event Family Dinner /from 01/12/2023 1900 /to 01/12/2023 2100","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jamesberyl"},"content":"event Conference /from Dec 10 2023 0900 /to Dec 10 2023 1700","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jamesberyl"},"content":"event Hackathon /from 10 12 2023 1800 /to 10 12 2023 2359","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jamesberyl"},"content":"delete 3","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jamesberyl"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jamesberyl"},"content":"find_date 2023-12-01","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"find_date 2023-10-15","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"deadline Submit Proposal /by 15-10-2023 1800","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jamesberyl"},"content":"event Workshop /from 2023.10.15 1000 /to 2023.10.15 1700","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jamesberyl"},"content":"find_date 10-15-2023","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jamesberyl"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"jamesberyl":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jamesberyl"},"content":"# Define directories","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jamesberyl"},"content":"SRC_DIR\u003d\"../src/main/java\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jamesberyl"},"content":"BIN_DIR\u003d\"../bin\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jamesberyl"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jamesberyl"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jamesberyl"},"content":"if [ ! -d \"$BIN_DIR\" ]; then","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jamesberyl"},"content":"    mkdir -p \"$BIN_DIR\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jamesberyl"},"content":"# Delete output from previous run","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jamesberyl"},"content":"if [ -e \"./ACTUAL.TXT\" ]; then","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jamesberyl"},"content":"# Compile all Java files inside the correct package structure","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jamesberyl"},"content":"if ! javac -cp \"$SRC_DIR\" -Xlint:none -d \"$BIN_DIR\" $(find \"$SRC_DIR\" -name \"*.java\"); then","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jamesberyl"},"content":"# Run the program with package name and feed commands from input.txt","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jamesberyl"},"content":"java -classpath \"$BIN_DIR\" nimbus.Nimbus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jamesberyl"},"content":"# Convert to UNIX format (ensure dos2unix is installed)","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jamesberyl"},"content":"# Compare actual output with expected output","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jamesberyl"},"content":"if [ $? -eq 0 ]; then","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jamesberyl":16,"-":22}}]
