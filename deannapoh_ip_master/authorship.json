[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    mainClass.set(\"boo.misc.Launcher\")","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    archiveBaseName \u003d \"boo\"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    destinationDirectory.set(file(\"/Users/deannapoh/Desktop\"))","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"deannapoh":19,"-":39}},{"path":"data/Boo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"taskID: 1 || Todo task || isDone: true || homework","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"taskID: 2 || Deadline task || isDone: false || task (by: 02 Feb 2023 12:00 am)","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"taskID: 3 || Event task || isDone: false || Netball Training (from: 29 Mar 2025 4:00 pm to: 29 Mar 2025 6:00 pm)","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false}],"authorContributionMap":{"deannapoh":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"# Boo User Guide","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"![Screenshot of Boo Chatbot](./Ui.png)","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"## Product Introduction","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"Boo is your cheerful, friendly and encouraging chatbot designed to help you manage your tasks with ease and keep you on track! Whether you\u0027re juggling your todos, deadlines, events or more, Boo will help you keep track of tasks so that you will stop ghosting your responsibilities! 👻","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"## Adding Todos","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"**Action**: To add a todo task, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"todo \u003cDESCRIPTION\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will add the task to the list.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"- `todo buy groceries`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"- `todo read book`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"New task? On it. Boo has added this task: ","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":" [T][] buy groceries","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"Now you have 4 tasks altogether.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"But don\u0027t worry-take it one step at a time. You\u0027ve got this! Boo believes in you!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"## Adding Deadlines","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"**Action**: To add a deadline task, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"deadline \u003cDESCRIPTION\u003e /by \u003cdd/MM/yyyy or dd/MM/yyyy HHmm\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will add the task with your specified deadline.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"- `deadline coding assignment /by 10/02/2025`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"- `deadline Homework /by 21/02/2025 1400`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"New task? On it. Boo has added this task: ","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":" [D][] coding assignment (by: 10 Feb 2025 12:00am)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"Now you have 5 tasks altogether.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"But don\u0027t worry-take it one step at a time. You\u0027ve got this! Boo believes in you!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"## Adding Events","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"**Action**: To add an event, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"event \u003cDESCRIPTION\u003e /from \u003cdd/MM/yyyy or dd/MM/yyyy HHmm\u003e /to \u003cdd/MM/yyyy or dd/MM/yyyy HHmm\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will add the event to the list with your specified timeline.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"- `event Korea trip /from 05/03/2025 /to 29/03/2025 1200`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"- `event Netball Training /from 29/03/2025 1600 /to 29/03/2025 1800`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"New task? On it. Boo has added this task: ","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":" [E][] Korea trip (from: 05 Mar 2025 12:00am to: 29 Mar 2025 12:00pm)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"Now you have 6 tasks altogether.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"But don\u0027t worry-take it one step at a time. You\u0027ve got this! Boo believes in you!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"## Marking tasks","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"**Action**: To mark a task, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"mark \u003ctaskID\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"*_Note: taskID must be an integer._","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will mark the task with that taskID as done.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"- `mark 4`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"YAY!!! Boo has marked this task as done:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":" [T][X] buy groceries","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"Boo knew you could do it! Boo is so proud of you \u003c3","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"## Unmarking tasks","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"**Action**: To unmark a task, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"unmark \u003ctaskID\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"*_Note: taskID must be an integer._","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will unmark the task with that taskID, i.e. task marked as undone.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"- `unmark 4`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"Noted! Boo has marked this task as not done yet:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":" [T][] buy groceries","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"No worries-these things happen! You got this!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"## Deleting tasks","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"**Action**: To delete a task, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"delete \u003ctaskID\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"*_Note: taskID must be an integer._","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will delete the task with that taskID from the list.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"- `delete 4`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"Got it! Boo has removed this task:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":" [T][X] buy groceries","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"YAY!!! You are now only left with 3 tasks! ","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"Keep up the good work!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"## Listing tasks","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"**Action**: To list all the tasks, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"list","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will list out all the tasks, in chronological order.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"- `list`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"These are the tasks you have: ","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"deannapoh"},"content":"1. [T][] buy groceries","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"deannapoh"},"content":"2. [T][X] read book","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"3. [D][X] coding assignment (by: 10 Feb 2025 12:00am)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deannapoh"},"content":"4. [D][] Homework (by: 21 Feb 2025 2:00pm)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"deannapoh"},"content":"5. [E][] Korea trip (from: 05 Mar 2025 12:00am to: 29 Mar 2025 12:00pm)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"deannapoh"},"content":"6. [E][] Netball training (from: 29 Mar 2025 4:00pm to: 29 Mar 2025 6:00pm)","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"This might seem overwhelming, but don\u0027t stress!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"Take it one step at a time and you\u0027ll get them all done in no time! Boo is rooting for you!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"## Exit","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"**Action**: To exit the chabot, use the following command:","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"bye","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"**Outcome**: Boo will exit.","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Examples**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"- `bye`","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"\u003cins\u003e**Expected Output**:\u003c/ins\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"NOOO please don\u0027t go!! Boo will miss you :( Come back soon!!","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"```","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"deannapoh":158,"-":16}},{"path":"src/main/java/boo/Boo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Parser;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Storage;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Ui;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import boo.task.TaskList;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":" * Represents the main class of the program.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"public class Boo {","lastModifiedDate":"2025-01-19T19:04:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"     * Constructor for the chatbot","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If there is any problem reading the input.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    public Boo() throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"        storage \u003d new Storage(\"./data/Boo.txt\");","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"        parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T21:37:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"     * Returns Boo\u0027s response to user input.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"     * @param input The user input.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"     * @return Boo\u0027s response.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        ui.printGreeting();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"                return handleExit();","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"            if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"                return ui.printTaskHistory(taskList.getTaskMap());","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"            } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"                return taskList.markAsDone(input);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"            } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"                return taskList.markAsNotDone(input);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"            } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"                return taskList.deleteTask(input);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"            } else if (input.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"                return taskList.findTask(input);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"            } else {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"                return taskList.addTask(Parser.parseTask(input));","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-19T21:37:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"        } catch (BooException e) {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T20:40:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"    private String handleExit() {","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"        String goodbyeMessage \u003d ui.printGoodbyeMessage();","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"        // Delay exit to display message","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"            try {","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"                Thread.sleep(1000); // 1-second delay before exiting","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"                Thread.currentThread().interrupt();","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"        }).start();","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"        return goodbyeMessage;","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"    public Ui getUi() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"        return ui;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T19:04:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19T19:04:11","isFullCredit":false}],"authorContributionMap":{"deannapoh":80}},{"path":"src/main/java/boo/misc/BooException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":" * Represents an exception that occurred in the Chatbot.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"public class BooException extends Exception {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"     * Constructs an error message if chatbot throws an exception.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"     * @param message Message shown to user when exception occurs.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"    public BooException(String message) {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"        super(message);","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false}],"authorContributionMap":{"deannapoh":16}},{"path":"src/main/java/boo/misc/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"     * Loads the corresponding FXML file and initializes the UI components.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"     * @param img  The image representing the speaker.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"    private void flip() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"     * Creates a DialogBox for the user\u0027s messages, with the image on the right.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"     * @param text The user\u0027s message.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"     * @param img  The user\u0027s profile image.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"     * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"     * Creates a DialogBox for Boo\u0027s messages, with the image on the left.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"     * @param text The chatbot\u0027s response.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"     * @param img  The chatbot\u0027s profile image.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"     * @return A DialogBox representing Boo\u0027s message.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"    public static DialogBox getBooDialog(String text, Image img) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"        db.flip();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        return db;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":82}},{"path":"src/main/java/boo/misc/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"public class Launcher {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"     * Main entry path of application.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":19}},{"path":"src/main/java/boo/misc/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.Boo;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":" * A GUI for Boo using FXML.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    private final Boo boo \u003d new Boo();","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"     * Constructs the Main application class.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If there is an issue initializing the Boo instance.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    public Main() throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"            stage.setTitle(\"Boo\");","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBoo(boo);  // inject the Boo instance","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"            stage.show();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":41}},{"path":"src/main/java/boo/misc/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.Boo;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.DialogBox;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    private Boo boo;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jiwon.png\"));","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"    private final Image booImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Boo.png\"));","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"     * Initializes the GUI components.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"    /** Injects the Boo instance */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    public void setBoo(Boo b) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        boo \u003d b;","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        ui \u003d boo.getUi();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        // Show the welcome message right after the GUI is initialized","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"        String welcomeMessage \u003d ui.printGreeting();  // Get greeting from Boo","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        dialogContainer.getChildren().add(DialogBox.getBooDialog(welcomeMessage, booImage));  // Display greeting","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Boo\u0027s reply and then appends them to","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"    @FXML","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"        String response \u003d boo.getResponse(input);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"                DialogBox.getBooDialog(response, booImage)","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"        );","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":64}},{"path":"src/main/java/boo/misc/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.task.Deadline;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.task.Event;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.task.Task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import boo.task.TaskList;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import boo.task.Todo;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":" * Represents a class that handles the parsing of user inputs.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"public class Parser {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"     * Constructs a parser that parses user inputs.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"     * @param ui Interface in charge of interacting with the user.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    public Parser(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"     * Returns type of task that user inputs.","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"     * If user types an invalid input, an exception is thrown and an error message is shown.","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"     * @param message String input by user.","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"     * @return Task object that user inputs.","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If input by user is incomplete or if user types an invalid input.","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"    public static Task parseTask(String message) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        Task task;","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"        assert message !\u003d null : \"Message should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        assert !message.trim().isEmpty() : \"Message should not be empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        if (message.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"            return parseTodoTask(message);","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        } else if (message.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"            return parseDeadlineTask(message);","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"        } else if (message.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"            return parseEventTask(message);","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops, Boo does not understand what you mean :(\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"                    + \"Please use these keywords: \\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"                    + \"1. list: list your task list\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"                    + \"2. mark: mark a specific task as done (please specify which taskID)\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"                    + \"3. unmark: unmark a specific task as done (please specify which taskID)\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"                    + \"4. delete: delete a specific task from the list (please specify which taskID)\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"                    + \"5. todo/event/deadline: add a todo/event/deadline task\\n\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"     * Parses a todo task input and returns a Todo object.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"     * @param message String input by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"     * @return Todo object with the description provided by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the input is incomplete or invalid.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"    private static Todo parseTodoTask(String message) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"            String description \u003d message.substring(5).trim();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"            assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"            validateDescription(description, \"todo\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"            return new Todo(description);","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs to know what todo task to add to the list!\\n\"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"                    + \"Please add a description of the todo task so Boo can help you!\\n\");","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"     * Parses a deadline task input and returns a Deadline object.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"     * @param message String input by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"     * @return Deadline object with description and deadline date provided by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the input is incomplete or invalid.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"    private static Deadline parseDeadlineTask(String message) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"            String[] details \u003d message.substring(9).split(\"/by\");","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"            String description \u003d details[0].trim();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"            assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"            validateDescription(description, \"deadline\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"            // Check if \u0027/by\u0027 date is provided","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"            String deadlineDate \u003d details[1].trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"            assert deadlineDate !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"            validateDate(deadlineDate, \"deadline\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"            return new Deadline(description, deadlineDate);","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs to know what deadline task to add to the list!\\n\"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"                    + \"Please add a description of the deadline task so Boo can help you!\\n\");","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs a \u0027/by\u0027 time for the deadline task!\\n\"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":"                    + \"Please provide a \u0027/by\u0027 time, in the format of: /by (dd/MM/yyyy HHmm or dd/MM/yyyy)\\n\");","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"     * Parses an event task input and returns an Event task object.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"     * @param message String input by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"     * @return Event object with description, start time, and end time.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the input is incomplete or invalid.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deannapoh"},"content":"    private static Event parseEventTask(String message) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"            String[] details \u003d message.substring(6).split(\"/from|/to\");","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"            String description \u003d details[0].trim();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"            assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deannapoh"},"content":"            validateDescription(description, \"event\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"            String startTime \u003d details[1].trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"            assert startTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":"            validateDate(startTime, \"event\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"            String endTime \u003d details[2].trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"            assert endTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"            validateDate(endTime, \"event\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"            return new Event(description, startTime, endTime);","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs to know what event to add to the list!\\n\"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"                    + \"Please add a description of the event so Boo can help you!\\n\");","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deannapoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs both \u0027/from\u0027 and \u0027/to\u0027 times for the event task!\\n\"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"                    + \"Please provide both times, in the format of: /from (dd/MM/yyyy HHmm or dd/MM/yyyy ) \"","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"                    + \"/to (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-31T16:43:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"     * Validates that the description of a task is not empty.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"deannapoh"},"content":"     * @param description The task description provided by the user.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"deannapoh"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the description is empty.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"deannapoh"},"content":"    private static void validateDescription(String description, String taskType) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"deannapoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs to know what \" + taskType + \" task to add to the list!\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"                    + \"Please add a description of the \" + taskType + \" task so Boo can help you!\\n\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"     * Validates that the date provided for a task is not empty.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"     * @param date The date provided for the task.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the date is empty.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"    private static void validateDate(String date, String taskType) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs a \u0027/by\u0027 time for the \" + taskType + \" task!\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"                    + \"Please provide a valid date in the format of: dd/MM/yyyy HHmm or dd/MM/yyyy\\n\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"deannapoh"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deannapoh"},"content":"     * @param dateTime The date string to parse.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deannapoh"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If the date format is invalid.","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"deannapoh"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws BooException {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"deannapoh"},"content":"            return dateTime.contains(\" \")","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"deannapoh"},"content":"                    ? LocalDateTime.parse(dateTime, DATE_TIME_FORMAT)","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"deannapoh"},"content":"                    : LocalDate.parse(dateTime, DATE_FORMAT).atStartOfDay();","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"deannapoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! You have used the incorrect date format!\\n\"","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"deannapoh"},"content":"                    + \"Please try again with the format dd/MM/yyyy or dd/MM/yyyy HHmm!\\n\");","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:38:17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":190}},{"path":"src/main/java/boo/misc/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.task.Deadline;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.task.Event;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.task.Task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import boo.task.Todo;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":" * Represents a class that is in charge of storing and loading the task history into a hard disk.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"public class Storage {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"     * Constructs a Storage object that allows the task history to be stored in a hard disk.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"     * @param filePath Path to the file that the task history will be stored in.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"     * Saves task history into a file.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"     * If a file has not been created, it creates a file for the task history to be saved into.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"     * @param taskMap Hashmap that contains a list of the task IDs and tasks.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If tasks were not saved successfully.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"    public void saveTasksToFile(HashMap\u003cInteger, Task\u003e taskMap) throws BooException {","lastModifiedDate":"2025-02-12T18:18:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"            assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"Invalid file path\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"            // Create directories if they do not exist","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"            // Write into the file","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : taskMap.entrySet()) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"                int taskId \u003d entry.getKey();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"                Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"                assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"                String taskString \u003d formatTask(entry.getKey(), entry.getValue());","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"                writer.write(taskString + \"\\n\");","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"            writer.close();","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Something went wrong! Boo couldn\u0027t save your tasks :(\\n\");","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"    private String formatTask(int taskId, Task task) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"        String formattedTask \u003d \"taskID: \" + taskId + \" || \" + task.getClass().getSimpleName() + \" task || \"","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"                + \"isDone: \" + task.isDone() + \" || \";","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"        // Handle the task description based on its type","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Task description should not be empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"        if (task instanceof Deadline deadlineTask) {","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"            formattedTask +\u003d description + \" (by: \" + deadlineTask.getFormattedDeadline() + \")\";","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"        } else if (task instanceof Event eventTask) {","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"            formattedTask +\u003d description + \" (from: \" + eventTask.getFormattedStartTime()","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"                    + \" to: \" + eventTask.getFormattedEndTime() + \")\";","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"            formattedTask +\u003d description;","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        return formattedTask;","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"     * Returns tasks that were saved in the file prior.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"     * If file does not exist or is empty, an empty hashmap is returned.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"     * @return Hashmap of all the tasks that were present in the file.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If there was a problem loading the tasks in the file to the hashmap.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"    public HashMap\u003cInteger, Task\u003e loadTasksFromFile() throws BooException {","lastModifiedDate":"2025-02-12T18:18:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"        HashMap\u003cInteger, Task\u003e taskMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"Invalid file path\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"        // If file does not exist or is empty, return an empty map","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"            return taskMap;","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"            String taskLine;","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"            while ((taskLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"                if (taskLine.trim().isEmpty()) {","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"                    continue; // skip empty lines","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"                Task task \u003d parseTask(taskLine, taskMap);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"                    taskMap.put(taskMap.size() + 1, task);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Something went wrong! Boo couldn\u0027t load your tasks :(\\n\");","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"        return taskMap;","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"    private Task parseTask(String line, HashMap\u003cInteger, Task\u003e taskMap) throws BooException {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"        // Split line by \"||\"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"        String[] details \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deannapoh"},"content":"        assert details.length \u003e\u003d 4 : \"Invalid task format in file\";","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"        if (details.length \u003c 4) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oh no! Invalid task format in file.\\n\"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"                    + \"Expected \u0027taskID || taskType || isDone || description\u0027.\\n\");","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deannapoh"},"content":"        int taskId \u003d Integer.parseInt(details[0].split(\":\")[1].trim());","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"        String taskType \u003d details[1].split(\" task\")[0].trim();","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"        boolean isDone \u003d Boolean.parseBoolean(details[2].split(\":\")[1].trim());","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"        String description \u003d details[3].trim();","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Invalid task description\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d switch (taskType) {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"            case \"Todo\" -\u003e new Todo(description);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"            case \"Deadline\" -\u003e createDeadline(description);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deannapoh"},"content":"            case \"Event\" -\u003e createEvent(description);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"            default -\u003e throw new BooException(\"Unknown task type in file.\");","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"        };","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deannapoh"},"content":"        if (isDone) task.setAsDone();","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"        return task;","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"    private Deadline createDeadline(String description) throws BooException {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"        // Parsing Deadline: split by \" (by: \"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"        String[] details \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Deadline task is missing \u0027by\u0027 date.\\n\");","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"        String taskDescription \u003d details[0].trim();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"        String deadlineDate \u003d details[1].replace(\")\", \"\").trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"deannapoh"},"content":"        String formattedDeadline \u003d convertToFormattedDateTime(deadlineDate);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deannapoh"},"content":"        // Create new Deadline task","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"deannapoh"},"content":"        return new Deadline(taskDescription, formattedDeadline);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"    private Event createEvent(String description) throws BooException {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"        // Parsing Event: split by \" (from: \" and \" to: \"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"        String[] details \u003d description.split(\" \\\\(from: \");","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"deannapoh"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Event task is missing \u0027from\u0027 time.\\n\");","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"        String taskDescription \u003d details[0].trim();","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"        String[] timeDetails \u003d details[1].split(\" to: \");","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"        String startTime \u003d timeDetails[0].trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"        String endTime \u003d timeDetails[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"        // Convert \"dd MMM yyy h:mm a\" to \"dd/MMM/yyy hhmm\"","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"        String formattedStartTime \u003d convertToFormattedDateTime(startTime);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"        String formattedEndTime \u003d convertToFormattedDateTime(endTime);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"        return new Event(taskDescription, formattedStartTime, formattedEndTime);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"    private String convertToFormattedDateTime(String dateTime) throws BooException {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"deannapoh"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deannapoh"},"content":"                    dateTime, DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deannapoh"},"content":"            return parsedDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deannapoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Invalid date-time format: \" + dateTime);","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:39:33","isFullCredit":false}],"authorContributionMap":{"deannapoh":190}},{"path":"src/main/java/boo/misc/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.task.Task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":" * Represents a user interface that is in charge of interacting with the user.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"public class Ui {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"     * Prints messages output by the chatbot in the correct format.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"     * @param msg Message that chatbot outputs.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    public String printMessage(String msg) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     * Prints the greeting of the Chatbot when it first starts up.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    public String printGreeting() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"        return \"Hello! I\u0027m Boo! Are you ready to stop ghosting your assignments?\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"     * Prints the goodbye message of the Chatbot when it terminates.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"    public String printGoodbyeMessage() {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"        return \"NOOO please don\u0027t go!! Boo will miss you :( Come back soon!!\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"     * Prints the corresponding message when task is successfully added to task list.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"     * @param taskId ID of the task that was just added.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that was added.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    public String printAddedTask(int taskId, Task task) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        String msg \u003d \"New task? On it. Boo has added this task:\\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"                + \"Now you have \" + (taskId-1) + \" tasks altogether.\\n\"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"                + \"\\nBut don\u0027t worry—take it one step at a time. You\u0027ve got this! Boo believes in you!\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"     * Prints the corresponding message when task is successfully removed from the task list.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"     * @param taskId ID of the task that was just removed.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that was removed.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"    public String printRemovedTask(int taskId, Task task) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"        String msg \u003d \"Got it! Boo has removed this task:\\n \"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"                + task.toString() + \"\\n\" + \"\\nYAY!!! You are now only left with \" + (taskId-1) + \" tasks!\\n\"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"                + \"Keep up the good work!\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"     * Prints the corresponding message when task is successfully marked.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that was marked as done.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"    public String printMarkedTask(Task task) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"        String msg \u003d \"YAY!!! Boo has marked this task as done:\\n \"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"                + task.toString() + \"\\n\" + \"\\nBoo knew you could do it! Boo is so proud of you \u003c3\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"     * Prints the corresponding message when task is successfully unmarked.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that was unmarked.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"    public String printUnmarkedTask(Task task) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"        String msg \u003d \"Noted! Boo has marked this task as not done yet:\\n \"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"                + task.toString() + \"\\n\" + \"\\nNo worries—these things happen! You got this!\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"     * Prints the task history.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"     * @param taskMap HashMap of the task history.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"    public String printTaskHistory(HashMap\u003cInteger, Task\u003e taskMap) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"        if (taskMap.isEmpty()) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"            return \"Yay! You currently have no tasks :)\\nBoo couldn\u0027t be prouder \u003c3\\n\";","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"            String msg \u003d \"These are the tasks you have:\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : taskMap.entrySet()) {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"                int taskId \u003d entry.getKey();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"                Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"                msg +\u003d taskId + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"            msg +\u003d \"\\nThis might seem overwhelming, but don\u0027t stress!\\n\" +","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"                    \"Take it one step at a time and you\u0027ll get them all done in no time! \"","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"                    + \"Boo is rooting for you!\\n\";","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"            return msg;","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":104}},{"path":"src/main/java/boo/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Parser;","lastModifiedDate":"2025-02-22T17:40:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:40:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":" * Represents a Deadline task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":" * A deadline task has a description, an end date and a completion status.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"     * @param deadlineDate Date and/or timing that the task is due, i.e. the deadline of the task.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If user types a date that was not in the format: dd/MM/yyy or dd/MM/yyy HHmm.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    public Deadline(String description, String deadlineDate) throws BooException {","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() :","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"                \"Description for Deadline task should not be empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        this.deadlineDate \u003d Parser.parseDateTime(deadlineDate);","lastModifiedDate":"2025-02-22T17:40:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"        assert this.deadlineDate !\u003d null : \"Deadline date is not properly parsed\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"     * @return A formatted string showing the task type, the task\u0027s completion status, and task description.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"                + \" (by: \" + deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"     * @return A formatted string showing the deadline, in the format dd MMM yyyy h:mm a.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    public String getFormattedDeadline() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        return deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"     * Returns the deadline as a LocalDateTime.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"     * @return The deadline of the task as a LocalDateTime.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"        return deadlineDate;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false}],"authorContributionMap":{"deannapoh":61}},{"path":"src/main/java/boo/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Parser;","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":" * Represents an event task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":" * An event task has a description, a start date, an end date and a completion status.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     * @param startTime Date and/or timing that the event begins.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     * @param endTime Date and/or timing that the event ends.","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If user types a date that was not in the format: dd/MM/yyy or dd/MM/yyy HHmm, or","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"     * if the end of the event is earlier than the start of the event.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    public Event(String description, String startTime, String endTime) throws BooException {","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() :","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"                \"Description for Event task should not be empty\";","lastModifiedDate":"2025-02-23T00:18:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"        this.startTime \u003d Parser.parseDateTime(startTime);","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"        this.endTime \u003d Parser.parseDateTime(endTime);","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:40:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        if (this.endTime.isBefore(this.startTime)) {","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! The \u0027to\u0027 time cannot be before the \u0027from\u0027 time.\\n\"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"                    + \"Please enter the timing again!\\n\");","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30T14:35:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"     * @return A formatted string showing the task type, the task\u0027s completion status, and task description.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"                + \" (from: \" + startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"))","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"                + \" to: \" + endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the start time of the event.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"     *  @return A formatted string showing the start time of the event, in the format dd MMM yyyy h:mm a.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"    public String getFormattedStartTime() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"        return startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the end time of the event.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"     *  @return A formatted string showing the end time of the event, in the format dd MMM yyyy h:mm a.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"    public String getFormattedEndTime() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"        return endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"     * Returns the start time of the event as a LocalDateTime.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"     *  @return The start time of the event as a LocalDateTime.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"        return startTime;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false}],"authorContributionMap":{"deannapoh":80}},{"path":"src/main/java/boo/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"public class Task {","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"    protected String description;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"     * Constructs a Task object.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"     * Task is initially marked as not done.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"        // Assert that the description is not null or empty","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() :","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"                \"Description for Deadline task should not be empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"     * Returns icon that represents if task is marked.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"     * @return String that represents if task is marked.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"    public void setAsDone() {","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"    public void setAsNotDone() {","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        return this.description;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        return this.isDone;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"     * @return A formatted string showing the task\u0027s completion status and description.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"     * Returns the start date of the task as a LocalDateTime.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"     * @return Null for generic tasks.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"        return null;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false}],"authorContributionMap":{"deannapoh":69}},{"path":"src/main/java/boo/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Ui;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.misc.Storage;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import java.util.List;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import java.util.Map;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":" * Represents a list of tasks that can be manipulated.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":" * Tasks can be of any type.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"public class TaskList {","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    private HashMap\u003cInteger, Task\u003e tasksMap;","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    private int taskId;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     * Constructs a list of tasks, in the form of a Hashmap.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"     * Task ID starts at 1 and increases as tasks get added.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"     * @param storage Storage to store and load the task list in a hard disk.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"     * @param ui Interface that interacts with the user.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    public TaskList(Storage storage, Ui ui) throws BooException {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"        assert storage !\u003d null : \"Storage must not be null!\";","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"        assert ui !\u003d null : \"Ui must not be null!\";","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"        this.tasksMap \u003d new HashMap\u003cInteger, Task\u003e();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        this.tasksMap \u003d storage.loadTasksFromFile();","lastModifiedDate":"2025-02-12T18:31:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        if (!tasksMap.isEmpty()) {","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"            this.taskId \u003d tasksMap.size() + 1;","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"            this.taskId \u003d 1;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        assert taskId \u003e 0 : \"Task ID must always be positive\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"     * Saves the task list into a designated hard disk.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    private void save() throws BooException {","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        storage.saveTasksToFile(tasksMap);","lastModifiedDate":"2025-02-12T18:31:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28T18:05:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    public HashMap\u003cInteger, Task\u003e getTaskMap() {","lastModifiedDate":"2025-01-30T18:43:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"        sortTasks();","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"        return this.tasksMap;","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"     * Adds a specified task to the task list.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"     * Prints and saves the added task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that is to be added to the task list.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"    public String addTask(Task task) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"        assert task !\u003d null : \"Task must not be null\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"        tasksMap.put(taskId, task);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"        this.taskId++;","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"        updateTasks();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"        return ui.printAddedTask(taskId, task);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"     * Prints the deleted task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"     * @param input Input provided by the user to pinpoint the task to be deleted.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If task ID could not be found or if task ID is not an integer.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"    public String deleteTask(String input) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input must not be null or empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        int taskId \u003d parseTaskId(input);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d getTask(taskId);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"        tasksMap.remove(taskId);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"        shiftTasks(taskId);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"        updateTasks();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"        return ui.printRemovedTask(this.taskId, task);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"    private void shiftTasks(int deletedTaskId) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"        for (int i \u003d deletedTaskId + 1; i \u003c taskId; i++) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"            Task shiftedTask \u003d tasksMap.get(i);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"            if (shiftedTask !\u003d null) {","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"                tasksMap.put(i - 1, shiftedTask);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"                tasksMap.remove(i);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"        taskId--;","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22T15:39:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"     * Prints the marked task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"     * @param input Input provided by the user to pinpoint the task to be marked as done.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If task ID could not be found or if task ID is not an integer.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"    public String markAsDone(String input) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input must not be null or empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":"        int taskId \u003d parseTaskId(input);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d tasksMap.get(taskId);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oh no! Boo could not find task with ID \" + taskId + \".\\n\"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deannapoh"},"content":"                    + \"Maybe you mixed up the task IDS? Please try again!\\nThere are currently \"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"                    + tasksMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"        task.setAsDone();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"        updateTasks();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"        return ui.printMarkedTask(task);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"     * Unmarks a specified task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"     * Prints the unmarked task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deannapoh"},"content":"     * @param input Input provided by the user to pinpoint the task to be marked as not done.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If task ID could not be found or if task ID is not an integer.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"    public String markAsNotDone(String input) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input must not be null or empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deannapoh"},"content":"        int taskId \u003d parseTaskId(input);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d tasksMap.get(taskId);","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oh no! Boo could not find task with ID \" + taskId + \".\\n\"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deannapoh"},"content":"                    + \"Maybe you mixed up the task IDS? Please try again!\\nThere are currently \"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"                    + tasksMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-22T01:55:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deannapoh"},"content":"        task.setAsNotDone();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"        updateTasks();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deannapoh"},"content":"        return ui.printUnmarkedTask(task);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"     * Finds tasks that contain a specific keyword.","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"     * Prints those tasks that contain that keyword.","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"     * @param input Input that contains the keyword used to find the task.","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If no keyword is provided.","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"deannapoh"},"content":"    public String findTask(String input) throws BooException {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"deannapoh"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input must not be null or empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"        String keyword \u003d extractKeyword(input);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deannapoh"},"content":"        String matchedTask \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"deannapoh"},"content":"        int numMatches \u003d 0;","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"deannapoh"},"content":"        for (int taskId : tasksMap.keySet()) {","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"deannapoh"},"content":"            Task task \u003d tasksMap.get(taskId);","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"            assert task !\u003d null : \"Task should not be null in the task map\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"                numMatches++;","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"deannapoh"},"content":"                matchedTask +\u003d numMatches + \". \" + task + \"\\n\";","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"        if (numMatches \u003d\u003d 0) {","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"            matchedTask \u003d \"Oh no! Boo could not find any tasks that contain that keyword :(\\n\";","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"        return ui.printMessage(matchedTask);","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"    private String extractKeyword(String input) throws BooException {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"            String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs a keyword to find tasks.\\n\");","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"            return keyword;","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"deannapoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs a keyword to find tasks.\\n\");","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-01T01:08:53","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"deannapoh"},"content":"     * Sorts tasks based on their dates.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"deannapoh"},"content":"     * Tasks without dates appear before the tasks with dates.","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"deannapoh"},"content":"     * Re-assign task IDs based on the new order of the tasks.","lastModifiedDate":"2025-02-22T18:20:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"deannapoh"},"content":"    private void sortTasks() {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"deannapoh"},"content":"        List\u003cMap.Entry\u003cInteger, Task\u003e\u003e sortedEntries \u003d tasksMap.entrySet().stream()","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"deannapoh"},"content":"                .sorted(Map.Entry.comparingByValue(this::compareTasksByDate))","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"deannapoh"},"content":"                .toList();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"deannapoh"},"content":"        reassignTaskIds(sortedEntries);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"deannapoh"},"content":"    private int compareTasksByDate(Task task1, Task task2) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"deannapoh"},"content":"        // If both tasks have no date, they stay in original order","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"deannapoh"},"content":"        if (task1.getStartDate() \u003d\u003d null \u0026\u0026 task2.getStartDate() \u003d\u003d null) {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"deannapoh"},"content":"            return 0;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"deannapoh"},"content":"        // If task1 has no date, but task2 has a date, task1 should appear first","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"deannapoh"},"content":"        if (task1.getStartDate() \u003d\u003d null) {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"deannapoh"},"content":"            return -1;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"deannapoh"},"content":"        // If task2 has a date, but task1 has no date, task2 should appear after task1","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"deannapoh"},"content":"        if (task2.getStartDate() \u003d\u003d null) {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"deannapoh"},"content":"            return 1;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"deannapoh"},"content":"        return task1.getStartDate().compareTo(task2.getStartDate());","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"deannapoh"},"content":"    private void reassignTaskIds(List\u003cMap.Entry\u003cInteger, Task\u003e\u003e sortedEntries) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"deannapoh"},"content":"        tasksMap.clear();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"deannapoh"},"content":"        int newId \u003d 1;","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"deannapoh"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : sortedEntries) {","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"deannapoh"},"content":"            tasksMap.put(newId++, entry.getValue());","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"deannapoh"},"content":"        taskId \u003d newId;","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"deannapoh"},"content":"    private Task getTask(int taskId) throws BooException {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d tasksMap.get(taskId);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"deannapoh"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo could not find Task with ID \" + taskId + \" :(\\n\"","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"deannapoh"},"content":"                    + \"Maybe you mixed up the task IDs? Please try again!\\n\"","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"deannapoh"},"content":"                    + \"There are currently \" + tasksMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-02-23T01:37:38","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"deannapoh"},"content":"        return task;","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"deannapoh"},"content":"    private int parseTaskId(String input) throws BooException {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"deannapoh"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"deannapoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs you to specify a task ID.\\n\"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"deannapoh"},"content":"                    + \"Please try again so that Boo can help :)\\n\");","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"deannapoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs your Task ID to be an integer!\\n\");","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"deannapoh"},"content":"    private void updateTasks() throws BooException {","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"deannapoh"},"content":"        sortTasks();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"deannapoh"},"content":"        save();","lastModifiedDate":"2025-02-22T17:41:32","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-12T22:07:09","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19T22:23:20","isFullCredit":false}],"authorContributionMap":{"deannapoh":242}},{"path":"src/main/java/boo/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":" * A todo class has a description and a completion status.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description for Todo task should not be empty\";","lastModifiedDate":"2025-02-12T18:06:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"     * @return A formatted string showing the task type, the task\u0027s completion status, and task description.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20T00:55:42","isFullCredit":false}],"authorContributionMap":{"deannapoh":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.12\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.12\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"boo.misc.MainWindow\"\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-21T18:50:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false}],"authorContributionMap":{"deannapoh":16}},{"path":"src/test/java/boo/misc/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.task.Task;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":" * Represents a simple implementation of the Storage class that is used for unit testing.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":" * No tasks are saved into a hard drive.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":" * There are only 2 tasks present in the tasksMap.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"public class StorageStub extends Storage{","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"     * Constructs a mock Storage object.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"     * Nothing is saved in a hard disk.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    public StorageStub() {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"        super(\"\"); // passing an empty file path","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"     * Mock saveTask method.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"     * Nothing is saved in the hard disk.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"     * @param tasksMap List of tasks.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    public void saveTasksToFile(HashMap\u003cInteger, Task\u003e tasksMap){","lastModifiedDate":"2025-02-12T18:18:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"     * Mock loadTask method.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"     * Only two tasks are present in the list of tasks.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"    public HashMap\u003cInteger, Task\u003e loadTasksFromFile(){","lastModifiedDate":"2025-02-12T18:18:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"       HashMap\u003cInteger, Task\u003e tasksMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"       tasksMap.put(1, new Task(\"Assignment\"));","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"       tasksMap.put(2, new Task(\"Assignment\"));","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"       return tasksMap;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":43}},{"path":"src/test/java/boo/misc/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.misc;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.task.Task;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":" * Represents a simple implementation of the Ui class that is used for unit testing.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"     * Mock printRemovedTask method.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"     * Same message is always printed.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"     * @param taskId ID of the task that was removed.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"     * @param task Task that was removed.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    public String printRemovedTask(int taskId, Task task) {","lastModifiedDate":"2025-02-06T14:32:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"        String msg \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"                + \"Noted! Boo has removed/added this task:\\n \"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"                + \"[T] [ ] Assignment\" + \"\\n\" + \"Now you have \" + 1 + \" tasks in the list.\\n\"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"        return msg;","lastModifiedDate":"2025-02-12T18:18:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":26}},{"path":"src/test/java/boo/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import boo.misc.StorageStub;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import boo.misc.UiStub;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":" * Used to test methods in the TaskList class.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"     * Tests if the method deleteTask works","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"     *","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"     * @throws BooException If task ID is not an integer or if task ID cannot be found.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    @Test","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    public void deleteTaskTest() throws BooException {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"        TaskList taskList \u003d new TaskList(new StorageStub(), new UiStub());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"        // Test with non-integer number","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"        Exception exception \u003d assertThrows(BooException.class, () -\u003e taskList.deleteTask(\"delete 1.05\"));","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        String expectedMessage \u003d \"Oops! Boo needs your Task ID to be an integer!\\n\";","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"        // Test with no description","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"        Exception exception2 \u003d assertThrows(BooException.class, () -\u003e taskList.deleteTask(\"delete\"));","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"        String expectedMessage2 \u003d \"Oops! Boo needs you to specify a task ID to mark it as done.\\n\"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"                + \"Please try again so that Boo can help :)\\n\";","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"        // Test if a task is deleted","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"        int currentMapSize \u003d taskList.getTaskMap().size();","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"        taskList.deleteTask(\"delete 1\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        String expectedMessage3 \u003d \"Got it! Boo has removed this task:\\n \"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"                + \"[T] [ ] Assignment\" + \"\\n\" + \"\\nYAY!!! You are now only left with \" + 1 + \" tasks!\\n\"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"                + \"Keep up the good work!\\n\";","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-02-22T15:26:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"        assertEquals(currentMapSize - 1, taskList.getTaskMap().size());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"        // Test if method works with capitalised \"Delete\"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        int currentMapSize2 \u003d taskList.getTaskMap().size();","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"        taskList.deleteTask(\"Delete 1\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"        assertEquals(currentMapSize2 - 1, taskList.getTaskMap().size());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":54}},{"path":"src/test/java/boo/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"package boo.task;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import boo.misc.BooException;","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"/**","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":" * Used to test methods in the Task class.","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":" */","lastModifiedDate":"2025-01-31T17:56:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    Task task \u003d new Task(\"Homework\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"     * Tests if the method markAsDone works.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    @Test","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    public void setAsDoneTest() {","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d new Task(\"Homework\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"        assertFalse(task.isDone(), \"Task should not initially be marked as done\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"        assertEquals(\"[ ] Homework\", task.toString());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"        task.setAsDone();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"        assertTrue(task.isDone(), \"Task should be marked as done\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"        assertEquals(\"[X] Homework\", task.toString());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    /**","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"     * Tests if the method markAsNotDone works.","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"     */","lastModifiedDate":"2025-01-31T15:10:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"    @Test","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"    public void setAsNotDoneTest() {","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"        Task task \u003d new Task(\"Homework\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        task.setAsDone();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"        assertTrue(task.isDone(), \"Task should be marked as done\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        assertEquals(\"[X] Homework\", task.toString());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"        task.setAsNotDone();","lastModifiedDate":"2025-01-31T16:32:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"        assertFalse(task.isDone(), \"Task is no longer marked as done\");","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"        assertEquals(\"[ ] Homework\", task.toString());","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-30T22:56:39","isFullCredit":false}],"authorContributionMap":{"deannapoh":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"todo borrow book","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"list","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"mark 1","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"mark 2","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"unmark 1","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"bye","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false}],"authorContributionMap":{"deannapoh":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"java -classpath ..\\bin boo.Boo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-30T19:41:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"java -classpath ../bin Boo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21T17:10:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":37}}]
