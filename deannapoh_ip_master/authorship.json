[{"path":"src/main/java/Boo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"public class Boo {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"    public static void main(String[] args) throws BooException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"        Greeting greeting \u003d new Greeting();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"        // Print greeting message","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"        greeting.printGreeting();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"        // Create scanner to read user inputs","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"            // Read user input","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"                // Exit and show goodbye message if user types \"bye\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"                    // Print goodbye message","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"                    greeting.printGoodbyeMessage();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"                    break;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"                } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"                    // Print list if user types \"list\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"                    if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"                        taskList.printHistory();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"                    } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"                        taskList.markAsDone(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"                    } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"                        taskList.markAsNotDone(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"                    } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"                        taskList.deleteTask(input);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"                    } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"                        // Else, add message and print the added message","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"                        taskList.addTask(input);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"            } catch (BooException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        scanner.close();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"deannapoh":54}},{"path":"src/main/java/BooException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"public class BooException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"    public BooException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"        super(\"____________________________________________________________\\n\" + message + \"____________________________________________________________\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"deannapoh":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    public Deadline(String description, String by) throws BooException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"            // Check if time is present in the input","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"            if (by.contains(\" \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"                // Time is provided, parse it as LocalDateTime","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"                this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"            } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"                // No time, parse it as LocalDate","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"                this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! You have used the incorrect date format!\\nPlease try again with the format dd/MM/yyyy or dd/MM/yyyy HHmm!\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"    public String getBy() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"deannapoh":34}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    public Event(String description, String from, String to) throws BooException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"            // Check if time is present in the input","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"            if (from.contains(\" \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"                // Time is provided, parse it as LocalDateTime","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"                this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"            } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"                // No time, parse it as LocalDate","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"                this.from \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"            // Check if time is present in the input","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"            if (to.contains(\" \")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"                // Time is provided, parse it as LocalDateTime","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"                this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"            } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"                // No time, parse it as LocalDate","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"                this.to \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"            // Ensure that \u0027to\u0027 is not before \u0027from\u0027","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"            if (this.to.isBefore(this.from)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! The \u0027to\u0027 time cannot be before the \u0027from\u0027 time. Please enter the timing again!\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! You have used the incorrect date format!\\nPlease try again with the format dd/MM/yyyy or dd/MM/yyyy HHmm!\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"    public String getFrom() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    public String getTo() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"deannapoh":53}},{"path":"src/main/java/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"public class Greeting {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"    private String greetingMessage;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"    private String goodbyeMessage;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"    public Greeting() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"        this.greetingMessage \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"                + \"Hello! I\u0027m Boo\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"        this.goodbyeMessage \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    public void printGreeting() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"        System.out.println(this.greetingMessage);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"        System.out.println(this.goodbyeMessage);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"deannapoh":23}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"import java.io.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"    // Save task in file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    // Save task in file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"    public void saveTask(HashMap\u003cInteger, Task\u003e taskMap) throws BooException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"            // Create directories if they do not exist","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"            // Write into the file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : taskMap.entrySet()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"                int taskId \u003d entry.getKey();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"                Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"                // Start building the task string","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"                String taskString \u003d \"taskID: \" + taskId + \" || \" + task.getClass().getSimpleName() + \" task || \";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"                taskString +\u003d \"isDone: \" + task.isDone + \" || \"; // Assuming Task has isDone() method","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"                // Handle the task description based on its type","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"                String description \u003d task.description;  // Assuming Task has a getDescription() method","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"                    Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"                    taskString +\u003d description + \" (by: \" + deadlineTask.getBy() + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"                    Event eventTask \u003d (Event) task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"                    taskString +\u003d description + \" (from: \" + eventTask.getFrom() + \" to: \" + eventTask.getTo() + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"                } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"                    taskString +\u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"                // Write the task string to the file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"                writer.write(taskString + \"\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"            writer.close();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo couldn\u0027t save your tasks :(\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"    // Read tasks from the file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"    // Returns HashMap of tasks in file","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"    public HashMap\u003cInteger, Task\u003e loadTasks() throws BooException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"        HashMap\u003cInteger, Task\u003e taskMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"            // If file does not exist or is empty, return an empty map","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"            return taskMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"            String line;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"                // Check if file is empty","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"                if (line.trim().isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"                    // Skip empty lines","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"                    continue;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"                // Split line by \"||\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"                String[] parts \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Invalid task format in file. Expected \u0027taskID || taskType || isDone || description\u0027.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"                try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"                    // Extract taskID, type, isDone, and description","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"                    int taskId \u003d Integer.parseInt(parts[0].split(\":\")[1].trim());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"                    String type \u003d parts[1].split(\"task\")[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"                    boolean isDone \u003d Boolean.parseBoolean(parts[2].split(\":\")[1].trim());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"                    String description \u003d parts[3].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"                    // Create the task based on the type","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"                    Task task \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"                    if (type.equals(\"Todo\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"                    } else if (type.equals(\"Deadline\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"                        // Parsing Deadline: split by \" (by: \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"                        String[] details \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"                        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"                            throw new BooException(\"Oops! Deadline task is missing \u0027by\u0027 date.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"                        String taskDescription \u003d details[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"                        String by \u003d details[1].replace(\")\", \"\").trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"                        // Convert \"dd MMM yyy h:mm a\" to \"dd/MMM/yyy hhmm\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"                        LocalDateTime parsedBy \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"                        String newBy \u003d parsedBy.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"                        task \u003d new Deadline(taskDescription, newBy);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"                    } else if (type.equals(\"Event\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"                        // Parsing Event: split by \" (from: \" and \" to: \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"                        String[] details \u003d description.split(\" \\\\(from: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":"                        if (details.length \u003c 2) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"                            throw new BooException(\"Oops! Event task is missing \u0027from\u0027 time.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"                        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"                        String taskDescription \u003d details[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deannapoh"},"content":"                        String[] fromTo \u003d details[1].split(\" to: \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"                        String from \u003d fromTo[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"                        String to \u003d fromTo[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"                        // Convert \"dd MMM yyy h:mm a\" to \"dd/MMM/yyy hhmm\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"                        LocalDateTime parsedFrom \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"                        String newFrom \u003d parsedFrom.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deannapoh"},"content":"                        LocalDateTime parsedTo \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"                        String newTo \u003d parsedTo.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"                        task \u003d new Event(taskDescription, newFrom, newTo);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"                    } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"                        throw new BooException(\"Oh no! Boo could not identify the task type found in file.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deannapoh"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"                    // Mark the task as done if necessary","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"                    if (isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deannapoh"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"                    taskMap.put(taskId, task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deannapoh"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Error! Boo could not parse task: \" + line);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo couldn\u0027t load your tasks :(\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"        return taskMap;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"deannapoh":147}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"public class Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"    protected String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"deannapoh":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"import java.util.Map;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"public class TaskList {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"    private HashMap\u003cInteger, Task\u003e taskMap;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"    private int taskId;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"    private Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"    public TaskList() throws BooException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"        this.taskMap \u003d new HashMap\u003cInteger, Task\u003e();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"        this.storage \u003d new Storage(\"./data/Boo.txt\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"        this.taskMap \u003d storage.loadTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"        if (!taskMap.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"            this.taskId \u003d taskMap.size() + 1; // Set taskId based on loaded tasks","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"            this.taskId \u003d 1;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"deannapoh"},"content":"    private void save() throws BooException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"        storage.saveTask(taskMap);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"deannapoh"},"content":"    // Add task to the list and print the added task","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    public void addTask(String message) throws BooException{","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"        Task task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"deannapoh"},"content":"        // Create new todo task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"deannapoh"},"content":"        if (message.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"deannapoh"},"content":"                String description \u003d message.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"deannapoh"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs to know what todo task to add to the list!\\nPlease add a description of the todo task so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs to know what todo task to add to the list!\\nPlease add a description of the todo so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"            // Create new deadline task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        } else if (message.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"                String[] details \u003d message.substring(9).split(\"/by\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"                String description \u003d details[0].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"                // Check if there is a description","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs to know what deadline task to add to the list!\\nPlease add a description of the deadline task so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"deannapoh"},"content":"                // Check if \u0027/by\u0027 date is provided","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"deannapoh"},"content":"                String by \u003d details[1].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"                if (by.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs a \u0027/by\u0027 time for the deadline task!\\nPlease provide a \u0027/by\u0027 time, in the format of: /by (dd/MM/yyyy HHmm or dd/MM/yyyy)\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs to know what deadline task to add to the list!\\nPlease add a description of the deadline task so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"deannapoh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs a \u0027/by\u0027 time for the deadline task!\\nPlease provide a \u0027/by\u0027 time, in the format of: /by (dd/MM/yyyy HHmm or dd/MM/yyyy)\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"deannapoh"},"content":"            // Create new event task","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"deannapoh"},"content":"        } else if (message.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"deannapoh"},"content":"            try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"                String[] details \u003d message.substring(6).split(\"/from|/to\");","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"deannapoh"},"content":"                String description \u003d details[0].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"deannapoh"},"content":"                // Check if there is a description","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs to know what event to add to the list!\\nPlease add a description of the event so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"                // Check if \u0027/from\u0027 date is provided","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"                String from \u003d details[1].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"                if (from.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs a \u0027/from\u0027 time for the event task!\\nPlease provide a \u0027/from\u0027 time, in the format of: /from (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"                String to \u003d details[2].trim();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"                if (to.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs a \u0027/to\u0027 time for the event task!\\nPlease provide a \u0027/to\u0027 time, in the format of: /to (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"deannapoh"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs to know what event to add to the list!\\nPlease add a description of the event so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"                if (from.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs a \u0027/from\u0027 time for the event task!\\nPlease provide a \u0027/from\u0027 time, in the format of: /from (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"                if (to.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"                    throw new BooException(\"Oops! Boo needs a \u0027/to\u0027 time for the event task!\\nPlease provide a \u0027/to\u0027 time, in the format of: /to (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs to know what event to add to the list!\\nPlease add a description of the event so Boo can help you!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oops! Boo needs both \u0027/from\u0027 and \u0027/to\u0027 times for the event task!\\nPlease provide both times, in the format of: /from (dd/MM/yyyy HHmm or dd/MM/yyyy ) /to (dd/MM/yyyy HHmm or dd/MM/yyyy )\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"            // Else, throw exception","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops, Boo does not understand what you mean :(\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"deannapoh"},"content":"                                            + \"Please use these keywords: \\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"deannapoh"},"content":"                                            + \"1. list: list our your task list\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"deannapoh"},"content":"                                            + \"2. mark: mark a specific task as done (please specify which taskID)\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"                                            + \"3. unmark: unmark a specific task as done (please specify which taskID)\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"deannapoh"},"content":"                                            + \"4. delete: delete a specific task from the list (please specify which taskID)\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"deannapoh"},"content":"                                            + \"5. todo/event/deadline: add a todo/event/deadline task\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"deannapoh"},"content":"        taskMap.put(taskId, task);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"deannapoh"},"content":"        String addedTask \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"deannapoh"},"content":"                + \"Got it. Boo has added this task:\\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"deannapoh"},"content":"                + \"Now you have \" + this.taskId + \" tasks in the list.\\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"deannapoh"},"content":"        System.out.println(addedTask);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"deannapoh"},"content":"        this.taskId++;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"        save();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"deannapoh"},"content":"    // Display the list of tasks","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"deannapoh"},"content":"    public void printHistory() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"deannapoh"},"content":"        if (this.taskMap.isEmpty()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"Yay! You currently have no tasks :) \\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"deannapoh"},"content":"        } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"deannapoh"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : taskMap.entrySet()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"deannapoh"},"content":"                int taskId \u003d entry.getKey();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"deannapoh"},"content":"                Task task \u003d entry.getValue();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"deannapoh"},"content":"                System.out.println(taskId + \". \" + task.toString());","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"deannapoh"},"content":"    public void deleteTask(String input) throws BooException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"deannapoh"},"content":"            int taskId \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"deannapoh"},"content":"            Task task \u003d taskMap.get(taskId);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"deannapoh"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oh no! Boo could not find task with ID \" + taskId + \".\\nMaybe you mixed up the task IDS? Please try again!\\nThere are currently \" + taskMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"deannapoh"},"content":"            this.taskMap.remove(taskId);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"deannapoh"},"content":"            //shift the remaining tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"            for (int i \u003d taskId + 1; i \u003c\u003d this.taskId - 1; i++) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"deannapoh"},"content":"                Task shiftedTask \u003d taskMap.get(i);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"deannapoh"},"content":"                if (shiftedTask !\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"deannapoh"},"content":"                    taskMap.put(i - 1, shiftedTask);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"deannapoh"},"content":"                    taskMap.remove(i);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"                }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"            // total taskID - 1 since one task was deleted","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"deannapoh"},"content":"            this.taskId--;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"            save();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"Noted! Boo has removed this task:\\n \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"                    + task.toString() + \"\\n\" + \"Now you have \" + (this.taskId-1) + \" tasks in the list.\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"                    +\"____________________________________________________________\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs you to specify a task ID to delete it.\\nPlease try again so that Boo can help :)\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs your Task ID to be an integer!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"    // Mark task as done and print out marked task","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"    public void markAsDone(String input) throws BooException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"deannapoh"},"content":"            int taskId \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deannapoh"},"content":"            Task task \u003d taskMap.get(taskId);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deannapoh"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oh no! Boo could not find task with ID \" + taskId + \".\\nMaybe you mixed up the task IDS? Please try again!\\nThere are currently \" + taskMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"deannapoh"},"content":"            task.markAsDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"deannapoh"},"content":"            save();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"Nice! Boo has marked this task as done:\\n \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"deannapoh"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"deannapoh"},"content":"                    + \"____________________________________________________________\\n\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"deannapoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs you to specify a task ID to mark it as done.\\nPlease try again so that Boo can help :)\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"deannapoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs your Task ID to be an integer!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"deannapoh"},"content":"    // mark task as undone and print out unmarked task","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"deannapoh"},"content":"    public void markAsNotDone(String input) throws BooException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"deannapoh"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"deannapoh"},"content":"            int taskId \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"deannapoh"},"content":"            Task task \u003d taskMap.get(taskId);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"deannapoh"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"deannapoh"},"content":"                throw new BooException(\"Oh no! Boo could not find task with ID \" + taskId + \".\\nMaybe you mixed up the task IDS? Please try again!\\nThere are currently \" + taskMap.size() + \" tasks in your task list\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"deannapoh"},"content":"            }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"deannapoh"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"deannapoh"},"content":"            save();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"deannapoh"},"content":"            System.out.println(\"OK, Boo has marked this task as not done yet:\\n \"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"deannapoh"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"deannapoh"},"content":"                    + \"____________________________________________________________\\n\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"deannapoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs you to specify a task ID to mark it as done.\\nPlease try again so that Boo can help :)\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"deannapoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"deannapoh"},"content":"            throw new BooException(\"Oops! Boo needs your Task ID to be an integer!\\n\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"deannapoh"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"deannapoh":216}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"public class Todo extends Task{","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"        super(description);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"deannapoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"deannapoh"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"deannapoh":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deannapoh"},"content":"todo borrow book","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"deannapoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"deannapoh"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"deannapoh"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"deannapoh"},"content":"bye","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"deannapoh":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"deannapoh"},"content":"java -classpath ..\\bin Boo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"deannapoh"},"content":"java -classpath ../bin Boo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":37}}]
