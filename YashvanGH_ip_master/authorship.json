[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"checkstyle {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"    archiveBaseName \u003d \"tyrese\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"jar {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"    manifest {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        attributes \u0027Main-Class\u0027: \u0027gui.Launcher\u0027","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":29,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"# Tyrese User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"## Introduction","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"What\u0027s going on, guys? Tyrese Here!","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"I\u0027m a pretty chill guy that likes to have keep my stuff in order you know?","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"Anyways! Here\u0027s what I can do for you:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"- Add tasks without dates (todo)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"- Add deadlines with specific due dates (deadline)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"- Schedule events with start and end times (event)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"- Track and manage your tasks with ease (list, mark, unmark, delete, save, find)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"### Note:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"- When opening the bot, drag the window slightly and it will auto adjust to its correct width!","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"- The priority command is optional","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"  - If no value is provided, it will default to LOW","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"## Features","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"### Adding Todos","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"Add a task without a specific date or time.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"`todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"`todo Buy groceries`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"A new task \"Buy groceries\" will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"### Adding Deadlines","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"Add a task with a specific due date.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"`deadline \u003cdescription\u003e /by \u003cD/M/YYYY\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"`deadline Submit assignment /by 25/1/2025`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"A new task \"Submit assignment\" with a due date of 25th January 2025 will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"### Adding Events","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"Add an event with a start and end time.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"`event \u003cdescription\u003e /from \u003cD/M/YYYY HHmm\u003e /to \u003cD/M/YYYY HHmm\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"`event Project meeting /from 21/1/2025 1000 /to 21/1/2025 1200`","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"A new event \"Project meeting\" scheduled from 10:00 to 12:00 on 21st January 2025 will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"### Deleting Tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"Delete a task from task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"`delete \u003ctask_number\u003e`","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"`delete 2`","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"The task at the specified index will be deleted and the list will be updated accordingly.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"### Viewing Your Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"Display all your tasks in a list format.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"`list`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"A list of all your tasks, deadlines, and events will be displayed, showing their status (done or not done).","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"### Marking Tasks as Done","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"Mark a specific task as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"`mark 2`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"Task number 2 will be marked as done and will not be saved to save file.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"### Unmarking Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"Unmark a specific task as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"`unmark 2`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"Task number 2 will be marked as incomplete.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"### Finding Tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"Finds a specific task.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"Usage: ```find \u003cdescription\u003e```","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome: Finds all the tasks with a matching description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"---","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"### Exiting the Application:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"Say your goodbyes guys!","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"`exit`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"The application will close out.","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":110,"-":23}},{"path":"src/main/java/exceptions/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class handles the exceptions thrown when creating instances of the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * in the {@link tasks.Todo Todo}, {@link tasks.Deadline Deadline}","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * and {@link tasks.Event Event} classes.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class MarkException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    public MarkException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"YashvanGH":14}},{"path":"src/main/java/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class handles the exceptions thrown by operations such as find, delete, etc.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * in the {@link tasks.TaskManager TaskManager} Class.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"    public TaskException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"YashvanGH":13}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Tyrese.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"    private void flip() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * Creates a dialog box for the user.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"     * Creates a dialog box for Tyrese (bot).","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"    public static DialogBox getTyreseDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        db.flip();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        db.displayPicture.setTranslateY(10);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        return db;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":69}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"public class Launcher {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"        Application.launch(Tyrese.class, args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":12}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import tasks.TaskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import tasks.parser.UserCommandParser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"public class MainWindow {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/samurai_doge.png\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gigachad.png\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"     * Initialises the scrollPane and userInput placeholder text.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        // Automatically scrolls to the latest message","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"                DialogBox.getTyreseDialog(","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"                        \"__________________________________________________\\n\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t\\t\\tIt\u0027s ya boi Tyrese!\\n\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t    Type \u0027help\u0027 to see what I can do! \\n\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"                        + \"__________________________________________________\\n\", botImage)","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        );","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"     * Sets the TaskManager instance.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The task manager instance.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"    public void setTaskManager(TaskManager taskManager) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"     * Handles user input and displays response based on input.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        if (!input.isEmpty() \u0026\u0026 taskManager !\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"            boolean[] isRun \u003d { true };","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"            String response \u003d UserCommandParser.parseCommand(input, taskManager, isRun);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"                    DialogBox.getTyreseDialog(response, botImage)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"            taskManager.saveUnmarkedTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":87}},{"path":"src/main/java/gui/Tyrese.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package gui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import tasks.TaskManager;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" * This class handles the main logic for interaction.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"public class Tyrese extends Application {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    private TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Tyrese.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"            AnchorPane root \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            stage.setMinHeight(800);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"            stage.setMinWidth(1200);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"            stage.setTitle(\"Tyrese Task Manager\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"            controller.setTaskManager(taskManager);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            stage.show();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"            try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                taskManager.loadTasks();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"                System.out.println(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"                        \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t gabba\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"                );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":54}},{"path":"src/main/java/storage/SaveFileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * This class handles input and output to the savedata folder.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"public class SaveFileIO {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    private static final String DIRECTORY \u003d System.getProperty(\"user.dir\") + File.separator + \"savedata\";","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final String FILE_NAME \u003d \"tyrese.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"     * Writes to the tyrese.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"     * @param taskList The tasklist containing unmarked tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If tyrese.txt cannot be written to.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    public static void writeToSaveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"        assert taskList !\u003d null : \"Task List should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d getFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        FileWriter fw;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"                assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"                fw.write(task + System.lineSeparator());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t write to the savedata file\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        fw.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * Creates the savedata directory and tyrese.txt file to save the data to.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * @return The file to write and save the data to.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If savedata directory or tyrese.txt file cannot be created.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    private static File getFile() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"        File directory \u003d new File(DIRECTORY);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d new File(directory, FILE_NAME);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"        // This ensures directory exists by attempting to create it","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t create the savedata directory...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        assert directory.exists() : \"Directory should exist after mkdirs()\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        // This ensures file exists by attempting to create it","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t create the savedata file...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        assert file.exists() : \"File should exist after createNewFile()\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        return file;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":67}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.priority.TaskPriority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * This class represents a task with a deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" * It extends the {@link Task} class and includes a specific date and time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Deadline class.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the deadline task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * @param deadline This is when the task needs to be completed by.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    private Deadline(String description, LocalDateTime deadline, TaskPriority taskPriority) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description should not be null or blank\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        assert deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        assert taskPriority !\u003d null : \"TaskPriority should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Deadline.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"     * A factory method to parse input and create a Deadline object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the deadline task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"    public static Deadline create(String input) throws TaskException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"                    + \"/priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        String deadlineTask \u003d parts[0].substring(8).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        if (deadlineTask.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to describe bro? An abstract concept? Write a description!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /priority \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"            deadline \u003d LocalDateTime.parse(deadlineParts[0].trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d (deadlineParts.length \u003e 1)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"                    ? TaskPriority.valueOf(deadlineParts[1].toUpperCase())","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"                    : TaskPriority.LOW;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"        return new Deadline(deadlineTask, deadline, taskPriority);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the deadline task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        assert deadline !\u003d null : \"Deadline should not be null before formatting\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"                + \" (by: \" + this.deadline.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":93}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.priority.TaskPriority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * This class represents a task with a more specific deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" * It extends the {@link Task} class and includes a specific start and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Deadline class.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the deadline task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * @param startTime This is when the task starts.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * @param endTime This is when the task must be completed by.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"    private Event(LocalDateTime startTime, LocalDateTime endTime, String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description should not be null or blank\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        assert startTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        assert endTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        assert taskPriority !\u003d null : \"TaskPriority should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Event.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * A factory method to parse input and create an Event object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the event task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Event object.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    public static Event create(String input) throws TaskException {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /from \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"                    + \"\u003cend\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"One would think that a start and end time come as a pair wouldn\u0027t you?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        String eventTask \u003d parts[0].substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"        String startTimeString \u003d timeParts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        String[] endTimePriority \u003d getTimePriority(timeParts, eventTask, startTimeString);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"        String endTimeString \u003d endTimePriority[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d (endTimePriority.length \u003e 1)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"                    ? TaskPriority.valueOf(endTimePriority[1].toUpperCase())","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"                    : TaskPriority.LOW;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"        // Parse date-time strings","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"            startTime \u003d LocalDateTime.parse(startTimeString, INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"            endTime \u003d LocalDateTime.parse(endTimeString, INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"            validateEventTimes(startTime, endTime);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"        return new Event(startTime, endTime, eventTask, taskPriority);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"    private static String[] getTimePriority(String[] timeParts, String eventTask, String startTimeString)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"            throws TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"        assert timeParts !\u003d null \u0026\u0026 timeParts.length \u003e 1 : \"Time parts should contain start and end times\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"        String endTimeAndPriority \u003d timeParts[1];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"        if (eventTask.isEmpty()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to describe bro? An abstract concept? Write a description!\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"        if (startTimeString.isEmpty() || endTimeAndPriority.isEmpty()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Sick event man! Just kidding, start and end times can\u0027t be empty.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"        // Parse end time and priority","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"        return endTimeAndPriority.split(\" /priority \");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"     * Checks if the end time is before the start time of an event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"     * @param startTime The time the event starts.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"     * @param endTime The time the event ends.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the time the event ends is before the time it starts.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"    private static void validateEventTimes(LocalDateTime startTime, LocalDateTime endTime) throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"        assert startTime !\u003d null \u0026\u0026 endTime !\u003d null : \"Start and end times should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Are you a time traveler cos an end time cannot be before a start time!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the event task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"        assert startTime !\u003d null : \"Start time should not be null before formatting\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YashvanGH"},"content":"        assert endTime !\u003d null : \"End time should not be null before formatting\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YashvanGH"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YashvanGH"},"content":"                + \" (from: \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YashvanGH"},"content":"                + startTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YashvanGH"},"content":"                + \" to: \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YashvanGH"},"content":"                + endTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YashvanGH"},"content":"                + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":144}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import tasks.priority.TaskPriority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * This abstract class represents a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * It is inherited by {@link Todo}, {@link Deadline} and {@link Event}.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    private String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    private TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    public Task(String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * This is used mainly in the TaskManager class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"     * This is used mainly in the TaskManager class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * Checks if task is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * @return Whether the task is empty or not.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        return this.description \u003d\u003d null || this.description.trim().isEmpty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * Gets the description of any one of the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"        return this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"                + this.description","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"                + \" (Priority: \" + this.taskPriority.getDisplayName() + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"     * Returns whether a task is done.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"     * @return boolean value indicating if task has been completed.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"        return isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":81}},{"path":"src/main/java/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.MarkException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import storage.SaveFileIO;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import tasks.parser.TaskDateTimeParser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * This class manages the list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" * It provides functionalities to add, delete, mark/unmark tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" * It will also load/save them to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * Empty constructor to initialise instance of TaskManager Class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public TaskManager() {}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * Adds task to task list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    public String addTask(Task task) throws TaskException, IOException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Hey! The description of your tasks cannot be empty!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"            assert taskList.contains(task) : \"Tasklist should have task after adding it\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"            return \"______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"                    + \"I\u0027ve added this to tasks:\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"                    + task","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\nCool. You have \" + taskList.size() + \" tasks now. Anything else?\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"                    + \"______________________________________________________________________________________\\n\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the task list is empty or the index is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"    private String deleteTask(int index) throws TaskException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Can\u0027t delete work if you don\u0027t have work to do!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        return \"______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"                + \"I\u0027ve removed this from tasks:\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"                + removedTask","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"                + \"\\nCool. You have \" + taskList.size() + \" tasks now. Anything else?\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"                + \"______________________________________________________________________________________\\n\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"     * Parses input and deletes a task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"delete task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty, or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         If the task list is empty or the task number is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"    public static String deleteTask(String input, TaskManager taskManager)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"            throws NumberFormatException, TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"        assert taskManager !\u003d null : \"TaskManager should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: delete \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(7).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: delete \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"        int indexToDelete;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"            indexToDelete \u003d Integer.parseInt(numberString) - 1;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"        return taskManager.deleteTask(indexToDelete);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index at which the task should be marked as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"    private String markTask(int index) throws MarkException, TaskException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"You have no tasks to mark. Look\u0027s like someone\u0027s lazing around!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"        taskList.get(index).markTask();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"        return \"Nice! I\u0027ve marked task \" + (index + 1) + \" as done!\\n\" + displayList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"     * Marks the specified task as done based on the user input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YashvanGH"},"content":"     * Parses the input string to extract the task number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"mark task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YashvanGH"},"content":"     * @throws MarkException         If the specified task does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         For other task-related errors.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YashvanGH"},"content":"    public static String markTask(String input, TaskManager taskManager)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YashvanGH"},"content":"            throws NumberFormatException, MarkException, TaskException, IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YashvanGH"},"content":"        assert taskManager !\u003d null : \"Task Manager should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: mark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: mark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YashvanGH"},"content":"        int indexToMark;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YashvanGH"},"content":"            indexToMark \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YashvanGH"},"content":"        return taskManager.markTask(indexToMark);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YashvanGH"},"content":"     * Unmarks the task at the given index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index at which the task should be marked as undone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YashvanGH"},"content":"    private String unmarkTask(int index) throws MarkException, TaskException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YashvanGH"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"You have no tasks to unmark. Look\u0027s like someone\u0027s lazing around!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YashvanGH"},"content":"        taskList.get(index).unmarkTask();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YashvanGH"},"content":"        return \"An uno reverse? Task \" + (index + 1) + \" has been unmarked!\\n\" + displayList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YashvanGH"},"content":"     * Marks the specified task as undone based on the user input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YashvanGH"},"content":"     * Parses the input string to extract the task number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"unmark task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YashvanGH"},"content":"     * @throws MarkException         If the specified task does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         For other task-related errors.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YashvanGH"},"content":"    public static String unmarkTask(String input, TaskManager taskManager)","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YashvanGH"},"content":"            throws NumberFormatException, MarkException, TaskException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YashvanGH"},"content":"        assert taskManager !\u003d null : \"Task Manager should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YashvanGH"},"content":"        int indexToUnmark;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YashvanGH"},"content":"            indexToUnmark \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YashvanGH"},"content":"        return taskManager.unmarkTask(indexToUnmark);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YashvanGH"},"content":"     * Displays all current tasks in the list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YashvanGH"},"content":"    public String displayList() throws TaskException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YashvanGH"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YashvanGH"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Yo! You have nothing in your task list (for now)\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YashvanGH"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"______________________________________________________________________________________\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"Here are your tasks:\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"YashvanGH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"YashvanGH"},"content":"            sb.append((i + 1)).append(\": \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"______________________________________________________________________________________\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YashvanGH"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YashvanGH"},"content":"     * Loads all tasks from the tyrese.txt file into current user session.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If the file cannot be found or does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"YashvanGH"},"content":"    public void loadTasks() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"YashvanGH"},"content":"        File directory \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"savedata\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"YashvanGH"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"YashvanGH"},"content":"            if (!directory.mkdirs()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"YashvanGH"},"content":"                throw new IOException(\"Failed to create directory: \" + directory.getAbsolutePath());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d new File(directory, \"tyrese.txt\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YashvanGH"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"You have no saved tasks! Imma initialise a new list!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YashvanGH"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"YashvanGH"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"YashvanGH"},"content":"            String line \u003d s.nextLine().trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YashvanGH"},"content":"            if (line.isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YashvanGH"},"content":"                continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YashvanGH"},"content":"            Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YashvanGH"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YashvanGH"},"content":"                // This gets only get unmarked tasks by only adding not \u0027null\u0027 tasks","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YashvanGH"},"content":"                taskList.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YashvanGH"},"content":"        s.close();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"YashvanGH"},"content":"     * Returns one of the tasks in its original input form to be loaded into the tyrese.txt.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line that is used to convert to its original input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YashvanGH"},"content":"     * @return One of the 3 tasks (Todo, Deadline, Event).","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YashvanGH"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YashvanGH"},"content":"            String taskType \u003d line.substring(1, 2);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YashvanGH"},"content":"            boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"YashvanGH"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"YashvanGH"},"content":"                // This is so that it is not loaded into the tasklist in loadTasks()","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YashvanGH"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"YashvanGH"},"content":"            // This is to allow parsing of input to allow creation of subtypes of Task objects","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"YashvanGH"},"content":"            String description \u003d line.substring(line.indexOf(\"[ ]\") + 4, line.indexOf(\"(Priority:\")).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"YashvanGH"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"YashvanGH"},"content":"            case \"T\": // Todo","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"YashvanGH"},"content":"                String todoPriority \u003d line.substring(line.indexOf(\"Priority:\") + 10, line.indexOf(\")\")).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"YashvanGH"},"content":"                String todoInput \u003d \"todo \" + description + \" /priority \" + todoPriority.toUpperCase();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"YashvanGH"},"content":"                return Todo.create(todoInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"YashvanGH"},"content":"            case \"D\": // Deadline","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"YashvanGH"},"content":"                String deadlineInput \u003d TaskDateTimeParser.deadlineParser(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"YashvanGH"},"content":"                return Deadline.create(deadlineInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"YashvanGH"},"content":"            case \"E\": // Event","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"YashvanGH"},"content":"                String eventInput \u003d TaskDateTimeParser.eventParser(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"YashvanGH"},"content":"                return Event.create(eventInput);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"YashvanGH"},"content":"            default:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"YashvanGH"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"YashvanGH"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"YashvanGH"},"content":"        return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"YashvanGH"},"content":"     * Saves only the unmarked tasks to the tyrese.txt.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If tasks cannot be found or saved.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"YashvanGH"},"content":"    public void saveUnmarkedTasks() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"YashvanGH"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"YashvanGH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"YashvanGH"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"YashvanGH"},"content":"                unmarkedTasks.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"YashvanGH"},"content":"        SaveFileIO.writeToSaveFile(unmarkedTasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"YashvanGH"},"content":"     * Finds any matching tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"YashvanGH"},"content":"     * @param input The task to find in the list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"YashvanGH"},"content":"    public String findTasks(String input) throws TaskException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to find? The lost ark? Enter a description!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"YashvanGH"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to find? The lost ark? Enter a description!\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"YashvanGH"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"YashvanGH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"YashvanGH"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"YashvanGH"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"YashvanGH"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Weird... It\u0027s almost as if that task doesn\u0027t exist...\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"YashvanGH"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"______________________________________________________________________________________\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"YashvanGH"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"YashvanGH"},"content":"            sb.append((i + 1)).append(\": \").append(foundTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"YashvanGH"},"content":"        sb.append(\"______________________________________________________________________________________\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"YashvanGH"},"content":"        return sb.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":369}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import tasks.priority.TaskPriority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * This class represents a class with no deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * It extends from the {@link Task} class.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Todo class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the todo task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    private Todo(String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"        assert taskPriority !\u003d null : \"TaskPriority should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Todo.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * Factory method to parse input and create a Todo object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the todo task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Todo object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    public static Todo create(String input) throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /priority \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        String todoTask \u003d parts[0].substring(4).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        if (todoTask.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d parts.length \u003e 1 ? TaskPriority.valueOf(parts[1].toUpperCase()) : TaskPriority.LOW;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        return new Todo(todoTask, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the todo task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":63}},{"path":"src/main/java/tasks/parser/TaskDateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * This class provides methods to parse and format task-related date and time strings.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * It is primarily used to convert user inputs or saved task data into standardised","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * formats suitable for creating instances of the {@link Deadline Deadline}","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" * and {@link Event Event} classes.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"public class TaskDateTimeParser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * Returns the parsed and formatted string to create an instance of the Deadline class.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line used to convert to the command string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"     * @return Parsed input for Deadline class","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    public static String deadlineParser(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d extractDescription(line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"        String priority \u003d extractPriority(line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"        int startOfDeadline \u003d line.indexOf(\"(by:\") + 5;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        int endOfDeadline \u003d line.lastIndexOf(\")\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        String deadlineRaw \u003d line.substring(startOfDeadline, endOfDeadline).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        String[] deadlineParts \u003d deadlineRaw.split(\",\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        String datePart \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        String timePart \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        String[] dateSplit \u003d datePart.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        String formattedDate \u003d dateSplit[0] + \"/\" + convertMonthToNumber(dateSplit[1]) + \"/\" + dateSplit[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        String formattedTime \u003d convertTo24HourFormat(timePart);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        String deadlineInput \u003d \"deadline \" + description + \" /by \" + formattedDate + \" \" + formattedTime","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                + \" /priority \" + priority;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"        return deadlineInput;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * Returns the parsed and formatted string to create an instance of the Event class.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line used to convert to the command string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"     * @return Parsed input for Event class","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"    public static String eventParser(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d extractDescription(line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"        String priority \u003d extractPriority(line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"        int startOfFrom \u003d line.indexOf(\"(from:\") + 7;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        int endOfFrom \u003d line.indexOf(\"to:\", startOfFrom) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        String from \u003d line.substring(startOfFrom, endOfFrom).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        String[] fromParts \u003d from.split(\", \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        String startDate \u003d convertToDate(fromParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        String startTime \u003d convertTo24HourFormat(fromParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        int startOfTo \u003d line.indexOf(\"to:\") + 4;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        int endOfTo \u003d line.lastIndexOf(\")\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        String to \u003d line.substring(startOfTo, endOfTo).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        String[] toParts \u003d to.split(\", \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"        String endDate \u003d convertToDate(toParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        String endTime \u003d convertTo24HourFormat(toParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        String eventInput \u003d \"event \" + description + \" /from \" + startDate + \" \" + startTime","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"                + \" /to \" + endDate + \" \" + endTime + \" /priority \" + priority;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"        return eventInput;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"     * Returns the string integer representation of each month.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"     * @param month The month to convert to its string integer representation.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"     * @return The month as a string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"    private static String convertMonthToNumber(String month) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"        switch (month.toLowerCase()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"        case \"january\": return \"1\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"        case \"february\": return \"2\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"        case \"march\": return \"3\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"        case \"april\": return \"4\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        case \"may\": return \"5\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"        case \"june\": return \"6\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"        case \"july\": return \"7\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"        case \"august\": return \"8\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"        case \"september\": return \"9\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"        case \"october\": return \"10\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"        case \"november\": return \"11\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"        case \"december\": return \"12\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"        default: return \"\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"     * Returns the 12-hour format string to its 24-hour format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"     * @param time The 12-hour format of the time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"     * @return The 24-hour format of the time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"    private static String convertTo24HourFormat(String time) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"        boolean isPM \u003d time.toLowerCase().endsWith(\"pm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"        String[] timeParts \u003d time.substring(0, time.length() - 2).trim().split(\":\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"        int hours \u003d Integer.parseInt(timeParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"        int minutes \u003d Integer.parseInt(timeParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"        if (isPM \u0026\u0026 hours !\u003d 12) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"            hours +\u003d 12;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"        } else if (!isPM \u0026\u0026 hours \u003d\u003d 12) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"            hours \u003d 0;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"        return String.format(\"%02d%02d\", hours, minutes);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"     * Returns the date to this format d/M/yyyy.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"     * @param date The string representation of the date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"     * @return The date in the specified format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"    private static String convertToDate(String date) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"        String[] dateParts \u003d date.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YashvanGH"},"content":"        String day \u003d dateParts[0];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"        String month \u003d convertMonthToNumber(dateParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"        String year \u003d dateParts[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YashvanGH"},"content":"        return day + \"/\" + month + \"/\" + year;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YashvanGH"},"content":"     * Extracts description from line input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line it extracts the description from.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YashvanGH"},"content":"     * @return The extracted description.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YashvanGH"},"content":"    private static String extractDescription(String line) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YashvanGH"},"content":"        int startOfDescription \u003d line.indexOf(\"] \") + 2;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YashvanGH"},"content":"        int endOfDescription \u003d line.indexOf(\" (Priority:\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d line.substring(startOfDescription, endOfDescription).trim();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YashvanGH"},"content":"        return description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YashvanGH"},"content":"     * Extracts priority from line input.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line it extracts the priority from.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YashvanGH"},"content":"     * @return The extracted priority.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YashvanGH"},"content":"    private static String extractPriority(String line) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YashvanGH"},"content":"        int startOfPriority \u003d line.indexOf(\"(Priority:\") + 10;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YashvanGH"},"content":"        int endOfPriority \u003d line.indexOf(\")\", startOfPriority);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YashvanGH"},"content":"        String priority \u003d line.substring(startOfPriority, endOfPriority).trim().toUpperCase();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YashvanGH"},"content":"        return priority;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"YashvanGH":165}},{"path":"src/main/java/tasks/parser/UserCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import exceptions.MarkException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import tasks.TaskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import tasks.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"import ui.Greeting;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" * This class provides methods to parse user-related input. It is primarily used to","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" * execute commands based on the given user input to add, create, mark, unmark and view","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":" * instances of the {@link tasks.Todo Todo}, {@link Deadline Deadline}","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":" * and {@link Event Event} classes.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"public class UserCommandParser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * Parses command from user and executes appropriate command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * @param input The user input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The TaskManager class used to execute the input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * @param isRun The condition to continue running the program.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    public static String parseCommand(String input, TaskManager taskManager, boolean[] isRun) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input should not be null or empty\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        assert taskManager !\u003d null : \"TaskManager should not be null\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        assert isRun !\u003d null \u0026\u0026 isRun.length \u003e 0 : \"isRun should be a valid boolean array\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            if (input.equals(\"exit\")) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"                isRun[0] \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                Platform.exit();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                return \"\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"                return Greeting.help();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"                return taskManager.displayList();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"                return TaskManager.deleteTask(input, taskManager);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"                return TaskManager.markTask(input, taskManager);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"                return TaskManager.unmarkTask(input, taskManager);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"                Todo todoTask \u003d Todo.create(input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"                return taskManager.addTask(todoTask);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"                Deadline deadlineTask \u003d Deadline.create(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"                return taskManager.addTask(deadlineTask);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"                Event eventTask \u003d Event.create(input);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"                return taskManager.addTask(eventTask);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"                return taskManager.findTasks(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"                return Greeting.callForHelp();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException | MarkException | TaskException | IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"            return \"______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"                    + e.getMessage()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n______________________________________________________________________________________\\n\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":81}},{"path":"src/main/java/tasks/priority/TaskPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks.priority;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import tasks.Todo;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * This enums represents TaskPriority.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * It allows any of the instances of {@link Todo}, {@link Deadline}","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" * and {@link Event} to be assigned a priority.","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"public enum TaskPriority {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"    LOW(\"Low\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    MEDIUM(\"Medium\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    HIGH(\"High\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    URGENT(\"Urgent\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    private final String displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    TaskPriority(String displayName) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        this.displayName \u003d displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * Returns the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * @return The priority (\"Low\", \"Medium\", \"High\", \"Urgent\") of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    public String getDisplayName() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        return displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"YashvanGH":36}},{"path":"src/main/java/ui/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class represents an interaction between the user and system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * It greets the user when starting up and bids goodbye when done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"public class Greeting {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"     * Lists out the current functions that can be used by the user.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"     * @return The various functions with a specified format that the user can use.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"    public static String help() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"        return \"Here\u0027s what I can do for now!\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"                + getTodoHelp()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"                + getDeadlineHelp()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"                + getEventHelp()","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"                + getGeneralCommands();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * Provides help information for the \u0027todo\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * @return A string describing the usage of the \u0027todo\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    private static String getTodoHelp() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        return \"| todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e: \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds a todo without a specific date/time\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"     * Provides help information for the \u0027deadline\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"     * @return A string describing the usage of the \u0027deadline\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"    private static String getDeadlineHelp() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        return \"| deadline \u003cdescription\u003e /by \u003cD/M/YYYY HHmm\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e: \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds a task with a deadline\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * Provides help information for the \u0027event\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * @return A string describing the usage of the \u0027event\u0027 command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"    private static String getEventHelp() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"        return \"| event \u003cdescription\u003e /from \u003cD/M/YYYY HHmm\u003e /to \u003cD/M/YYYY HHmm\u003e \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"                + \"/priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e: \"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds event with start/end time\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"     * Provides help information for general commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"     * @return A string describing the usage of general commands.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"    private static String getGeneralCommands() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        return \"| delete \u003ctask number\u003e: Deletes task no.x\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"                + \"| find \u003cdescription\u003e: Finds task with matching description\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"                + \"| list: Displays all tasks added\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"                + \"| mark \u003ctask number\u003e: Marks task no.x as done\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"                + \"| unmark \u003ctask number\u003e: Unmarks task no.x\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"                + \"| exit: Exits the application\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"     * Shows a help command if the user enters the wrong or unknown command.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"     * @return The command to type for \u0027help\u0027.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"    public static String callForHelp() {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"        return \"______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"                + \"Whatchu talking about bruh? Type \u0027help\u0027 if you need it!\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"                + \"\\n______________________________________________________________________________________\\n\";","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"YashvanGH":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#460f0f\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"YashvanGH":19}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidDeadline() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        Deadline deadline \u003d Deadline.create(\"deadline return book /by 2/12/2019 1800 /priority MEDIUM\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[D][ ] return book (Priority: Medium) (by: 2 December 2019, 6:00pm)\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"                deadline.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithoutPriorityUsesDefault() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Deadline deadline \u003d Deadline.create(\"deadline return book /by 2/12/2019 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[D][ ] return book (Priority: Low) (by: 2 December 2019, 6:00pm)\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"                deadline.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithInvalidDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Deadline.create(\"deadline return book /by 35/12/2019 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithMissingDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            Deadline.create(\"deadline return book /priority HIGH\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e /priority \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                + \"\u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":41}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class EventTest {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidEvent() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        Event event \u003d Event.create(\"event project meeting /from 6/8/2023 1400 /to 6/8/2023 1600 /priority HIGH\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[E][ ] project meeting (Priority: High) \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"                + \"(from: 6 August 2023, 2:00pm to: 6 August 2023, 4:00pm)\", event.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithoutPriorityUsesDefault() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Event event \u003d Event.create(\"event project meeting /from 6/8/2023 1400 /to 6/8/2023 1600\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[E][ ] project meeting (Priority: Low) \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"                + \"(from: 6 August 2023, 2:00pm to: 6 August 2023, 4:00pm)\", event.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithInvalidStartDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Event.create(\"event meeting /from 35/8/2023 1400 /to 6/8/2023 1600 /priority HIGH\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithEndDateBeforeStartThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            Event.create(\"event meeting /from 6/8/2023 1600 /to 6/8/2023 1400 /priority HIGH\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Are you a time traveler cos an end time cannot be before a start time!\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithMissingDatesThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"            Event.create(\"event meeting /priority HIGH\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e /priority \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"                + \"\u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":50}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidTodo() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        Todo todo \u003d Todo.create(\"todo read book /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[T][ ] read book (Priority: High)\", todo.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDefaultPriorityTodo() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Todo todo \u003d Todo.create(\"todo read book\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        // Default priority is LOW","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[T][ ] read book (Priority: Low)\", todo.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateTodoWithoutDescriptionThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Todo.create(\"todo \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateTodoWithInvalidPriorityThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            Todo.create(\"todo read book /priority SUPERHIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":42}}]
