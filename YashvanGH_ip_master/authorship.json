[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"checkstyle {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"    mainClass.set(\"Tyrese\")","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    archiveBaseName \u003d \"tyrese\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":8,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"# Tyrese User Guide","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"// Product screenshot goes here","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"## Introduction","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"What\u0027s going on, guys? Tyrese Here!","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"I\u0027m a pretty chill guy that likes to have keep my stuff in order you know?","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"Anyways! Here\u0027s what I can do for you:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"- Add tasks without dates (todo)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"- Add deadlines with specific due dates (deadline)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"- Schedule events with start and end times (event)","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"- Track and manage your tasks with ease (list, mark, unmark, delete, save)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"## Features","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"### Adding Todos","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"Add a task without a specific date or time.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"`todo Buy groceries`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"A new task \"Buy groceries\" will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"### Adding Deadlines","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"Add a task with a specific due date.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"`deadline \u003cdescription\u003e /by \u003cdue date\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"`deadline Submit assignment /by 2025-01-25`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"A new task \"Submit assignment\" with a due date of 25th January 2025 will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"### Adding Events","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"Add an event with a start and end time.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"`event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"`event Project meeting /from 2025-01-21 10:00 /to 2025-01-21 12:00`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"A new event \"Project meeting\" scheduled from 10:00 to 12:00 on 21st January 2025 will be added to your list.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"### Deleting Tasks","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"Delete a task from task list.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"`delete \u003ctask_number\u003e`","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"`delete 2`","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"The task at the specified index will be deleted and the list will be updated accordingly.","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"### Viewing Your Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"Display all your tasks in a list format.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"`list`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"A list of all your tasks, deadlines, and events will be displayed, showing their status (done or not done).","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"### Marking Tasks as Done","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"Mark a specific task as completed.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"`mark 2`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"Task number 2 will be marked as done and will not be saved to save file.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"### Unmarking Tasks","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"Unmark a specific task as incomplete.","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"Example:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"`unmark 2`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"Task number 2 will be marked as incomplete.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"### Exiting the Application:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"Say your goodbyes guys!","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"Usage:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"`exit`","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"Expected Outcome:","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"The application will close.","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"YashvanGH":90,"-":14}},{"path":"src/main/java/Tyrese.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import tasks.TaskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import tasks.parser.UserCommandParser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import ui.Greeting;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * This class handles the main logic for interaction.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"public class Tyrese {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"        boolean isTestMode \u003d args.length \u003e 0 \u0026\u0026 args[0].equals(\"--test\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"        if (!isTestMode) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"            // To skip unicode characters for testing","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"            // Unicode characters show up as \"?\" which makes it hard for testing","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"            Greeting.greet();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"        // Try to load tasks to populate the task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"            taskManager.loadTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        boolean[] isRun \u003d {true};","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        while (isRun[0]) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"            UserCommandParser.parseCommand(input, taskManager, isRun);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        // Try to save unmarked tasks from the task list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"            taskManager.saveUnmarkedTasks();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        Greeting.sayGoodbye();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        scanner.close();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"YashvanGH":60}},{"path":"src/main/java/exceptions/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class handles the exceptions thrown when creating instances of the","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * in the {@link tasks.Todo Todo}, {@link tasks.Deadlines Deadlines}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * and {@link tasks.Events Events} classes.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class MarkException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    // The 3 constructors below follow the Exception class","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public MarkException() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        super();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    public MarkException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    public MarkException(String message, Throwable cause) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        super(message, cause);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"YashvanGH":23}},{"path":"src/main/java/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package exceptions;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class handles the exceptions thrown by operations such as mark and unmark","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * in the {@link tasks.TaskManager TaskManager} Class.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    // The 3 constructors below follow the Exception class","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public TaskException() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        super();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    public TaskException(String message) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"        super(message);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    public TaskException(String message, Throwable cause) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        super(message, cause);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-22","isFullCredit":false}],"authorContributionMap":{"YashvanGH":24}},{"path":"src/main/java/savedata/tyrese.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"[T][ ] play (Priority: Low)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"[T][ ] read book (Priority: Low)","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":2}},{"path":"src/main/java/storage/SaveFileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * This class handles input and output to the savedata folder.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"public class SaveFileIO {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    private static final String DIRECTORY \u003d \"src/main/java/savedata\";","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final String FILE_NAME \u003d \"tyrese.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"     * Writes to the tyrese.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"     * @param taskList The tasklist containing unmarked tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If tyrese.txt cannot be written to.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    public static void writeToSaveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d getFile();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        FileWriter fw;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        // Try to write to the file","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"                fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t write to the savedata file\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        fw.close();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * Creates the savedata directory and tyrese.txt file to save the data to.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"     * @return The file to write and save the data to.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If savedata directory or tyrese.txt file cannot be created.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    private static File getFile() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"        File directory \u003d new File(DIRECTORY);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        // Parent, Child as arguments","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d new File(directory, FILE_NAME);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"        // Ensure directory exists","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t create the savedata directory...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        // Ensure file exists","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"Sorry mans, I can\u0027t create the savedata file...\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        return file;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":65}},{"path":"src/main/java/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" * This class represents a task with a deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * It extends the {@link Task} class and includes a specific date and time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Deadlines class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the deadline task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * @param deadline This is when the task needs to be completed by.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    private Deadlines(String description, LocalDateTime deadline, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Deadlines.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"     * A factory method to parse input and create a Deadlines object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the deadline task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Deadlines object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    public static Deadlines create(String input) throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"        // Ensure \"deadline\" has valid format","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"        // Parts needs to have 2 elements in array if no whitespace","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        // Considered whitespace if task","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"                    + \"/priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"        String deadlineTask \u003d parts[0].substring(8).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        if (deadlineTask.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to describe bro? An abstract concept? Write a description!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /priority \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"            deadline \u003d LocalDateTime.parse(deadlineParts[0].trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d (deadlineParts.length \u003e 1)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"                    ? TaskPriority.valueOf(deadlineParts[1].toUpperCase())","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"                    : TaskPriority.LOW;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"        return new Deadlines(deadlineTask, deadline, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the deadline task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":85}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" * This class represents a task with a more specific deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":" * It extends the {@link Task} class and includes a specific start and end date/time.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"public class Events extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy, h:mma\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Deadlines class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the deadline task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * @param startTime This is when the task starts.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * @param endTime This is when the task must be completed by.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"    private Events(LocalDateTime startTime, LocalDateTime endTime, String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Events.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"     * A factory method to parse input and create an Events object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the event task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Events object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    public static Events create(String input) throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /from \");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        // Ensure \"event\" has a valid format","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        // Parts needs to have 2 elements in array if no whitespace","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        // Parts[1] needs to contain \" /to \" as we haven\u0027t used it as a \u0027spliter\u0027 to split from yet","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"                    + \"\u003cend\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"One would think that a start and end time come as a pair wouldn\u0027t you?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"        String eventTask \u003d parts[0].substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"        String startTimeString \u003d timeParts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        String endTimeAndPriority \u003d timeParts[1];","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        if (eventTask.isEmpty()) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Watchu trying to describe bro? An abstract concept? Write a description!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        if (startTimeString.isEmpty() || endTimeAndPriority.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Sick event man! Just kidding, start and end times can\u0027t be empty.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        // Parse end time and priority","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"        String[] endTimePriority \u003d endTimeAndPriority.split(\" /priority \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        String endTimeString \u003d endTimePriority[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d (endTimePriority.length \u003e 1)","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"                    ? TaskPriority.valueOf(endTimePriority[1].toUpperCase())","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"                    : TaskPriority.LOW;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"        // Parse date-time strings","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"        LocalDateTime endTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"            startTime \u003d LocalDateTime.parse(startTimeString, INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"            endTime \u003d LocalDateTime.parse(endTimeString, INPUT_FORMATTER);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"            validateEventTimes(startTime, endTime);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"        return new Events(startTime, endTime, eventTask, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"     * Checks if the end time is before the start time of an event.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"     * @param startTime The time the event starts.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"     * @param endTime The time the event ends.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the time the event ends is before the time it starts.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"    private static void validateEventTimes(LocalDateTime startTime, LocalDateTime endTime) throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Are you a time traveler cos an end time cannot be before a start time!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the event task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"                + \" (from: \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"                + startTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"                + \" to: \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"                + endTime.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"                + \")\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":125}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This abstract class represents a task.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * It is inherited by {@link Todo}, {@link Deadlines} and {@link Events}.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"    private String description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    private TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public Task(String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * This is used mainly in the TaskManager class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"    public void markTask() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"     * This is used mainly in the TaskManager class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"     * Checks if task is empty.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * @return Whether the task is empty or not.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        return this.description \u003d\u003d null || this.description.trim().isEmpty();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"     * Gets the description of any one of the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        return this.description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + this.description","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"                + \" (Priority: \" + this.taskPriority.getDisplayName() + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"     * Returns whether a task is done","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"     * @return boolean value indicating if task has been completed","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"        return isDone;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":78}},{"path":"src/main/java/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.File;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.MarkException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import storage.SaveFileIO;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import tasks.parser.TaskDateTimeParser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * This class manages the list of tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" * It provides functionalities to add, delete, mark/unmark tasks.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" * It will also load/save them to a file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"public class TaskManager {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * Empty constructor to initialise instance of TaskManager Class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public TaskManager() {}","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * Adds task to task list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"     * @param task The task to add to the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    public void addTask(Task task) throws TaskException, IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Hey! The description of your tasks cannot be empty!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        } else {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            taskList.add(task);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t I\u0027ve added this to tasks:\\n\\t \"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"                    + task","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t Cool. You have \" + taskList.size() + \" tasks now. Anything else?\\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the task list is empty or the index is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"    private void deleteTask(int index) throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Can\u0027t delete work if you don\u0027t have work to do!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"                \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"                + \"\\t I\u0027ve removed this from tasks:\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"                + \"\\t  \"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"                + removedTask","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"                + \"\\n\\t Cool. You have \" + taskList.size() + \" tasks now. Anything else?\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"                + \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"        );","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"     * Parses input and deletes a task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"delete task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty, or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         If the task list is empty or the task number is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"    public static void deleteTask(String input, TaskManager taskManager) throws NumberFormatException, TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: delete \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(7).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: delete \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"        int indexToDelete;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"            indexToDelete \u003d Integer.parseInt(numberString) - 1; // Parsing the number","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"        taskManager.deleteTask(indexToDelete);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index at which the task should be marked as done.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"    private void markTask(int index) throws MarkException, TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"        // Check if the task list is empty","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"You have no tasks to mark. Look\u0027s like someone\u0027s lazing around!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"        // Check if the index is within bounds","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"        // Mark the task as done","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"        taskList.get(index).markTask();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked task \" + (index + 1) + \" as done!\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"        displayList();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"     * Marks the specified task as done based on the user input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"     * Parses the input string to extract the task number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"mark task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"     * @throws MarkException         If the specified task does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         For other task-related errors.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YashvanGH"},"content":"    public static void markTask(String input, TaskManager taskManager) throws NumberFormatException, MarkException,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YashvanGH"},"content":"            TaskException, IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: mark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: mark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YashvanGH"},"content":"        int indexToMark;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YashvanGH"},"content":"            indexToMark \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YashvanGH"},"content":"        taskManager.markTask(indexToMark);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YashvanGH"},"content":"     * Unmarks the task at the given index.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YashvanGH"},"content":"     * @param index The index at which the task should be marked as undone.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YashvanGH"},"content":"    private void unmarkTask(int index) throws MarkException, TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YashvanGH"},"content":"        // Check if the task list is empty","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YashvanGH"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"You have no tasks to unmark. Look\u0027s like someone\u0027s lazing around!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YashvanGH"},"content":"        // Check if the index is within bounds","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YashvanGH"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YashvanGH"},"content":"            throw new MarkException(\"I don\u0027t know if you\u0027ve noticed BUT we don\u0027t have that many tasks!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YashvanGH"},"content":"        // Mark task as undone","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YashvanGH"},"content":"        taskList.get(index).unmarkTask();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"\\tAn uno reverse? Task \" + (index + 1) + \" has been unmarked!\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YashvanGH"},"content":"        displayList();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YashvanGH"},"content":"     * Marks the specified task as undone based on the user input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YashvanGH"},"content":"     * Parses the input string to extract the task number.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YashvanGH"},"content":"     * @param input       The user input in the format of \"unmark task_number\".","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The {@link TaskManager} instance managing the tasks.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YashvanGH"},"content":"     * @throws NumberFormatException If the task number is missing, empty or invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YashvanGH"},"content":"     * @throws MarkException         If the specified task does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException         For other task-related errors.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YashvanGH"},"content":"    public static void unmarkTask(String input, TaskManager taskManager) throws NumberFormatException, MarkException,","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YashvanGH"},"content":"            TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YashvanGH"},"content":"        if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YashvanGH"},"content":"        String numberString \u003d input.substring(5).trim();","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YashvanGH"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Boh... Use: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YashvanGH"},"content":"        int indexToUnmark;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YashvanGH"},"content":"            indexToUnmark \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YashvanGH"},"content":"            throw new NumberFormatException(\"Does that look like a number to you bruh? Enter a valid number!\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YashvanGH"},"content":"        taskManager.unmarkTask(indexToUnmark);","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YashvanGH"},"content":"     * Display all current tasks in the list.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YashvanGH"},"content":"    public void displayList() throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YashvanGH"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Yo! You have nothing in your task list (for now)\");","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"\\t______________________________________________________________________________________\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YashvanGH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(\"\\t \" + (i + 1) + \": \" + taskList.get(i).toString());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"\\t_____________________________________________\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YashvanGH"},"content":"                + \"_________________________________________\\n\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YashvanGH"},"content":"     * Loads all tasks from the tyrese.txt.txt file into current user session.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If the file cannot be found or does not exist.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"YashvanGH"},"content":"    public void loadTasks() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"YashvanGH"},"content":"        File file \u003d new File(\"src/main/java/savedata/tyrese.txt\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"YashvanGH"},"content":"        if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"YashvanGH"},"content":"            throw new IOException(\"You have no saved tasks! Imma initialise a new list!\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"YashvanGH"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"YashvanGH"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"YashvanGH"},"content":"            String line \u003d s.nextLine().trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"YashvanGH"},"content":"            // Skip empty lines","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"YashvanGH"},"content":"            if (line.isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"YashvanGH"},"content":"                continue;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"YashvanGH"},"content":"            Task task \u003d parseTask(line);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"YashvanGH"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"YashvanGH"},"content":"                // Only get unmarked tasks","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"YashvanGH"},"content":"                taskList.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"YashvanGH"},"content":"     * Returns one of the tasks in its original input form to be loaded into the tyrese.txt.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line that is used to convert to its original input.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"YashvanGH"},"content":"     * @return One of the 3 tasks (Todo, Deadlines, Events).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"YashvanGH"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"YashvanGH"},"content":"            // [T][ ] read (Priority: Low)","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"YashvanGH"},"content":"            String taskType \u003d line.substring(1, 2);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"YashvanGH"},"content":"            boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"YashvanGH"},"content":"            if (isDone) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"YashvanGH"},"content":"                // Do not load this task","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"YashvanGH"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"YashvanGH"},"content":"            // Parsing input to allow creation of subtypes of Task objects","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"YashvanGH"},"content":"            String description \u003d line.substring(line.indexOf(\"[ ]\") + 4, line.indexOf(\"(Priority:\")).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"YashvanGH"},"content":"            String priority \u003d line.substring(line.indexOf(\"Priority:\") + 10,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"YashvanGH"},"content":"                    line.indexOf(\")\",","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"YashvanGH"},"content":"                    line.indexOf(\"Priority:\"))).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"YashvanGH"},"content":"            switch (taskType) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"YashvanGH"},"content":"            case \"T\": // Todo","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"YashvanGH"},"content":"                String todoPriority \u003d line.substring(line.indexOf(\"Priority:\") + 10, line.indexOf(\")\")).trim();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"YashvanGH"},"content":"                String todoInput \u003d \"todo \" + description + \" /priority \" + todoPriority.toUpperCase();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"YashvanGH"},"content":"                return Todo.create(todoInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"YashvanGH"},"content":"            case \"D\": // Deadlines","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"YashvanGH"},"content":"                //[D][ ] play (Priority: Low) (by: 2 March 2014, 6:00pm)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"YashvanGH"},"content":"                String deadlineInput \u003d TaskDateTimeParser.deadlineParser(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"YashvanGH"},"content":"                return Deadlines.create(deadlineInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"YashvanGH"},"content":"            case \"E\": // Events","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"YashvanGH"},"content":"                String eventInput \u003d TaskDateTimeParser.eventParser(line);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"YashvanGH"},"content":"                return Events.create(eventInput);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"YashvanGH"},"content":"            default:","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"YashvanGH"},"content":"                return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"YashvanGH"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"YashvanGH"},"content":"        // This line should never be reached","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"YashvanGH"},"content":"        return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"YashvanGH"},"content":"     * Saves only the unmarked tasks to the tyrese.txt.txt file.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"YashvanGH"},"content":"     * @throws IOException If tasks cannot be found or saved.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"YashvanGH"},"content":"    public void saveUnmarkedTasks() throws IOException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"YashvanGH"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"YashvanGH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"YashvanGH"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"YashvanGH"},"content":"                unmarkedTasks.add(task);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"YashvanGH"},"content":"        SaveFileIO.writeToSaveFile(unmarkedTasks);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":314}},{"path":"src/main/java/tasks/TaskPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This enums represents TaskPriority.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * It allows any of the instances of {@link Todo}, {@link Deadlines}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * and {@link Events} to be assigned a priority.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public enum TaskPriority {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    LOW(\"Low\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    MEDIUM(\"Medium\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    HIGH(\"High\"),","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    URGENT(\"Urgent\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    private final String displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    TaskPriority(String displayName) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"        this.displayName \u003d displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"     * Returns the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * @return The priority (\"Low\", \"Medium\", \"High\", \"Urgent\") of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    public String getDisplayName() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        return displayName;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"YashvanGH":32}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * This class represents a class with no deadline.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * It extends from the {@link Task} class.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"     * Private constructor for the Todo class.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"     * @param description This is a description of what the todo task should be.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * @param taskPriority This is the priority of the task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    private Todo(String description, TaskPriority taskPriority) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        super(description, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * Creates an instance of Todo.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * Factory method to parse input and create a Todo object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * @param input The input string for the todo task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * @return A new Todo object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     * @throws TaskException If the input format is invalid.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    public static Todo create(String input) throws TaskException {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        // Trim to remove any whitespace for easier exception handling","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        String[] parts \u003d input.split(\" /priority \");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        String todoTask \u003d parts[0].substring(4).trim();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        if (todoTask.isEmpty()) {","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"PLEASE BRUH! Use: todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        TaskPriority taskPriority;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"            // Just checking if a priority has been assigned else label it as LOW priority","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"            taskPriority \u003d parts.length \u003e 1 ? TaskPriority.valueOf(parts[1].toUpperCase()) : TaskPriority.LOW;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"            throw new TaskException(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        return new Todo(todoTask, taskPriority);","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"     * Returns string representation of the object.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"     * @return Shows whether the todo task has or has not been completed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"    @Override","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"    public String toString() {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"YashvanGH":59}},{"path":"src/main/java/tasks/parser/TaskDateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class provides methods to parse and format task-related date and time strings.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * It is primarily used to convert user inputs or saved task data into standardised","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" * formats suitable for creating instances of the {@link tasks.Deadlines Deadlines}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * and {@link tasks.Events Events} classes.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"public class TaskDateTimeParser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"     * Returns the parsed and formatted string to create an instance of the Deadlines class.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line used to convert to the command string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"     * @return Parsed input for Deadlines class","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public static String deadlineParser(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        // Extract description","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        int startOfDescription \u003d line.indexOf(\"] \") + 2;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"        int endOfDescription \u003d line.indexOf(\" (Priority:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d line.substring(startOfDescription, endOfDescription).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"        // Extract priority","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"        int startOfPriority \u003d line.indexOf(\"(Priority:\") + 10;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        int endOfPriority \u003d line.indexOf(\")\", startOfPriority);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"        String priority \u003d line.substring(startOfPriority, endOfPriority).trim().toUpperCase();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        // Extract deadline","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        int startOfDeadline \u003d line.indexOf(\"(by:\") + 5;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        int endOfDeadline \u003d line.lastIndexOf(\")\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"        String deadlineRaw \u003d line.substring(startOfDeadline, endOfDeadline).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        // Parse the date and time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        String[] deadlineParts \u003d deadlineRaw.split(\",\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        String datePart \u003d deadlineParts[0].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        String timePart \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        // Convert date to \"D/M/YYYY\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"        String[] dateSplit \u003d datePart.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"        String formattedDate \u003d dateSplit[0] + \"/\" + convertMonthToNumber(dateSplit[1]) + \"/\" + dateSplit[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        // Convert time to \"HHmm\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"        String formattedTime \u003d convertTo24HourFormat(timePart);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        // Create the input","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"        String deadlineInput \u003d \"deadline \" + description + \" /by \" + formattedDate + \" \" + formattedTime","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"                + \" /priority \" + priority;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        return deadlineInput;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"     * Returns the parsed and formatted string to create an instance of the Events class.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"     * @param line The line used to convert to the command string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"     * @return Parsed input for Events class","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"    public static String eventParser(String line) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"        // Extract description","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"        int startOfDescription \u003d line.indexOf(\"] \") + 2;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"        int endOfDescription \u003d line.indexOf(\" (Priority:\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"        String description \u003d line.substring(startOfDescription, endOfDescription).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"        // Extract priority","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"        int startOfPriority \u003d line.indexOf(\"(Priority:\") + 10;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"        int endOfPriority \u003d line.indexOf(\")\", startOfPriority);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        String priority \u003d line.substring(startOfPriority, endOfPriority).trim().toUpperCase();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"        // Extract \"from\" time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"        int startOfFrom \u003d line.indexOf(\"(from:\") + 7;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"        int endOfFrom \u003d line.indexOf(\"to:\", startOfFrom) - 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"        String from \u003d line.substring(startOfFrom, endOfFrom).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"        // Format start date and time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"        String[] fromParts \u003d from.split(\", \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YashvanGH"},"content":"        String startDate \u003d convertToDate(fromParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YashvanGH"},"content":"        String startTime \u003d convertTo24HourFormat(fromParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YashvanGH"},"content":"        // Extract \"to\" time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YashvanGH"},"content":"        int startOfTo \u003d line.indexOf(\"to:\") + 4;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YashvanGH"},"content":"        int endOfTo \u003d line.lastIndexOf(\")\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YashvanGH"},"content":"        String to \u003d line.substring(startOfTo, endOfTo).trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YashvanGH"},"content":"        // Format end date and time","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YashvanGH"},"content":"        String[] toParts \u003d to.split(\", \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YashvanGH"},"content":"        String endDate \u003d convertToDate(toParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YashvanGH"},"content":"        String endTime \u003d convertTo24HourFormat(toParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YashvanGH"},"content":"        // Create the input","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YashvanGH"},"content":"        String eventInput \u003d \"event \" + description + \" /from \" + startDate + \" \" + startTime","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YashvanGH"},"content":"                + \" /to \" + endDate + \" \" + endTime + \" /priority \" + priority;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YashvanGH"},"content":"        return eventInput;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YashvanGH"},"content":"     * Returns the string integer representation of each month.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YashvanGH"},"content":"     * @param month The month to convert to its string integer representation.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YashvanGH"},"content":"     * @return The month as a string.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YashvanGH"},"content":"    private static String convertMonthToNumber(String month) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YashvanGH"},"content":"        switch (month.toLowerCase()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YashvanGH"},"content":"        case \"january\": return \"1\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YashvanGH"},"content":"        case \"february\": return \"2\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YashvanGH"},"content":"        case \"march\": return \"3\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YashvanGH"},"content":"        case \"april\": return \"4\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YashvanGH"},"content":"        case \"may\": return \"5\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YashvanGH"},"content":"        case \"june\": return \"6\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YashvanGH"},"content":"        case \"july\": return \"7\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YashvanGH"},"content":"        case \"august\": return \"8\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YashvanGH"},"content":"        case \"september\": return \"9\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YashvanGH"},"content":"        case \"october\": return \"10\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YashvanGH"},"content":"        case \"november\": return \"11\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YashvanGH"},"content":"        case \"december\": return \"12\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YashvanGH"},"content":"        default:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YashvanGH"},"content":"        return \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YashvanGH"},"content":"     * Returns the 12-hour format string to its 24-hour format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YashvanGH"},"content":"     * @param time The 12-hour format of the time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YashvanGH"},"content":"     * @return The 24-hour format of the time.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YashvanGH"},"content":"    private static String convertTo24HourFormat(String time) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YashvanGH"},"content":"        boolean isPM \u003d time.toLowerCase().endsWith(\"pm\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YashvanGH"},"content":"        // This gets hours and minutes from 12-hour format","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YashvanGH"},"content":"        String[] timeParts \u003d time.substring(0, time.length() - 2).trim().split(\":\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YashvanGH"},"content":"        int hours \u003d Integer.parseInt(timeParts[0]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YashvanGH"},"content":"        int minutes \u003d Integer.parseInt(timeParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YashvanGH"},"content":"        if (isPM \u0026\u0026 hours !\u003d 12) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YashvanGH"},"content":"            hours +\u003d 12;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YashvanGH"},"content":"        } else if (!isPM \u0026\u0026 hours \u003d\u003d 12) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YashvanGH"},"content":"            hours \u003d 0;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YashvanGH"},"content":"        return String.format(\"%02d%02d\", hours, minutes);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YashvanGH"},"content":"     * Returns the date to this format d/M/yyyy.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YashvanGH"},"content":"     * @param date The string representation of the date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YashvanGH"},"content":"     * @return The date in the specified format.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YashvanGH"},"content":"    private static String convertToDate(String date) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YashvanGH"},"content":"        String[] dateParts \u003d date.split(\" \");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YashvanGH"},"content":"        String day \u003d dateParts[0];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YashvanGH"},"content":"        String month \u003d convertMonthToNumber(dateParts[1]);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YashvanGH"},"content":"        String year \u003d dateParts[2];","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YashvanGH"},"content":"        return day + \"/\" + month + \"/\" + year;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"YashvanGH":159}},{"path":"src/main/java/tasks/parser/UserCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks.parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"import exceptions.MarkException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"import tasks.Deadlines;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import tasks.Events;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"import tasks.TaskManager;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"import tasks.Todo;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"import ui.Greeting;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":" * This class provides methods to parse user-related input. It is primarily used to","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":" * execute commands based on the given user input to add, create, mark, unmark and view","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":" * instances of the {@link tasks.Todo Todo}, {@link tasks.Deadlines Deadlines}","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":" * and {@link tasks.Events Events} classes.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"public class UserCommandParser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"     * Parses command from user and executes appropriate command.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     * @param input The user input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"     * @param taskManager The TaskManager class used to execute the input.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"     * @param isRun The condition to continue running the program.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"    public static void parseCommand(String input, TaskManager taskManager, boolean[] isRun) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"            if (input.equals(\"exit\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"                isRun[0] \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.equals(\"help\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"                Greeting.help();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                taskManager.displayList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"                TaskManager.deleteTask(input, taskManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"                TaskManager.markTask(input, taskManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"                TaskManager.unmarkTask(input, taskManager);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"                Todo todoTask \u003d Todo.create(input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"                taskManager.addTask(todoTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YashvanGH"},"content":"                Deadlines deadlineTask \u003d Deadlines.create(input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YashvanGH"},"content":"                taskManager.addTask(deadlineTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YashvanGH"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YashvanGH"},"content":"                Events eventTask \u003d Events.create(input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YashvanGH"},"content":"                taskManager.addTask(eventTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YashvanGH"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YashvanGH"},"content":"                System.out.println(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YashvanGH"},"content":"                        \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t Whatchu talking about bruh? Type \u0027help\u0027 if you need it!\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YashvanGH"},"content":"                );","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YashvanGH"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YashvanGH"},"content":"        } catch (NumberFormatException | MarkException | TaskException | IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YashvanGH"},"content":"            System.out.println(","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YashvanGH"},"content":"                    \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\t \" + e.getMessage()","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YashvanGH"},"content":"                    + \"\\n\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YashvanGH"},"content":"            );","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YashvanGH"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":77}},{"path":"src/main/java/ui/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"/**","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":" * This class represents an interaction between the user and system.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":" * It greets the user when starting up and bids goodbye when done.","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":" *","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":" * @author Yashvan","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":" */","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"public class Greeting {","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"     * Introduces itself and greets the user","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    public static void greet() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"                        \"__________________________________________________\\n\"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t\\t\\t It\u0027s ya boi Tyrese!\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t\\t\\t What\u0027s up? You rang?\\n\"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"                        + \"\\t    Type \u0027help\u0027 to see what I can do! \\n\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"                        + \"__________________________________________________\\n\"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        );","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"     * Lists out the current functions that can be used by the user","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"    @SuppressWarnings(\"checkstyle:LineLength\")","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"    public static void help() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"Here\u0027s what I can do for now!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e: \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds a todo without a specific date/time\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|deadline \u003cdescription\u003e /by \u003cD/M/YYYY HHmm\u003e \u003cLOW|MEDIUM|HIGH|URGENT\u003e:\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds a task with a deadline\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|event \u003cdescription\u003e /from \u003cD/M/YYYY HHmm\u003e /to \u003cD/M/YYYY HHmm\u003e \u003cLOW|MEDIUM|HIGH|URGENT\u003e: \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"                + \"Adds an event with a start and end time\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|delete \u003ctask number\u003e: Deletes task no.x\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|list: Displays all tasks added\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|mark \u003ctask number\u003e: Marks task no.x as done\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|unmark \u003ctask number\u003e: Unmarks task no.x\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(\"|exit: Exits the application\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    /**","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"     * Exits the application and greets the user goodbye","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"     */","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        System.out.println(","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"                \"\\t______________________________________________________________________________________\\n\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"                + \"\\t Aight, I\u0027ll head out. Do your tasks! Remember... I\u0027m watching you.\\n\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"                + \"\\t______________________________________________________________________________________\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YashvanGH"},"content":"        );","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-18","isFullCredit":false}],"authorContributionMap":{"YashvanGH":53}},{"path":"src/test/java/tasks/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class DeadlinesTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidDeadline() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        Deadlines deadline \u003d Deadlines.create(\"deadline return book /by 2/12/2019 1800 /priority MEDIUM\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[D][ ] return book (Priority: Medium) (by: 2 December 2019, 6:00pm)\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"                deadline.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithoutPriorityUsesDefault() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Deadlines deadline \u003d Deadlines.create(\"deadline return book /by 2/12/2019 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[D][ ] return book (Priority: Low) (by: 2 December 2019, 6:00pm)\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"                deadline.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithInvalidDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Deadlines.create(\"deadline return book /by 35/12/2019 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDeadlineWithMissingDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            Deadlines.create(\"deadline return book /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e /priority \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                + \"\u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":41}},{"path":"src/test/java/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class EventsTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidEvent() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"        Events event \u003d Events.create(\"event project meeting /from 6/8/2023 1400 /to 6/8/2023 1600 /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[E][ ] project meeting (Priority: High) \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"                + \"(from: 6 August 2023, 2:00pm to: 6 August 2023, 4:00pm)\", event.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithoutPriorityUsesDefault() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Events event \u003d Events.create(\"event project meeting /from 6/8/2023 1400 /to 6/8/2023 1600\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[E][ ] project meeting (Priority: Low) \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"                + \"(from: 6 August 2023, 2:00pm to: 6 August 2023, 4:00pm)\", event.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithInvalidStartDateThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Events.create(\"event meeting /from 35/8/2023 1400 /to 6/8/2023 1600 /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Invalid date-time format bro! Use: d/M/yyyy HHmm.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithEndDateBeforeStartThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"            Events.create(\"event meeting /from 6/8/2023 1600 /to 6/8/2023 1400 /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Are you a time traveler cos an end time cannot be before a start time!\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateEventWithMissingDatesThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YashvanGH"},"content":"            Events.create(\"event meeting /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e /priority \"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YashvanGH"},"content":"                + \"\u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":50}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"import exceptions.TaskException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateValidTodo() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"        Todo todo \u003d Todo.create(\"todo read book /priority HIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[T][ ] read book (Priority: High)\", todo.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateDefaultPriorityTodo() throws TaskException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"        Todo todo \u003d Todo.create(\"todo read book\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"        // Default priority is LOW","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"[T][ ] read book (Priority: Low)\", todo.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateTodoWithoutDescriptionThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"            Todo.create(\"todo \");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"PLEASE BRUH! Use: todo \u003cdescription\u003e /priority \u003cLOW|MEDIUM|HIGH|URGENT\u003e ._.\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"    public void testCreateTodoWithInvalidPriorityThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YashvanGH"},"content":"        Exception exception \u003d assertThrows(TaskException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YashvanGH"},"content":"            Todo.create(\"todo read book /priority SUPERHIGH\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YashvanGH"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YashvanGH"},"content":"        assertEquals(\"Get your priorities in order! Use: LOW, MEDIUM, HIGH, or URGENT!\",","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YashvanGH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YashvanGH"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YashvanGH"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"YashvanGH":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YashvanGH"},"content":"help","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YashvanGH"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YashvanGH"},"content":"mark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YashvanGH"},"content":"mark \"nan\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YashvanGH"},"content":"mark","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YashvanGH"},"content":"unmark 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YashvanGH"},"content":"unmark \"nan\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YashvanGH"},"content":"unmark","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"delete 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"delete \"nan\"","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"delete","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"todo","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"deadline","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"event","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"todo Procrastinate my iP","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"deadline CS2103T /by 24/01/2025 1800","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YashvanGH"},"content":"event ST1131 Quiz 1 /from 20/1/2025 0600 /to 26/1/2025 0600","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"todo Procrastinate my iP /priority LOW","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YashvanGH"},"content":"deadline CS2103T /by 24/01/2025 1800 /priority MEDIUM","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YashvanGH"},"content":"event ST1131 Quiz 1 /from 20/1/2025 0600 /to 26/1/2025 0600 /priority HIGH","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YashvanGH"},"content":"todo Invalid Priority /priority zaza","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YashvanGH"},"content":"list","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YashvanGH"},"content":"mark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YashvanGH"},"content":"mark 2","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YashvanGH"},"content":"mark 100","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YashvanGH"},"content":"unmark 1","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YashvanGH"},"content":"unmark 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YashvanGH"},"content":"unmark 100","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YashvanGH"},"content":"delete 1","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YashvanGH"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"delete 2","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YashvanGH"},"content":"list","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YashvanGH"},"content":"delete 100","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YashvanGH"},"content":"gibberish","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YashvanGH"},"content":"exit","lastModifiedDate":"2025-01-21","isFullCredit":false}],"authorContributionMap":{"YashvanGH":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YashvanGH"},"content":"java -classpath ..\\bin Tyrese --skip-ascii \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YashvanGH"},"content":"# Delete the tyrese.txt file if it exists","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YashvanGH"},"content":"if [ -f \"text-ui-test/src/main/java/savedata/tyrese.txt\" ]; then","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YashvanGH"},"content":"    rm \"text-ui-test/src/main/java/savedata/tyrese.txt\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YashvanGH"},"content":"    echo \"Deleted tyrese.txt before running tests.\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YashvanGH"},"content":"    touch \"text-ui-test/src/main/java/savedata/tyrese.txt\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YashvanGH"},"content":"    echo \"Recreated tyrese.txt as empty.\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YashvanGH"},"content":"fi","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YashvanGH"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YashvanGH"},"content":"java -classpath ../bin Tyrese --test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YashvanGH":9,"-":37}}]
