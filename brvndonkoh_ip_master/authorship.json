[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"    mainClass.set(\"Clarawr.Launcher\")","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"    archiveBaseName \u003d \"Clarawr\"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":13,"-":39}},{"path":"data/clarawr.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"[T][TODO] eat","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"[T][TODO] fly to hk","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"# clarawr User Guide","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"# Introduction","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"\u003e RAWR! Welcome to clarawr! This guide will walk you through key features and functionality of the clarawr app,","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"helping you get started and make the most of its capabilities.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"## Product Screenshot","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"# ⚡️ Quick Start Guide","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"Welcome to clarawr, your fun, interactive and playful task manager! Here\u0027s how to get started:","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"1. Clone the repository from [https://github.com/brvndonkoh/ip]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"2. Navigate to the project directory on your CLI and run ````gradlew.bat clean shadowJar````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"3. You will find the **clarawr** JAR file in the ````build/libs```` folder ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"4. To run the application: ````java -jar build\\libs\\clarawr.jar````","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"# ➕ Adding Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"## 🎯 Todo Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"To add a to-do task, use the **todo** command. This is perfect for simple tasks that don\u0027t","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"have specific deadline.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"todo [task description]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"todo buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"Better feed me as I/ve added this task: [T][ ] buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"clarawr will add the to-do task to your list, and it will be marked as not yet","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"completed by default.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"## 🎯 Deadline Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"In clarawr, adding deadlines to your tasks is simple. To add a task with a deadline, use the ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"**deadline** command. Make sure to specify both the description of the task and the deadline time.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"deadline [task description] /by [YYYY-MM-DD HHmm]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"deadline cs2103 assignment /by 2025-01-01 2359","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"HEHE, I\u0027ve added this task: [D][ ] cs2103 assignment by: Jan-01-2025 23:59","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"## 🎯 Event Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"For tasks related to specific events or appointments, use the **event** command. ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"These tasks are great for things that occur at specific times.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"event [task description] /from [YYYY-MM-DD HHmm] /to [YYYY--MM-DD HHmm]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"event team meeting /from 2025-02-02 1200 /to 2025-02-02 1400","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"RAWR! I\u0027ve added this task: [E][ ] team meeting from: Feb-02-2025 12:00 to: Feb-02-2025 14:00","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"# 📄 Listing All Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"To view all tasks in your list, use the list command. This will display every task, ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"whether it’s a to-do, event, or deadline, along with its current status (done or undone).","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brvndonkoh"},"content":"1. [T][ ] buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brvndonkoh"},"content":"2. [D][ ] cs2103 assignment by: Jan-01-2025 23:59","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brvndonkoh"},"content":"3. [E][ ] team meeting from: Feb-02-2025 12:00 to: Feb-02-2025 14:00","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brvndonkoh"},"content":"# ✅ Mark as Done/Undone","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brvndonkoh"},"content":"To mark a task as done or undone, use the mark/unmark command followed by the index of the task","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brvndonkoh"},"content":"mark/unmark [index of task]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brvndonkoh"},"content":"mark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brvndonkoh"},"content":"Wow someone\u0027s productive. I\u0027ve marked this task as done: [T][X] buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brvndonkoh"},"content":"unmark 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brvndonkoh"},"content":"Why did you even mark it as done in the first place? I\u0027ve marked this task as not done yet: [T][ ] buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brvndonkoh"},"content":"# 🗑❌ Deleting/Removing Tasks","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brvndonkoh"},"content":"If you no longer need a task, you can remove it from your list using the delete command. ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brvndonkoh"},"content":"Once deleted, the task cannot be recovered, so use this command carefully.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brvndonkoh"},"content":"delete/remove [index of task]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brvndonkoh"},"content":"delete 1","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brvndonkoh"},"content":"*BURP* I\u0027ve eaten this task hehe: [T][X] buy groceries","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brvndonkoh"},"content":"# 🔍 Find Tasks by Keyword","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brvndonkoh"},"content":"To search for tasks that match a specific keyword, use the find command. ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brvndonkoh"},"content":"This allows you to quickly find tasks related to a specific keyword.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brvndonkoh"},"content":"find [keyword]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brvndonkoh"},"content":"find meeting","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brvndonkoh"},"content":"Here are the matching tasks: ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brvndonkoh"},"content":" [E][ ] team meeting from: Feb-02-2025 12:00 to: Feb-02-2025 14:00","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brvndonkoh"},"content":"# 🔍 Find Tasks by Date","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brvndonkoh"},"content":"To search for tasks that match a date, use the listbydate command.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brvndonkoh"},"content":"This allows you to quickly find tasks happening on that date.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brvndonkoh"},"content":"### Command Syntax","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brvndonkoh"},"content":"listbydate [YYYY-MM-DD]","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brvndonkoh"},"content":"### For example:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brvndonkoh"},"content":"listbydate 2025-02-02","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brvndonkoh"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brvndonkoh"},"content":"Tasks on 2025-02-02: ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brvndonkoh"},"content":" [E][ ] team meeting from: Feb-02-2025 12:00 to: Feb-02-2025 14:00","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brvndonkoh"},"content":"````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brvndonkoh"},"content":"# Error Handling","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brvndonkoh"},"content":"\u003eWhen you encounter an error, fret not! clarawr will kindly tell you what went wrong, ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brvndonkoh"},"content":"\u003e and you can simply re-type your command with the correct input. It\u0027s all part of the process, no worries! 😊","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brvndonkoh"},"content":"# Customisation \u0026 Extra Features ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brvndonkoh"},"content":"### 🚀 Can I prioritise tasks?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brvndonkoh"},"content":"\u003eNot yet, but stay tuned for updates!","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brvndonkoh"},"content":"### ♻️ Can I add recurring tasks?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brvndonkoh"},"content":"\u003eCurrently, tasks must be added manually each time.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brvndonkoh"},"content":"### 🔄 Can I undo a deletion?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brvndonkoh"},"content":"\u003eNope! Once a task is deleted, it\u0027s gone. RAWR carefully!","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brvndonkoh"},"content":" ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brvndonkoh"},"content":"# Troubleshooting \u0026 FAQ","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brvndonkoh"},"content":"### 🤔 Why is my deadline not showing?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brvndonkoh"},"content":"Make sure you used the correct format: ````YYYY-MM-DD HHmm.````","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brvndonkoh"},"content":"### 🧐 Can I edit a task instead of deleting it?","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brvndonkoh"},"content":"Not yet! You\u0027ll need to delete it and re-add a new one.","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brvndonkoh"},"content":"## ***You\u0027re now a clarawr pro! 🎉 Go forth and conquer your tasks… or I might just chomp them for you! 🦁***","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":177,"-":14}},{"path":"src/data/clarawr.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"[D][X]cs2103 iP /by Feb-21-2025 23:59","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"[T][ ]gym","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"[T][X]scold malay","lastModifiedDate":"2025-02-19","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":3}},{"path":"src/main/java/BigBoy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"public class BigBoy {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":10}},{"path":"src/main/java/Level_1/Clarawr.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package Level_1;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"public class Clarawr {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"        System.out.println(\"Hello! I\u0027m Clarawr.Clarawr\\n\"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"        String instruction \u003d scanner.nextLine();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"        while (!instruction.equalsIgnoreCase(\"bye\")) { // Check for \"bye\" (case-insensitive)","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"            System.out.println(instruction); // Repeat the input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"            instruction \u003d scanner.nextLine(); // Read the next input","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"        scanner.close(); // Close the scanner","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":20}},{"path":"src/main/java/clarawr/Clarawr.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"enum TaskType {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":" * The main class for the Clarawr task management application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":" * This class handles the execution of the program, parsing and executing commands,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":" * and interacting with the user via the user interface (UI).","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"public class Clarawr {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static final Ui ui \u003d new Ui();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static final Storage storage \u003d new Storage();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static final Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"\t * Constructs the Clarawr task management application.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"\t * Loads tasks from saved ile during initialisation.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"\tpublic Clarawr() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.addAll(storage.loadTasksFromFile());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"\t * Handles the user input command by delegating to the appropriate method","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"\t * based on the parsed command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"\t * @param instruction The user input command to process.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A response message based on the command processed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If an error occurs while processing the command.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String handleCommand(String instruction) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"\t\tString[] commandParts \u003d parser.parseCommand(instruction);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"\t\tString command \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"\t\tswitch (command) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"hi\":","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"Hello there! I can\u0027t find my mommy...\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"list\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn ui.showListOfTasks(taskList.getAllTasks());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"todo\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn addTodoTask(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"deadline\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn addDeadlineTask(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"event\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn addEventTask(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"mark\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn markTaskDone(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"unmark\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn markTaskUndone(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"delete\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"remove\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn deleteTask(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"listbydate\":","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn listTasksByDate(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"find\":","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn findTasksByKeyword(commandParts[1]);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"\t\tcase \"bye\":","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tStorage.saveTasksToFile(taskList.getAllTasks());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tPlatform.exit();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brvndonkoh"},"content":"\t\tdefault:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"Sorry, I do not understand your instruction *whimpers* ... typo?\";","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brvndonkoh"},"content":"\t * Searches for tasks in the task list that contain the specified keyword in their description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brvndonkoh"},"content":"\t * Displays all matching tasks or a message if no matches are found.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brvndonkoh"},"content":"\t * @param keyword The keyword to search for in task descriptions. Case-insensitive.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A string message listing matching tasks or indicating no matches.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String findTasksByKeyword(String keyword) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brvndonkoh"},"content":"\t\tStringBuilder result \u003d new StringBuilder(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brvndonkoh"},"content":"\t\tboolean isFound \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brvndonkoh"},"content":"\t\tfor (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tif (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tresult.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tisFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (!isFound) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tresult.append(\"RAWR YOU WASTED MY TIME NO TASKS FOUND\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn result.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brvndonkoh"},"content":"\t * Adds a new Todo task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brvndonkoh"},"content":"\t * @param description The description of the Todo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the Todo task has been added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the description is empty.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String addTodoTask(String description) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (description.isEmpty()) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tthrow new ClarawrException(\"Please add a description *sniffs* I don\u0027t know what you are talking about...\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brvndonkoh"},"content":"\t\tTask task \u003d new Todo(description, false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (isDuplicateTask(task)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"RAWR! You already have the task in your list dummy\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"Better feed me as I\u0027ve added this task: \" + task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brvndonkoh"},"content":"\t * Checks whether the given task is a duplicate in the task list.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brvndonkoh"},"content":"\t * A task is considered a duplicate if it already exists in the list of tasks, based on equality.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brvndonkoh"},"content":"\t * @param task The task to be checked for duplication.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brvndonkoh"},"content":"\t * @return true if the task is a duplicate (exists in the task list), false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static boolean isDuplicateTask(Task task) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brvndonkoh"},"content":"\t\tfor (Task existingTask : taskList.getAllTasks()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tif (existingTask.equals(task)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\treturn true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brvndonkoh"},"content":"\t * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brvndonkoh"},"content":"\t * @param details The description and deadline of the Deadline task in the format \"description /by deadline\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the Deadline task has been added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the description or deadline is missing or malformed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String addDeadlineTask(String details) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert details !\u003d null : \"Details cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brvndonkoh"},"content":"\t\tString[] parts \u003d details.split(\" /by \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert parts.length \u003d\u003d 2 : \"The details should contain both a description and deadline separated by \u0027 /by \u0027\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (parts.length \u003c 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tthrow new ClarawrException(\"Tell me the description and deadline please.\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brvndonkoh"},"content":"\t\tLocalDateTime deadline \u003d Parser.parseDeadlineTime(parts[1]);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brvndonkoh"},"content":"\t\tTask task \u003d new Deadline(parts[0], deadline, false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (isDuplicateTask(task)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"RAWR! How many times do you want to add it? It is already in the list.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"HEHE, I\u0027ve added this task: \" + task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brvndonkoh"},"content":"\t * Adds a new Event task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brvndonkoh"},"content":"\t * @param details The description and timing of the Event task in the format","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brvndonkoh"},"content":"\t *                   \"description /from start_time /to end_time\".","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the Event task has been added.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the description or timing information is missing or malformed.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String addEventTask(String details) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert details !\u003d null : \"Details cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brvndonkoh"},"content":"\t\tString[] parts \u003d details.split(\" /from \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert parts.length \u003d\u003d 2 : \"The event details should contain both a \" +","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\"description and a start time separated by \u0027 /from \u0027\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (parts.length \u003c 2) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tthrow new ClarawrException(\"The description and timing of an event cannot be empty.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brvndonkoh"},"content":"\t\tString[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert times.length \u003d\u003d 2 : \"The event should contain both a start time and an end time separated by \u0027 /to \u0027\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (times.length \u003c 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tthrow new ClarawrException(\"The description and both event times cannot be empty.\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"brvndonkoh"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"brvndonkoh"},"content":"\t\tLocalDateTime from \u003d LocalDateTime.parse(times[0].trim(), formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"brvndonkoh"},"content":"\t\tLocalDateTime to \u003d LocalDateTime.parse(times[1].trim(), formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert from.isBefore(to) : \"The start time must be before the end time.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"brvndonkoh"},"content":"\t\tTask task \u003d new Event(parts[0], from, to, false);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (isDuplicateTask(task)) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"No! Not going to add a duplicate man.\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.addTask(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"RAWR! I\u0027ve added this task: \" + task;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"brvndonkoh"},"content":"\t * Marks a task as done by its index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"brvndonkoh"},"content":"\t * @param indexStr The index of the task to mark as done (1-based index).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the task has been marked as done.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the index is invalid or out of range.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String markTaskDone(String indexStr) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert indexStr !\u003d null : \"Index string cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"brvndonkoh"},"content":"\t\tint index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.getSize() : \"Index is out of bounds of the task list\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.markTaskAsDone(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"Wow someone\u0027s productive. I\u0027ve marked this task as done: \" + taskList.getTask(index);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"brvndonkoh"},"content":"\t * Marks a task as undone by its index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"brvndonkoh"},"content":"\t * @param indexStr The index of the task to mark as undone (1-based index).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the task has been marked as undone.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the index is invalid or out of range.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String markTaskUndone(String indexStr) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert indexStr !\u003d null : \"Index string cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"brvndonkoh"},"content":"\t\tint index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.getSize() : \"Index is out of bounds of the task list\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.markTaskAsUndone(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"Why did you even mark it as done in the first place?\" +","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\" I\u0027ve marked this task as not done yet: \" + taskList.getTask(index);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"brvndonkoh"},"content":"\t * Deletes a task by its index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"brvndonkoh"},"content":"\t * @param indexStr The index of the task to delete (1-based index).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A message confirming that the task has been deleted.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the index is invalid or out of range.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String deleteTask(String indexStr) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert indexStr !\u003d null : \"Index string cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"brvndonkoh"},"content":"\t\tint index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.getSize() : \"Index is out of bounds of the task list\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"brvndonkoh"},"content":"\t\tTask taskToDelete \u003d taskList.getTask(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"brvndonkoh"},"content":"\t\ttaskList.deleteTask(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn \"*BURP* I\u0027ve eaten this task hehe: \" + taskToDelete;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"brvndonkoh"},"content":"\t * Lists tasks by a specific date.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"brvndonkoh"},"content":"\t * @param dateStr The date to filter tasks by (in the format \"yyyy-MM-dd\").","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A list of tasks that fall on the specified date.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"brvndonkoh"},"content":"\t * @throws ClarawrException If the date format is invalid.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"brvndonkoh"},"content":"\tprivate static String listTasksByDate(String dateStr) throws ClarawrException {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert dateStr !\u003d null : \"Date string cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"brvndonkoh"},"content":"\t\tLocalDate filterDate \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"brvndonkoh"},"content":"\t\tStringBuilder result \u003d new StringBuilder(\"Tasks on \" + filterDate + \":\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"brvndonkoh"},"content":"\t\tboolean isFound \u003d false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"brvndonkoh"},"content":"\t\tfor (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tif (task instanceof Deadline) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tDeadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tif (deadline.getDeadline().toLocalDate().equals(filterDate)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\tresult.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\tisFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t} else if (task instanceof Event) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tEvent event \u003d (Event) task;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tif (event.getFrom().toLocalDate().equals(filterDate)) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\tresult.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t\tisFound \u003d true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"brvndonkoh"},"content":"\t\tif (!isFound) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tresult.append(\"No tasks for this date.\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn result.toString();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"brvndonkoh"},"content":"\t * Returns the response for the user input command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"brvndonkoh"},"content":"\t * @param input The user input command to process.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"brvndonkoh"},"content":"\t * @return The response message based on the processed command.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"brvndonkoh"},"content":"\tpublic String getResponse(String input) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"brvndonkoh"},"content":"\t\ttry {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn handleCommand(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"brvndonkoh"},"content":"\t\t} catch (ClarawrException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"brvndonkoh"},"content":"\t\t\treturn \"Error: \" + e.getMessage();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":324}},{"path":"src/main/java/clarawr/ClarawrException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":" * Represents a custom exception for the Clarawr application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":" * This exception can be thrown to indicate specific errors within the application.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"public class ClarawrException extends Exception {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs a new ClarawrException with the specified detail message.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"     * @param message The detail message, which provides more information about the error.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"    public ClarawrException(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":17}},{"path":"src/main/java/clarawr/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * Represents a deadline task with a description and a deadline time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" * Inherits from the Task class and provides functionality specific to deadline tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs a Deadline task with the given description, deadline time, and completion status.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"        assert deadline !\u003d null : \"Deadline cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"     * Gets the deadline time of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"        return deadline;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the deadline task, including the description,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"     * completion status, and deadline time.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"        return \" [D]\" + super.toString() + \" by: \" + deadline.format(formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the deadline task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the deadline task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"        return \"[D]\" + super.toFileString() + \" /by \" + deadline.format(formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":61}},{"path":"src/main/java/clarawr/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"\tprivate Label dialog;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"\tprivate ImageView displayPicture;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"\t * Constructs a DialogBox with the given text and image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"\t * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"\t * @param img  The image representing the speaker.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"\tprivate DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert text !\u003d null \u0026\u0026 !text.isEmpty() : \"Text cannot be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert img !\u003d null : \"Image cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"\t\ttry {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tfxmlLoader.setController(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tfxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tfxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"\t\tdialog.setText(text);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"\t\tdisplayPicture.setImage(img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"\t * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"\tprivate void flip() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"\t\tCollections.reverse(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"\t\tgetChildren().setAll(tmp);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"\t\tsetAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"\t\tdialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"\t * Creates a dialog box for the user.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"\t * @param text The user\u0027s text message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"\t * @param img  The user\u0027s profile image.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"\tpublic static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"\t * Creates a dialog box for Clarawr with the specified text and image.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"\t * The dialog box is flipped to distinguish it from the user\u0027s dialog.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"\t * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"\t * @param img The image representing Clarawr.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"\t * @return A {@code DialogBox} instance with the given text and image, flipped for Clarawr.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brvndonkoh"},"content":"\tpublic static DialogBox getClarawrDialog(String text, Image img) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brvndonkoh"},"content":"\t\tvar db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brvndonkoh"},"content":"\t\tdb.flip();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brvndonkoh"},"content":"\t\treturn db;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":86}},{"path":"src/main/java/clarawr/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * Represents an event task with a description, start and end times.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" * Inherits from the Task class and provides additional functionality for event-specific properties.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs an Event task with the given description, start and end times, and completion status.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, boolean isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"        assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"        assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"        assert from.isBefore(to) : \"Start time must be before end time\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"     * @return The start time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"        return from;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"     * @return The end time of the event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"        return to;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the event task, including the description,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"     * completion status, and start and end times.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"        return \" [E]\" + super.toString() + \" from: \" + from.format(formatter) + \" to: \" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"                to.format(formatter) ;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the event task in a format suitable for saving to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the event task in file format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"        return \"[E]\" + super.toFileString() + \" /from \" + from.format(formatter) + \" /to \" +","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"                to.format(formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":78}},{"path":"src/main/java/clarawr/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" * A launcher class to work around classpath issues when running a JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * This class serves as the entry point to start the application by calling {@link Main}.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"public class Launcher {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"\t * The main method that launches the JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"\t * @param args Command-line arguments passed to the application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert args !\u003d null : \"Command-line arguments should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert args.length \u003d\u003d 0 : \"Command-line arguments should be provided if required\";","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"\t\tApplication.launch(Main.class, args);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":22}},{"path":"src/main/java/clarawr/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":" * The main entry point for the Clarawr GUI application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":" * This class initializes and launches the JavaFX application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"\tprivate final Clarawr clarawr \u003d new Clarawr();","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"\t * Starts the JavaFX application by setting up the primary stage.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"\t * Loads the FXML layout and injects the Clarawr instance into the MainWindow controller.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"\t * @param stage The primary stage for this application.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"\t@Override","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"\tpublic void start(Stage stage) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"\t\tstage.setTitle(\"clarawr\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"\t\tImage image \u003d new Image(\"/images/cuteLion.png\");","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"\t\tstage.getIcons().add(image);","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert clarawr !\u003d null : \"Clarawr instance should not be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"\t\ttry {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tstage.setMinHeight(220);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tstage.setMinWidth(417);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tassert fxmlLoader.getLocation() !\u003d null : \"FXML file could not be loaded from /view/MainWindow.fxml\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tAnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tScene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tstage.setScene(scene);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().setClarawr(clarawr);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"\t\t\tstage.show();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"\t\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":53}},{"path":"src/main/java/clarawr/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":" * Handles user input and display dialog boxes for the user and Clarawr.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"\tprivate ScrollPane scrollPane;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"\tprivate VBox dialogContainer;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"\tprivate TextField userInput;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"\tprivate Button sendButton;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"\tprivate Clarawr clarawr;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"\tprivate final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tarzanBoy.png\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"\tprivate final Image clarawrImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/simbaLion.jpg\"));","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"\t * Initializes the MainWindow.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"\t * Binds the vertical scroll property of the ScrollPane to the height of the dialog container,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"\t * ensuring that the latest messages are always visible.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"\tpublic void initialize() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert scrollPane !\u003d null : \"ScrollPane is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert dialogContainer !\u003d null : \"DialogContainer is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert userInput !\u003d null : \"UserInput is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert sendButton !\u003d null : \"SendButton is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"\t * Sets the Clarawr instance to be used by this GUI.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"\t *","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"\t * @param c The Clarawr instance that handles user input and generates responses.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"\tpublic void setClarawr(Clarawr c) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert c !\u003d null : \"Clarawr instance is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"\t\tclarawr \u003d c;","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"\t/**","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"\t * Handles user input by creating two dialog boxes:","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"\t * - One for the user\u0027s input","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"\t * - One for Clarawr\u0027s response","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"\t * The dialog boxes are appended to the dialog container, and the user input field is cleared afterward.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"\t */","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"\t@FXML","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"\tprivate void handleUserInput() {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert clarawr !\u003d null : \"Clarawr instance is not initialized\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"\t\tString input \u003d userInput.getText();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"\t\tString response \u003d clarawr.getResponse(input);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"\t\tassert response !\u003d null \u0026\u0026 !response.isEmpty() : \"Clarawr\u0027s response is null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"\t\tdialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"\t\t\t\tDialogBox.getClarawrDialog(response, clarawrImage)","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"\t\t);","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"\t\tuserInput.clear();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"\t}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":79}},{"path":"src/main/java/clarawr/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * Parses task data from a string and command input into corresponding task objects.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" * Also provides utility methods for parsing commands and deadlines.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"public class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"     * Parses a task string into a Task object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"     * Supports different task types: Todo, Deadline, and Event.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"     * @param taskData The task data as a string to be parsed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"     * @return A Task object corresponding to the parsed data.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     * @throws Exception If the task data is in an invalid format.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"    public static Task parseTask(String taskData) throws Exception {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"        assert taskData !\u003d null \u0026\u0026 !taskData.isEmpty() : \"Task data cannot be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"        boolean isDone \u003d taskData.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"        if (taskData.startsWith(\"[T]\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"            return new Todo(taskData.substring(6), isDone);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        } else if (taskData.startsWith(\"[D]\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"            String[] parts \u003d taskData.substring(6).split(\" /by \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"            assert parts.length \u003d\u003d 2 : \"Deadline task format is invalid, expected two parts separated by \u0027/by\u0027\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(parts[1].trim(), formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"            return new Deadline(parts[0], deadlineDateTime, isDone);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"        } else if (taskData.startsWith(\"[E]\")) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"            String[] parts \u003d taskData.substring(6).split(\" /from \");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"            assert parts.length \u003d\u003d 2 : \"Event task format is invalid, expected \u0027/from\u0027 separator\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"            String[] times \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"            assert times.length \u003d\u003d 2 : \"Event time format is invalid, expected \u0027/to\u0027 separator\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(times[0].trim(), formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(times[1].trim(), formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"            return new Event(parts[0], from, to, isDone);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"        throw new Exception(\"Invalid task data format.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"     * Parses a command input string into an array of command and arguments.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"     * The input string is split into two parts at the first space.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"     * @param input The command input string.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"     * @return An array of strings where the first element is the command and the second is the argument.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"    public static String[] parseCommand(String input) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"        return input.split(\" \", 2);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"     * Parses a deadline time string into a LocalDateTime object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"     * The expected format is \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"     * @param dateTimeString The deadline string to parse.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"     * @return The corresponding LocalDateTime object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"    public static LocalDateTime parseDeadlineTime(String dateTimeString) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":73}},{"path":"src/main/java/clarawr/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.io.*;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" * Handles saving and loading tasks to and from a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":" * The file path is hardcoded, and tasks are stored in a text file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"public class Storage {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    private static final String FILE_PATH \u003d \"C:\\\\Users\\\\user\\\\CS2103_IP\\\\ip\\\\src\\\\data\\\\clarawr.txt\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"     * Saves a list of tasks to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"     * Each task is written in a format suitable for later loading.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"     * @param tasks The list of tasks to save to the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"        Storage.tasks \u003d tasks;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"            assert file.exists() || file.createNewFile() : \"File path is not valid or file could not be created.\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"                    assert task.toFileString() !\u003d null \u0026\u0026 !task.toFileString().isEmpty() : \"Task cannot be saved in an invalid format\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"                    writer.write(task.toFileString());","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"                    writer.newLine();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"                writer.flush();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"            System.out.println(\"Error saving tasks to file.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"     * Loads tasks from a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"     * Each line in the file is parsed into a task object.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"     * If corrupt data is encountered, the line is skipped.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"            String line;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"                assert line !\u003d null \u0026\u0026 !line.trim().isEmpty() : \"Task data line is null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"                try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"                    tasks.add(Parser.parseTask(line));","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"                    System.out.println(\"Warning: Corrupt task data detected. Skipping line.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"                }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"            }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"            System.out.println(\"No existing tasks found.\");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":74}},{"path":"src/main/java/clarawr/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" * Represents a generic task with a description, completion status, and type.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * Subclasses must specify the type of task (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"abstract class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"    protected String description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    protected TaskType type;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs a new task with a description and task type.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"     * @param type The type of the task (e.g., Todo, Deadline, Event).","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"        assert type !\u003d null : \"Task type cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"     * \"X\" represents a completed task, and a space represents an incomplete task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"     * @return The status icon of the task, either \"X\" or a space.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"    public void markUndone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"     * The string includes the task status icon and the description.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the task in a format suitable for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representing the task, formatted for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brvndonkoh"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brvndonkoh"},"content":"        return description;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brvndonkoh"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brvndonkoh"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brvndonkoh"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brvndonkoh"},"content":"        return isDone;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brvndonkoh"},"content":"     * Compares this task with another object for equality.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brvndonkoh"},"content":"     * Two tasks are considered equal if they have the same description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brvndonkoh"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brvndonkoh"},"content":"     * @return True if the tasks are equal, false otherwise.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brvndonkoh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brvndonkoh"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brvndonkoh"},"content":"            return true;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brvndonkoh"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brvndonkoh"},"content":"            return false;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brvndonkoh"},"content":"        Task other \u003d (Task) obj;","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brvndonkoh"},"content":"        return description.equals(other.description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a hash code for this task, based on the description.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brvndonkoh"},"content":"     * @return The hash code for the task.","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brvndonkoh"},"content":"    public int hashCode() {","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brvndonkoh"},"content":"        return Objects.hash(description);","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":123}},{"path":"src/main/java/clarawr/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" * Represents a list of tasks, providing methods to add, delete, and modify tasks.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * This class manages task operations and ensures tasks are saved to a file immediately after modifications.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"public class TaskList {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"    public TaskList() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"     * After adding, the task list is saved to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"        Storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"     * After marking, the task list is saved to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of range\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brvndonkoh"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brvndonkoh"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brvndonkoh"},"content":"        Storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brvndonkoh"},"content":"     * Marks the specified task as undone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brvndonkoh"},"content":"     * After marking, the task list is saved to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brvndonkoh"},"content":"     * @param index The index of the task to mark as undone.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brvndonkoh"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brvndonkoh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of range\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brvndonkoh"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brvndonkoh"},"content":"        task.markUndone();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brvndonkoh"},"content":"        Storage.saveTasksToFile(tasks);  // Save tasks immediately after modification","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brvndonkoh"},"content":"     * Deletes the specified task from the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brvndonkoh"},"content":"     * After deleting, the task list is saved to a file.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brvndonkoh"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brvndonkoh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brvndonkoh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of range\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brvndonkoh"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brvndonkoh"},"content":"        Storage.saveTasksToFile(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brvndonkoh"},"content":"     * Retrieves a task at a specified index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brvndonkoh"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brvndonkoh"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brvndonkoh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brvndonkoh"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of range\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brvndonkoh"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brvndonkoh"},"content":"     * Retrieves all tasks in the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brvndonkoh"},"content":"     * @return An ArrayList of all tasks in the task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brvndonkoh"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brvndonkoh"},"content":"        return tasks;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brvndonkoh"},"content":"     * Adds all tasks from another list to this task list.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brvndonkoh"},"content":"     * @param tasks The list of tasks to add.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brvndonkoh"},"content":"    public void addAll(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brvndonkoh"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brvndonkoh"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brvndonkoh"},"content":"     * Retrieves the size of the task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brvndonkoh"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brvndonkoh"},"content":"    public int getSize() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brvndonkoh"},"content":"        return tasks.size();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":119}},{"path":"src/main/java/clarawr/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":" * Represents a task of type TODO.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":" * Inherits from the {@link Task} class and provides specific implementations","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" * for the task type and its related behaviors.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"     * @param description A brief description of the task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"     * @param isDone A boolean indicating whether the task is completed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"    public Todo (String description, boolean isDone) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representing the Todo task, including its completion status.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        return \" [T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"     * Returns a string representation of the Todo task in a format suitable for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"     * @return A string representation of the Todo task formatted for file storage.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"    @Override","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"        return \"[T]\" + super.toFileString();","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":40}},{"path":"src/main/java/clarawr/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"/**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":" * Provides a method for displaying messages to the user, including","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":" * task list.","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":" */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"public class Ui {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"    /**","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"     * If the task list is empty, a message indicating so is displayed.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"     *","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"     * @return A formatted string representation of the tasks in the list,","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"     * or a message indicating that no tasks are available.","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"     */","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"    public String showListOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"            return \"No tasks in your list.\";","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"            response.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"        return response.toString().trim();","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-15","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"2\"\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"clarawr.MainWindow\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-09","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":17}},{"path":"src/test/java/clarawr/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"    public void checkGetAllTask() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"        Task toDoTask \u003d new Todo(\"eat\", false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"        String deadlineTaskInput \u003d \"Submit CS2103 Assignment /by 2025-12-12 1200\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brvndonkoh"},"content":"        String[] parts \u003d deadlineTaskInput.split(\" /by \");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brvndonkoh"},"content":"        String dateTime \u003d parts[1].substring(0, 10) + \" \" + parts[1].substring(11, 13) + \":\" + parts[1].substring(13); // Add a colon between hours and minutes","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"        Task deadlineTask \u003d new Deadline(parts[0], deadline, false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"        deadlineTask.markAsDone();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":"        // Verify that the task list contains the correct tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brvndonkoh"},"content":"        assertEquals(2, allTasks.size()); // There should be 2 tasks","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brvndonkoh"},"content":"        // Verify that the Todo task is the first one and is not done","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brvndonkoh"},"content":"        assertEquals(\"eat\", allTasks.get(0).getDescription());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brvndonkoh"},"content":"        assertEquals(false, allTasks.get(0).isDone());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brvndonkoh"},"content":"        // Verify that the Deadline task is the second one and is marked as done","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brvndonkoh"},"content":"        assertEquals(\"Submit CS2103 Assignment\", allTasks.get(1).getDescription());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brvndonkoh"},"content":"        assertTrue(allTasks.get(1).isDone());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":42}},{"path":"src/test/java/clarawr/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"package clarawr;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"public class TodoTest {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"    @Test","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"    public void checkToStringTest() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"        Task todoTask \u003d new Todo(\"eat\", false);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"        assertEquals(\" [T][ ] eat\",","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"                todoTask.toString());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brvndonkoh"},"content":"todo revise CS2106","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brvndonkoh"},"content":"deadline CS2103 /by Fri 4pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brvndonkoh"},"content":"event internship interview /from Mon 4pm /to Mon 5pm","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brvndonkoh"},"content":"todo dinner with parents","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"mark 4","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brvndonkoh"},"content":"mark 3","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brvndonkoh"},"content":"mark 5","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brvndonkoh"},"content":"mark 1","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brvndonkoh"},"content":"mark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":"unmark 2","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"list","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brvndonkoh"},"content":"bye","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brvndonkoh"},"content":") ELSE (","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brvndonkoh"},"content":"    echo Build OK!","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brvndonkoh"},"content":"java -classpath ..\\bin Clarawr \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brvndonkoh"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brvndonkoh"},"content":"REM compare the output to the expected output, ignoring white space differences","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brvndonkoh"},"content":"FC /L /W ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brvndonkoh"},"content":"REM Check if FC found a difference","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brvndonkoh"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brvndonkoh"},"content":"    echo Something is wrong! Files do not match.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brvndonkoh"},"content":") ELSE (","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brvndonkoh"},"content":"    echo Yes! All the files are the same. Test passed! :D","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brvndonkoh"},"content":")","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"brvndonkoh":13,"-":16}}]
