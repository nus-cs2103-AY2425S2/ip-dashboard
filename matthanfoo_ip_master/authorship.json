[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"checkstyle {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"# Chatty User Guide","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"![a screenshot of the user interface](/assets/images/UI.png)","lastModifiedDate":"2025-02-25T23:49:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"Chatty helps you manage your everyday tasks, from to-dos to events and deadlines","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"## Features","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"### Feature: Task Listing","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"Displays all tasks currently stored in the system.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"`list`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"1. [T] Read book","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"2. [D] Submit report (by: Mar 1 2025)","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"### Feature: Marking Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"Marks a task as completed.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"`mark \u003ctask number\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"OK, I\u0027ve marked this task as done: \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"### Feature: Unmarking Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"Unmarks a completed task.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"`unmark \u003ctask number\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"OK, I\u0027ve marked this task as not completed: \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"### Feature: Deleting Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"Deletes a task from the list.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"Noted. I\u0027ve removed this task: \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"Now you have \u003cnumber of tasks\u003e items in the list","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"### Feature: Finding Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"Finds tasks that contain a given keyword.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"1. \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"2. \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"No tasks matching your search were found.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"### Feature: Recurring Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"matthanfoo"},"content":"Sets a recurring task for a given period.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"matthanfoo"},"content":"`recur \u003ctask number\u003e /by \u003cfrequency\u003e /for \u003ccount\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"matthanfoo"},"content":"#### Example","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"matthanfoo"},"content":"recur 1 /by weekly /for 4","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"matthanfoo"},"content":"Successfully recurred \u003ctask details\u003e \u003cfrequency\u003e for \u003cno. of occurrences\u003e occurrences.\",","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"### Feature: Today\u0027s Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"Displays tasks scheduled for today.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"matthanfoo"},"content":"`today`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"matthanfoo"},"content":"Here are your tasks for today:","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"matthanfoo"},"content":"1. \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"matthanfoo"},"content":"2. \u003ctask details\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"matthanfoo"},"content":"No tasks for today!","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"matthanfoo"},"content":"### Feature: Adding To-Do Tasks","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"matthanfoo"},"content":"Adds a general to-do task.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"matthanfoo"},"content":"`todo \u003ctask name\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"matthanfoo"},"content":"#### Example","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"matthanfoo"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"matthanfoo"},"content":"Task added: [T] \u003ctask name\u003e","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"matthanfoo"},"content":"Now you have \u003cnumber of tasks\u003e items in the list.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"matthanfoo"},"content":"### Feature: Adding Events","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"matthanfoo"},"content":"Adds an event task with a specific date and time.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"matthanfoo"},"content":"`event \u003cevent name\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"matthanfoo"},"content":"#### Example","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"matthanfoo"},"content":"event Team meeting /at 2025-03-02 10:00 AM","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"matthanfoo"},"content":"Task added: [E] \u003ctitle\u003e (from: \u003cdatetime\u003e to: \u003cdatetime\u003e)","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"matthanfoo"},"content":"Now you have \u003cnumber of tasks\u003e items in the list.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"matthanfoo"},"content":"### Feature: Adding Deadlines","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"matthanfoo"},"content":"Adds a deadline task.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"matthanfoo"},"content":"#### Usage","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"matthanfoo"},"content":"`deadline \u003ctask name\u003e /by \u003cdue date\u003e`","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"matthanfoo"},"content":"#### Example","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"matthanfoo"},"content":"deadline Submit report /by 2025-03-01","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"matthanfoo"},"content":"#### Expected Output","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"matthanfoo"},"content":"Task added: [D] \u003ctitle\u003e (by: \u003cdatetime\u003e)","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"matthanfoo"},"content":"Now you have \u003cnumber of tasks\u003e items in the list.","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"matthanfoo"},"content":"```","lastModifiedDate":"2025-02-25T01:55:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"matthanfoo":133,"-":23}},{"path":"src/main/java/Chatty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"import running.Parser;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import running.Storage;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import running.TaskList;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" * Runs the bot through the UI object instantiated when the main function is run","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"public class Chatty {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"     * use the default filePath to read in any stored in the file corresponding to the filePath into a Storage object","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"     * which is then read into a TaskList object and passed to the UI to use when interacting with the user","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    public Chatty() {","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"        return parser.execute(tasks, input);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"     * Save all working tasks before terminating","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"    public void save() {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-04T16:08:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false}],"authorContributionMap":{"matthanfoo":38}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"        try {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"    private void flip() {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"        db.flip();","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"        return db;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false}],"authorContributionMap":{"matthanfoo":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"public class Launcher {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    private Chatty chatty \u003d new Chatty();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"        try {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(chatty);  // inject the Duke instance","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"            stage.show();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    private Chatty chatty;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"     * Initialize the chatbot window, add dialog containers and print a welcome message to the user","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Chatty McChatface!\\nWhat can I do for you?\", dukeImage));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"    public void setDuke(Chatty c) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"        chatty \u003d c;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"    @FXML","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"            chatty.save();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"                    DialogBox.getDukeDialog(\"Data saved successfully. Goodbye!\", dukeImage));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"            userInput.clear();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"            // Use JavaFX PauseTransition instead of Thread.sleep","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"            delay.setOnFinished(event -\u003e System.exit(0)); // Exit after delay","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"            delay.play();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"            return; // Prevent further execution9","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"        String response \u003d chatty.getResponse(input);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"matthanfoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"        );","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":72}},{"path":"src/main/java/running/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package running;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" * Parser uses its main function (execute) to break down a string of user input into specific commands and details","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":" * to be passed into other functions and returns a signal to the user interface (UI) whether","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":" * to continue accepting input","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"public class Parser {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    public Parser() {}","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string representing a date and checks if it is in dd-mm-yyyy format and","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"     * if the date, month, and year are within reasonable values so that it can be used to create","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"     * a valid date time object","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"     * @param   date    a string representing only the date of a datetime input","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"     * @return          a boolean if the date provided is formatted correctly","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    public static boolean validateDate(String date) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"        String regex \u003d \"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-(\\\\d{4})$\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"        Matcher matcher \u003d pattern.matcher(date);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"        return matcher.matches();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string representing a time and checks if it is in HH:mm format and","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"     * if the hour and minute are within reasonable values so that it can be used to create","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"     * a valid date time object","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"     * @param   time    a string representing only the time of a datetime input","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"     * @return          a boolean if the time provided is formatted correctly","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"    public static boolean validateTime(String time) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"        String regex \u003d \"^([01][0-9]|2[0-3]):[0-5][0-9]$\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"        Matcher matcher \u003d pattern.matcher(time);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"        return matcher.matches();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string intended to contain an item index,","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"     * attempts to extract the first string to contain a sequence of digits,","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"     * and tries to convert this string to an integer that can be used to index the item indicated","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"     * @param   s       a string that contains a valid integer representing an index","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"     * @return          a non-negative index if a valid integer is found in the command","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"     *                  and -1 if the input is not valid and an integer cannot be found","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"    public static int parseIndex(String s) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"        Pattern p \u003d Pattern.compile(\"([0-9]+$)\");","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"        Matcher m \u003d p.matcher(s);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"        int index \u003d -1;","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"        if (m.find()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"            index \u003d Integer.parseInt(m.group(1)) - 1;","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"        return index;","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string containing a full task creation command and extracts the title/name of the task","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"     * @param   s           a string representing the full command to create a task","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"matthanfoo"},"content":"     * @param   taskType    an integer representing the task the user is trying to create","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"     *                      (1 - todo, 2 - event, 3 - deadline)","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"     * @return              a string representing the title/name of the task the user is trying to create \u003cbr\u003e","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"     *                      if no title is found, it returns an empty string \"\"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"    public static String parseTitle(String s, int taskType) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"matthanfoo"},"content":"        String type \u003d taskType \u003d\u003d 1 ? \"todo\" : (taskType \u003d\u003d 2 ? \"event\" : \"deadline\");","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"matthanfoo"},"content":"        Pattern titlePattern \u003d Pattern.compile(type + \"\\\\s+([^/]+)\");","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"matthanfoo"},"content":"        Matcher titlePatternMatcher \u003d titlePattern.matcher(s);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"matthanfoo"},"content":"        return titlePatternMatcher.find() ? titlePatternMatcher.group(1).trim() : \"\";","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in any string and a regex pattern and extracts the first sequence that matches the pattern","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"matthanfoo"},"content":"     * @param   s       any string of text","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"matthanfoo"},"content":"     * @param   regex   a regex pattern for search","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"     * @return          the first sequence in s that is matched by regex, \u003cbr\u003e","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"matthanfoo"},"content":"     *                  if no matches are found it returns an empty string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"matthanfoo"},"content":"    public static String parseRegex(String s, String regex) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"matthanfoo"},"content":"        Pattern p \u003d Pattern.compile(regex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"        Matcher m \u003d p.matcher(s);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"        return m.find() ? m.group(1) : \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a possible date-time string and attempts to validate it and","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"matthanfoo"},"content":"     * convert it into a valid datetime format string according to \"dd-mm-yyyy HH:mm\"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"matthanfoo"},"content":"     * @param   input   a string identified as a possible representation of a datetime","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"matthanfoo"},"content":"     * @return          a valid datetime formatted string according to \"dd-mm-yyyy HH:mm\"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"matthanfoo"},"content":"     * @throws  Exception if the date or time provided were not properly formatted or invalid","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"matthanfoo"},"content":"    public static String readInputIntoIso(String input) throws Exception {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"matthanfoo"},"content":"        // need to throw exception","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"matthanfoo"},"content":"        // validates expected format either \"dd-mm-yyyy\" or \"dd-mm-yyyy hh:mm\" --\u003e return \"dd-mm-yyyy hh:mm\"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"matthanfoo"},"content":"        String[] dateitems \u003d input.split(\" \");","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"matthanfoo"},"content":"        String date \u003d \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"matthanfoo"},"content":"        String time \u003d \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"matthanfoo"},"content":"        if (dateitems.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"matthanfoo"},"content":"            if (validateDate(dateitems[0])) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"matthanfoo"},"content":"                date \u003d dateitems[0];","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"matthanfoo"},"content":"            } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"matthanfoo"},"content":"                throw new Exception(\"invalid date, the accepted format is dd-mm-yyyy, input: \" + input);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"matthanfoo"},"content":"            if (validateTime(dateitems[1])) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"matthanfoo"},"content":"                time \u003d dateitems[1];","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"matthanfoo"},"content":"            } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"matthanfoo"},"content":"                throw new Exception(\"invalid time, the accepted format is HH:mm (24-hour time), input: \" + input);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"matthanfoo"},"content":"        } else if (dateitems.length \u003d\u003d 1) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"matthanfoo"},"content":"            if (validateDate(dateitems[0])) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"matthanfoo"},"content":"                date \u003d dateitems[0];","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"matthanfoo"},"content":"                time \u003d \"00:00\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"matthanfoo"},"content":"            } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"matthanfoo"},"content":"                throw new Exception(\"invalid date, the accepted format is dd-mm-yyyy, input: \" + input);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"matthanfoo"},"content":"            throw new Exception(\"invalid date, the accepted format is dd-mm-yyyy, input: \" + input);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"matthanfoo"},"content":"        return date + \" \" + time;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"matthanfoo"},"content":"     * this function handles a command that intends to create a task","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"matthanfoo"},"content":"     * @param   command     a command identified by the parser execute function as trying to create a task","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"matthanfoo"},"content":"     * @param   tasks       a TaskList holding all current events that new tasks can be added to","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"matthanfoo"},"content":"     * @param   taskType    an integer representing the task the user is trying to create","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"matthanfoo"},"content":"     *                      (1 - todo, 2 - event, 3 - deadline)","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"matthanfoo"},"content":"     * @return              the output (acknowledgement or error) from the creation of a Task","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"matthanfoo"},"content":"    public static String handleTaskCommand(String command, TaskList tasks, int taskType) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"matthanfoo"},"content":"        String title \u003d parseTitle(command, taskType);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"matthanfoo"},"content":"        String printText;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"matthanfoo"},"content":"        if (title.equals(\"\")) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"matthanfoo"},"content":"            return \"Invalid task title\";","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"matthanfoo"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"matthanfoo"},"content":"        case 1:","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d tasks.createTodo(title);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"matthanfoo"},"content":"            break;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"matthanfoo"},"content":"        case 2:","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"matthanfoo"},"content":"            String fromString \u003d parseRegex(command, \"/from\\\\s*(.*?)\\\\s+/\");","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"matthanfoo"},"content":"            String toString \u003d parseRegex(command, \"/to\\\\s*(.*)\");","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"matthanfoo"},"content":"            try {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"matthanfoo"},"content":"                fromString \u003d readInputIntoIso(fromString);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"matthanfoo"},"content":"                toString \u003d readInputIntoIso(toString);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"matthanfoo"},"content":"                printText \u003d tasks.createEvent(title, fromString, toString);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"matthanfoo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"matthanfoo"},"content":"                printText \u003d e.getMessage();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"matthanfoo"},"content":"            break;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"matthanfoo"},"content":"        case 3:","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"matthanfoo"},"content":"            String byString \u003d parseRegex(command, \"/by\\\\s*(.*)\");","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"matthanfoo"},"content":"            try {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"matthanfoo"},"content":"                byString \u003d readInputIntoIso(byString);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"matthanfoo"},"content":"                printText \u003d tasks.createDeadline(title, byString);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"matthanfoo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"matthanfoo"},"content":"                printText \u003d e.getMessage();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"matthanfoo"},"content":"            break;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"matthanfoo"},"content":"        default:","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"matthanfoo"},"content":"            return \"Invalid task title\";","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"matthanfoo"},"content":"        return printText;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a command, parses it to identify the action to be taken, executes the action,","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"matthanfoo"},"content":"     * then returns a reply to the main method to send/display to the user","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"matthanfoo"},"content":"     * @param   tasks   the current list of tasks","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"matthanfoo"},"content":"     * @param   command the input read from the user interface","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"matthanfoo"},"content":"     * @return          false if the user would like to exit, and true otherwise","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"matthanfoo"},"content":"    public String execute(TaskList tasks, String command) {","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"matthanfoo"},"content":"        String printText \u003d \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"matthanfoo"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"matthanfoo"},"content":"            assert command.trim().equals(\"bye\"):","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"matthanfoo"},"content":"                    \"command should only contain bye (not strict). command was: \" + command;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"matthanfoo"},"content":"            return \"bye\";","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"matthanfoo"},"content":"            assert command.trim().equals(\"list\"):","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"matthanfoo"},"content":"                    \"command should only contain list (not strict). command was: \" + command;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d tasks.list();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.equalsIgnoreCase(\"today\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"matthanfoo"},"content":"            assert command.trim().equals(\"today\"):","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"matthanfoo"},"content":"                    \"command should only contain today (not strict). command was: \" + command;","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d tasks.today();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"matthanfoo"},"content":"            int markIndex \u003d parseIndex(command);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d markIndex \u003c 0 ? \"Invalid input\" : tasks.unmarkTask(markIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"mark\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"matthanfoo"},"content":"            int markIndex \u003d parseIndex(command);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d markIndex \u003c 0 ? \"Invalid input\" : tasks.markTask(markIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"matthanfoo"},"content":"            int markIndex \u003d parseIndex(command);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d markIndex \u003c 0 ? \"Invalid input\" : tasks.deleteTask(markIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"matthanfoo"},"content":"            String findText \u003d parseRegex(command, \"find\\s*(.*)\");","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d tasks.find(findText);","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"recur\")) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"matthanfoo"},"content":"            int recurIndex \u003d parseIndex(command);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"matthanfoo"},"content":"            String recurType \u003d parseRegex(command, \"/by\\\\s*(\\\\w+)\");","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"matthanfoo"},"content":"            int recurCount \u003d Integer.parseInt(parseRegex(command, \"/for\\\\s*(\\\\d+)\"));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d tasks.recur(recurIndex, recurType, recurCount);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"matthanfoo"},"content":"            handleTaskCommand(command, tasks, 1);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"matthanfoo"},"content":"            handleTaskCommand(command, tasks, 2);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"matthanfoo"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"matthanfoo"},"content":"            handleTaskCommand(command, tasks, 3);","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"matthanfoo"},"content":"            printText \u003d \"Invalid command\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"matthanfoo"},"content":"        return printText;","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false}],"authorContributionMap":{"matthanfoo":234}},{"path":"src/main/java/running/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package running;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import java.io.File;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"import tasks.Todo;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":" * Storage is a representation of the database. It reads from and writes to a CSV file where the data is stored","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":" * on the user\u0027s local drive","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"public class Storage {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    private static final String fileName \u003d \"ChattyData.csv\";","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    public Storage() {}","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string array of items in a row downloaded from a csv,","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"     * and creates a task with the relevant information","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"     * @param   row     a string array containing items corresponding to the columns in the csv for a row","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"     * @return          a task created with the relevant information","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"     * @throws Exception if the task is not either a todo, deadline, or an event","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"    public Task readRowToTask(String[] row) throws Exception {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"        assert row.length \u003d\u003d 5: \"row must contain exactly 5 elements\";","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"        Task t;","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"        if (row[0].equals(\"T\")) {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"            t \u003d new Todo(row[1]);","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"            if (row[2].equals(\"X\")) {","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"                t.mark();","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"        } else if (row[0].equals(\"E\")) {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"            t \u003d new Event(row[1], LocalDateTime.parse(row[3], dateTimeFormatter),","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"                    LocalDateTime.parse(row[3], dateTimeFormatter));","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"            if (row[2].equals(\"X\")) {","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"                t.mark();","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"        } else if (row[0].equals(\"D\")) {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"            t \u003d new Deadline(row[1], LocalDateTime.parse(row[3], dateTimeFormatter));","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"            if (row[2].equals(\"X\")) {","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"                t.mark();","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"            throw new Exception(\"Invalid task\");","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"        return t;","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"     * this function creates a new csv file with the private final static filename and returns either a message","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"     * informing about success or failure of file creation","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"matthanfoo"},"content":"     * @return             file creation success or fail","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"     * @throws IOException if error writing to file","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"    public String createNewFile() {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"            return \"CSV file written successfully.\";","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"matthanfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"matthanfoo"},"content":"            return \"Error writing to file. \\n\" + e.getMessage();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"matthanfoo"},"content":"     * this function reads a csv file into a string line by line and converts each line into a Task to be added","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"matthanfoo"},"content":"     * into an ArrayList of Tasks","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"matthanfoo"},"content":"     * @return             an ArrayList of Tasks read from the csv file","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"matthanfoo"},"content":"     * @throws Exception   if error reading from file","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"matthanfoo"},"content":"    public ArrayList\u003cTask\u003e readFileToTasks() throws Exception {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"matthanfoo"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"matthanfoo"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"matthanfoo"},"content":"        String line;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"        while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"matthanfoo"},"content":"            String[] row \u003d line.split(\",\"); // Splitting by comma","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"matthanfoo"},"content":"            taskList.add(readRowToTask(row));","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"matthanfoo"},"content":"        return taskList;","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T20:14:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"matthanfoo"},"content":"     * this function converts a csv file of saved data into an ArrayList of Tasks","lastModifiedDate":"2025-02-16T20:14:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"matthanfoo"},"content":"     * @return          an ArrayList of Tasks as read from the csv file database","lastModifiedDate":"2025-02-16T20:14:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"matthanfoo"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"matthanfoo"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"matthanfoo"},"content":"        ArrayList\u003cTask\u003e userInputs \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"matthanfoo"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"matthanfoo"},"content":"            System.out.println(\"File exists, reading contents...\");","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"matthanfoo"},"content":"            try {","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"matthanfoo"},"content":"                userInputs \u003d readFileToTasks();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"matthanfoo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-02-16T20:00:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"matthanfoo"},"content":"                System.out.println(\"Error reading file\");","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"matthanfoo"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"matthanfoo"},"content":"            System.out.println(\"File does not exist, creating new CSV...\");","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"matthanfoo"},"content":"            createNewFile();","lastModifiedDate":"2025-02-20T00:45:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"matthanfoo"},"content":"        return userInputs;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a TaskList object and reads it into multiple lines in order to save into a csv file","lastModifiedDate":"2025-02-16T20:14:18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"matthanfoo"},"content":"     * @param tasks          a TaskList containing a list of tasks from the chatbot","lastModifiedDate":"2025-02-16T20:14:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"matthanfoo"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"matthanfoo"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(fileName, false))) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"matthanfoo"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"matthanfoo"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"matthanfoo"},"content":"                writer.println(task.toCsvFormat());","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"matthanfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"matthanfoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false}],"authorContributionMap":{"matthanfoo":138}},{"path":"src/main/java/running/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package running;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"import tasks.Deadline;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"import tasks.Event;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"import tasks.Todo;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":" * TaskList is a class that contains an underlying ArrayList of Task objects, with methods to edit and filter the list","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":" * of tasks and convert the list into readable/printable strings","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"public class TaskList {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"     * this function converts all the tasks stored into a printable, numerated format","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"     * @return          a formatted, numerated string of all the tasks","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"    public String list() {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"        int i \u003d 0;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"            while (i !\u003d tasks.size()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"                result +\u003d \"\\n\" + String.valueOf(i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"                i++;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"There are no tasks in your list\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"        return result;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"     * this function identifies all tasks that occur / are due today and","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"     * converts all the tasks stored into a printable, numerated format","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"     * @return          a formatted, numerated string of all the tasks with date matching the current date","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"    public String today() {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"        ArrayList\u003cTask\u003e todayTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"            if (task.getDt1().toLocalDate().equals(LocalDateTime.now().toLocalDate())) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"                todayTasks.add(task);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"        if (!todayTasks.isEmpty()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"Here are your tasks for today: \";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"            for (Task task : todayTasks) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"                result +\u003d task + \"\\n\";","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"No tasks for today!\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"matthanfoo"},"content":"        return result;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"     * this function creates a Todo object using the provided title","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"     * @param   title   the title identified by the Parser","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"matthanfoo"},"content":"     * @return                  an acknowledgement of the task creation along with task details","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"matthanfoo"},"content":"    public String createTodo(String title) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"matthanfoo"},"content":"        Todo t \u003d new Todo(title);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"matthanfoo"},"content":"        tasks.add(t);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"matthanfoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + t + \"\\nNow you have \" + tasks.size() + \" items in the list.\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"matthanfoo"},"content":"     * this function creates a Deadline object using the provided title and string representing the deadline","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"     * @param   deadlineTitle   the title identified by the Parser","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"matthanfoo"},"content":"     * @param   byString        the formatted datetime string representing the deadline for the task","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"matthanfoo"},"content":"     * @return                  an acknowledgement of the task creation along with task details","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"matthanfoo"},"content":"    public String createDeadline(String deadlineTitle, String byString) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"        Deadline d \u003d new Deadline(deadlineTitle, LocalDateTime.parse(byString, dateTimeFormatter));","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"        tasks.add(d);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"matthanfoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + d + \"\\nNow you have \" + tasks.size() + \" items in the list.\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"matthanfoo"},"content":"     * this function creates an Event object using the provided title and","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"matthanfoo"},"content":"     * strings representing the start and end time of the event","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"matthanfoo"},"content":"     * @param   eventTitle  the title identified by the Parser","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"matthanfoo"},"content":"     * @param   fromString  the formatted datetime string representing the starttime for the task","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"matthanfoo"},"content":"     * @param   toString    the formatted datetime string representing the endtime for the task","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"matthanfoo"},"content":"     * @return              an acknowledgement of the task creation along with task details","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"matthanfoo"},"content":"    public String createEvent(String eventTitle, String fromString, String toString) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"matthanfoo"},"content":"        Event e \u003d new Event(eventTitle, LocalDateTime.parse(fromString, dateTimeFormatter),","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"matthanfoo"},"content":"                LocalDateTime.parse(toString, dateTimeFormatter));","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"matthanfoo"},"content":"        tasks.add(e);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"matthanfoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + e + \"\\nNow you have \" + tasks.size() + \" items in the list.\";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"matthanfoo"},"content":"     * this function ensures the item to be marked as completed is in the list,","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"matthanfoo"},"content":"     * if it is, it marks the event as completed, or else it informs the user the item does not exist","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"matthanfoo"},"content":"     * @param   markIndex   an integer representing the index of the item to be marked as completed","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"matthanfoo"},"content":"     * @return              an acknowledgement of the task completion or the task not existing","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"matthanfoo"},"content":"    public String markTask(int markIndex) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"matthanfoo"},"content":"        if (markIndex \u003c tasks.size()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"matthanfoo"},"content":"            Task task \u003d tasks.get(markIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"matthanfoo"},"content":"            task.mark();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"matthanfoo"},"content":"            return (\"OK, I\u0027ve marked this task as done:\\n   \" + task);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"matthanfoo"},"content":"            return \"Invalid index: \" + markIndex;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"matthanfoo"},"content":"     * this function ensures the item to be marked as not completed is in the list,","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"matthanfoo"},"content":"     * if it is, it marks the event as not completed, or else it informs the user the item does not exist","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"matthanfoo"},"content":"     * @param   markIndex   an integer representing the index of the item to be marked as not completed","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"matthanfoo"},"content":"     * @return              an acknowledgement of the task de-completion or the task not existing","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"matthanfoo"},"content":"    public String unmarkTask(int markIndex) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"matthanfoo"},"content":"        if (markIndex \u003c tasks.size()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"matthanfoo"},"content":"            Task task \u003d tasks.get(markIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"matthanfoo"},"content":"            task.unmark();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"matthanfoo"},"content":"            return (\"OK, I\u0027ve marked this task as not done yet:\\n   \" + task);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"matthanfoo"},"content":"            return \"Invalid index: \" + markIndex;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"matthanfoo"},"content":"     * this function ensures the item to be deleted is in the list,","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"matthanfoo"},"content":"     * if it is, it marks the event as deleted, or else it informs the user the item does not exist","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"matthanfoo"},"content":"     * @param   delIndex   an integer representing the index of the item to be deleted","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"matthanfoo"},"content":"     * @return             an acknowledgement of the task deletion and number of tasks remaining","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"matthanfoo"},"content":"     *                     or information that the task does not exist","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"matthanfoo"},"content":"    public String deleteTask(int delIndex) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"matthanfoo"},"content":"        if (delIndex \u003c tasks.size()) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"matthanfoo"},"content":"            Task task \u003d tasks.get(delIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"matthanfoo"},"content":"            tasks.remove(delIndex);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"matthanfoo"},"content":"            return \"Noted. I\u0027ve removed this task:\\n   \" + task","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"matthanfoo"},"content":"                    + \"\\n Now you have \" + tasks.size() + \" items in the list.\";","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"matthanfoo"},"content":"            return \"Invalid index: \" + delIndex;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"matthanfoo"},"content":"     * this function takes in a string findText and finds all tasks","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"matthanfoo"},"content":"     * containining findText (case-insensitive) in its description and returns a readbale list as a string","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"matthanfoo"},"content":"     * @param   findText    a string containing target text to search for","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"matthanfoo"},"content":"     * @return              a list of all tasks containing findText","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"matthanfoo"},"content":"    public String find(String findText) {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"matthanfoo"},"content":"        assert !findText.equals(\"\") : \"empty findText field\";","lastModifiedDate":"2025-02-19T23:05:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"matthanfoo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"matthanfoo"},"content":"        ArrayList\u003cTask\u003e findTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"matthanfoo"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"matthanfoo"},"content":"            if (Pattern.compile(Pattern.quote(findText), Pattern.CASE_INSENSITIVE)","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"matthanfoo"},"content":"                    .matcher(task.getDescription()).find()) {","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"matthanfoo"},"content":"                findTasks.add(task);","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"matthanfoo"},"content":"        if (!findTasks.isEmpty()) {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"matthanfoo"},"content":"            for (Task task : findTasks) {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"matthanfoo"},"content":"                result +\u003d \"\\n\" + task;","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"matthanfoo"},"content":"        } else {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"matthanfoo"},"content":"            result \u003d \"No tasks matching your search were found.\";","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"matthanfoo"},"content":"        return result;","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"matthanfoo"},"content":"     * this function abstracts the checking of a valid recur type (day/month/week/year)","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"matthanfoo"},"content":"     * @param   recurType    a string containing a potentially valid recurType","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"matthanfoo"},"content":"     * @return               true if recurType is either d, w, m, or y and false otherwise","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"matthanfoo"},"content":"    public boolean recurTypeCheck(String recurType) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"matthanfoo"},"content":"        return recurType.equals(\"d\") || recurType.equals(\"w\") || recurType.equals(\"m\") || recurType.equals(\"y\");","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"matthanfoo"},"content":"     * this function recurs a specific Task with a specified interval for a specified number of times","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"matthanfoo"},"content":"     * @param   recurIndex   an integer representing the index of the item to be recurred","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"matthanfoo"},"content":"     * @param   recurType    a string containing a potentially valid recurType","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"matthanfoo"},"content":"     * @param   recurCount   an integer representing the number of times to recur the event for","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"matthanfoo"},"content":"     * @return               either a acknowledgement of successful recurrence creation or error message","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"matthanfoo"},"content":"    public String recur(int recurIndex, String recurType, int recurCount) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"matthanfoo"},"content":"        if (recurIndex \u003e\u003d tasks.size() || recurIndex \u003c 0 || !recurTypeCheck(recurType)) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"matthanfoo"},"content":"            return recurIndex \u003e\u003d tasks.size() || recurIndex \u003c 0 ? \"Invalid index: \" + recurIndex","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"matthanfoo"},"content":"                    : \"Invalid recur type: \" + recurType + \"\\nRecur type must be (d)ay / (m)onth / (w)eek / (y)ear\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"matthanfoo"},"content":"        if (recurIndex \u003c tasks.size()) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"matthanfoo"},"content":"            Task task \u003d tasks.get(recurIndex);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"matthanfoo"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"matthanfoo"},"content":"                return \"Cannot recur a Todo as it has no date attached\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"matthanfoo"},"content":"            for (int i \u003d 0; i \u003c recurCount; i++) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"matthanfoo"},"content":"                task \u003d task.createRecur(recurType);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"matthanfoo"},"content":"                tasks.add(task);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"matthanfoo"},"content":"            }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"matthanfoo"},"content":"            String recurDetail \u003d switch (recurType) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"matthanfoo"},"content":"            case \"d\" -\u003e \"daily\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"matthanfoo"},"content":"            case \"w\" -\u003e \"weekly\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"matthanfoo"},"content":"            case \"m\" -\u003e \"monthly\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"matthanfoo"},"content":"            case \"y\" -\u003e \"yearly\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"matthanfoo"},"content":"            default -\u003e \"\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"matthanfoo"},"content":"            };","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"matthanfoo"},"content":"            return String.format(\"Successfully recurred \\\"%s\\\" %s for %d occurrences.\",","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"matthanfoo"},"content":"                    task.getDescription(), recurDetail, recurCount);","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"matthanfoo"},"content":"        return \"\";","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"matthanfoo"},"content":"     * this function returns the underlying ArrayList of Tasks","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"matthanfoo"},"content":"     * @return  an ArrayList of Tasks stored in the TaskList","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"matthanfoo"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"matthanfoo"},"content":"        return tasks;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false}],"authorContributionMap":{"matthanfoo":254}},{"path":"src/main/java/running/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package running;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":" * user interface sends and receives messages from the user and uses a Parser object to process input","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":" * and thus execute commands from the user","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"public class UI {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"    protected Storage storage;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    protected TaskList taskList;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    private BufferedReader br;","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"     * uses the default Storage and TaskList objects provided to it, and creates a new BufferedReader to start","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"     * reading user input","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"     * @param storage   Storage object passed in when the bot is started","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"     * @param taskList  TaskList object passed in when the bot is started","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    public UI(Storage storage, TaskList taskList) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"     * this function reads the next line from the reader and returns it as a string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"     * @return  the next line from the reader","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"     * @throws  if the reader throws an exception","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"        // validate and convert command into text","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"        String command \u003d this.br.readLine();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"        return command;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"     * this function prints a line of hyphens to function as a divider between user input and bot response","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"    public void printLine() {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"     * this function prints the string passed to it as a reply to the user","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"     * @param   s   any string to be sent as a message to the user","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"    public void print(String s) {","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"        System.out.println(s);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"        printLine();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false}],"authorContributionMap":{"matthanfoo":56}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package tasks;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":" * Deadline is a subclass of Task with a by datetime","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"        super(description, by, LocalDateTime.of(1990, 01, 01, 00, 00, 00, 00));","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dt1.format(super.dateTimeFormatter) + \")\";","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"        return \"D,\" + super.toCsvFormat();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    public Deadline createRecur(String recurType) throws IllegalArgumentException {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"        return switch (recurType) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"        case \"d\" -\u003e new Deadline(this.description, this.dt1.plusDays(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"        case \"w\" -\u003e new Deadline(this.description, this.dt1.plusWeeks(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"        case \"m\" -\u003e new Deadline(this.description, this.dt1.plusMonths(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"        case \"y\" -\u003e new Deadline(this.description, this.dt1.plusYears(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"        default -\u003e throw new IllegalArgumentException(\"Invalid recur type: \" + recurType","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"                + \" . Recur type must be (d)ay / (m)onth / (w)eek / (y)ear\");","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"        };","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false}],"authorContributionMap":{"matthanfoo":35}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package tasks;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":" * Event is a subclass of Task with a from and to datetime","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"        super(description, start, end);","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + dt1.format(super.dateTimeFormatter) + \" to: \"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"                + dt2.format(super.dateTimeFormatter) + \")\";","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        return \"E,\" + super.toCsvFormat();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    public Event createRecur(String recurType) throws IllegalArgumentException {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"        return switch (recurType) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"        case \"d\" -\u003e new Event(this.description, this.dt1.plusDays(1), this.dt2.plusDays(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"        case \"w\" -\u003e new Event(this.description, this.dt1.plusWeeks(1), this.dt2.plusWeeks(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"        case \"m\" -\u003e new Event(this.description, this.dt1.plusMonths(1), this.dt2.plusMonths(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"        case \"y\" -\u003e new Event(this.description, this.dt1.plusYears(1), this.dt2.plusYears(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"        default -\u003e throw new IllegalArgumentException(\"Invalid recur type: \" + recurType","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"                + \" . Recur type must be (d)ay / (m)onth / (w)eek / (y)ear\");","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"        };","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false}],"authorContributionMap":{"matthanfoo":37}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package tasks;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" * Task represents any item in the list, and holds information about the task description, completion, and timings","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"public class Task {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"    protected static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    protected String description;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    protected LocalDateTime dt1;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    protected LocalDateTime dt2;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"     * creates a task object with the provided title and datetimes and","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"     * sets isDone to false by default as tasks entered are by default incomplete","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    public Task(String description, LocalDateTime dt1, LocalDateTime dt2) {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"        this.dt1 \u003d dt1;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"        this.dt2 \u003d dt2;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"     * this function returns the completion status of a Task as a string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"     * @return  \"X\" is the task is done, \"\" if the task is not","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"     * this function marks an item as completed","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"    public void mark() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"     * this function marks an item as not completed","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"    public void unmark() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"     * this function converts a task into a readable string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"     * @return  task details as a readbale string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"    public String toString() {","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"        return \" [\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"     * this function returns the first date of a Task (none for todo, deadline for deadline, start for event)","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"     * this datetime object is used for identifying if the task is occurring today, and for sorting (not implemented)","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"matthanfoo"},"content":"     * @return  DateTime object representing the datetime tagged to the event","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"matthanfoo"},"content":"    public LocalDateTime getDt1() {","lastModifiedDate":"2025-02-12T00:16:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"matthanfoo"},"content":"        return dt1;","lastModifiedDate":"2025-02-12T00:16:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-12T00:16:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-12T00:16:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"matthanfoo"},"content":"    public String getDescription() {","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"matthanfoo"},"content":"        return description;","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T19:49:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"matthanfoo"},"content":"     * this function converts the task details into a string that can be saved in the csv file","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"matthanfoo"},"content":"     * @return  task details as comma-separated string","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-16T11:40:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"matthanfoo"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"matthanfoo"},"content":"        String doneText \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"matthanfoo"},"content":"        return description + \",\" + doneText + \",\" + dt1.format(dateTimeFormatter) + \",\" + dt2.format(dateTimeFormatter);","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"matthanfoo"},"content":"     * this function creates a new Task with dates shifted forward by the specified recurrence interval","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"matthanfoo"},"content":"     * @param   recurType   either d/w/m/y representing the recurrence interval (day/week/month/year)","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"matthanfoo"},"content":"     * @return              a new Task with new dates","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"matthanfoo"},"content":"    public Task createRecur(String recurType) throws IllegalArgumentException {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"matthanfoo"},"content":"        return switch (recurType) {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"matthanfoo"},"content":"        case \"d\" -\u003e new Task(this.description, this.dt1.plusDays(1), this.dt2.plusDays(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"matthanfoo"},"content":"        case \"w\" -\u003e new Task(this.description, this.dt1.plusWeeks(1), this.dt2.plusWeeks(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"matthanfoo"},"content":"        case \"m\" -\u003e new Task(this.description, this.dt1.plusMonths(1), this.dt2.plusMonths(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"matthanfoo"},"content":"        case \"y\" -\u003e new Task(this.description, this.dt1.plusYears(1), this.dt2.plusYears(1));","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"matthanfoo"},"content":"        default -\u003e throw new IllegalArgumentException(\"Invalid recur type: \" + recurType","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"matthanfoo"},"content":"                + \" . Recur type must be (d)ay / (m)onth / (w)eek / (y)ear\");","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"matthanfoo"},"content":"        };","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-03T16:30:33","isFullCredit":false}],"authorContributionMap":{"matthanfoo":96}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package tasks;","lastModifiedDate":"2025-02-12T22:43:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"/**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":" * Todo is a subclass of Task with no datetime involved","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":" */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"    /**","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"     * Todo uses the superclass Task constructor to create an item with only a title,","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"     * and 01-01-1990 00:00 as a placeholder datetime","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"     * @param   description     The event description","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"     */","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"        super(description, LocalDateTime.of(1990, 01, 01, 00, 00, 00, 00),","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"                LocalDateTime.of(1990, 01, 01, 00, 00, 00, 00));","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    public String toString() {","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-17T23:03:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    public String toCsvFormat() {","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"        return \"T,\" + super.toCsvFormat();","lastModifiedDate":"2025-02-12T21:59:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-11T00:57:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"    @Override","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"    public Todo createRecur(String recurType) throws IllegalArgumentException {","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"        return this;","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-20T01:59:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-04T00:14:15","isFullCredit":false}],"authorContributionMap":{"matthanfoo":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-19T00:58:26","isFullCredit":false}],"authorContributionMap":{"matthanfoo":44}},{"path":"src/test/java/running/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthanfoo"},"content":"package running;","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"matthanfoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"matthanfoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"matthanfoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"matthanfoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"matthanfoo"},"content":"public class TaskListTest {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"matthanfoo"},"content":"    public void validateDate_validDateTrue(){","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.validateDate(\"16-02-2025\"), true);","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"matthanfoo"},"content":"    public void validateDate_invalidDateFalse(){","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.validateDate(\"02-16-25 12:45\"), false);","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.validateDate(\"16/13/25\"), false);","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"matthanfoo"},"content":"    public void validateTime_validTimeTrue(){","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.validateDate(\"12:45\"), true);","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"matthanfoo"},"content":"    public void validateTime_validTimeFalse(){","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.validateDate(\"32:45\"), false);","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"matthanfoo"},"content":"    public void parseMark_returnsDigit() {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.parseIndex(\"mark 3\"), 3);","lastModifiedDate":"2025-02-20T02:15:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.parseIndex(\"unmark 31\"), 31);","lastModifiedDate":"2025-02-20T02:15:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"matthanfoo"},"content":"    public void parseTitle_returnsTitle() {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.parseTitle(\"/todo testtitle\", \"todo\"), \"testtitle\");","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.parseTitle(\"/todo twoword title\", \"todo\"), \"twoword title\");","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"matthanfoo"},"content":"        assertEquals(Parser.parseTitle(\"/deadline twoword title /by date\", \"deadline\"), \"twoword title\");","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"matthanfoo"},"content":"    @Test","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"matthanfoo"},"content":"    public void readInputIntoIso_returnsIsoOrException() {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"matthanfoo"},"content":"        try {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"matthanfoo"},"content":"            assertEquals(Parser.readInputIntoIso(\"16-02-2025 12:00\"), \"16-02-2025 12:00\");","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"matthanfoo"},"content":"            assertEquals(Parser.readInputIntoIso(\"16-02-2025\"), \"16-02-2025 00:00\");","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"matthanfoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"matthanfoo"},"content":"            System.out.println(\"Testing readInputIntoIso, expected true, got: \" + e.getMessage());","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"matthanfoo"},"content":"        }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"matthanfoo"},"content":"        assertThrows(Exception.class, () -\u003e {Parser.readInputIntoIso(\"16-2-2025\");});","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"matthanfoo"},"content":"        assertThrows(Exception.class, () -\u003e {Parser.readInputIntoIso(\"16-22-2025\");});","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"matthanfoo"},"content":"        assertThrows(Exception.class, () -\u003e {Parser.readInputIntoIso(\"16-22-2025 1200\");});","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"matthanfoo"},"content":"        assertThrows(Exception.class, () -\u003e {Parser.readInputIntoIso(\"16-22-2025 25:00\");});","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"matthanfoo"},"content":"    }","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"matthanfoo"},"content":"","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"matthanfoo"},"content":"}","lastModifiedDate":"2025-02-16T10:15:58","isFullCredit":false}],"authorContributionMap":{"matthanfoo":59}}]
