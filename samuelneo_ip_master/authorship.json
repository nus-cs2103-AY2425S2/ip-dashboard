[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"    mainClass.set(\"carbon.Carbon\")","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"    archiveBaseName \u003d \"carbon\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"checkstyle {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"    toolVersion \u003d \u002710.21.1\u0027","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":7,"-":39}},{"path":"src/main/java/carbon/Carbon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import carbon.utils.Ui;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":" * Carbon is the entry point of the program.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"public class Carbon {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"        Ui.start();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":12}},{"path":"src/main/java/carbon/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * An InvalidArgumentException is thrown if the arguments provided for a command are invalid.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class InvalidArgumentException extends RuntimeException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"     * Constructs an InvalidArgumentException with the specified message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"     * @param message The message, which may be retrieved with \u003ccode\u003e.getMessage()\u003c/code\u003e.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":15}},{"path":"src/main/java/carbon/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.exceptions;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * An InvalidCommandException is thrown if the user\u0027s input is not a valid command.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class InvalidCommandException extends RuntimeException {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"     * Constructs an InvalidCommandException with the specified message.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"     * @param message The message, which may be retrieved with \u003ccode\u003e.getMessage()\u003c/code\u003e.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"        super(message);","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":15}},{"path":"src/main/java/carbon/exceptions/InvalidFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.exceptions;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * An InvalidFileFormatException is thrown if the file being read is not in the expected format.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class InvalidFileFormatException extends RuntimeException {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"     * Constructs an InvalidFileFormatException with the specified message.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"     * @param message The message, which may be retrieved with \u003ccode\u003e.getMessage()\u003c/code\u003e.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    public InvalidFileFormatException(String message) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"        super(message);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"     * Constructs an InvalidFileFormatException with the default message \"Invalid file format\".","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"    public InvalidFileFormatException() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        this(\"Invalid file format\");","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"samuelneo":22}},{"path":"src/main/java/carbon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * Deadline is a Task with a due date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    private final Temporal dueBy;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"     * Creates a Deadline with the specified description and due date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"     * @param dueBy Due date/time of the Deadline.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"    public Deadline(String description, String dueBy) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"        super(\u0027D\u0027, description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"        this.dueBy \u003d Temporal.parse(dueBy);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"    public String getStorageText() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"        return super.getStorageText() + \"\\n\" + dueBy;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"     * Additionally, the due date/time is included.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), dueBy);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":35}},{"path":"src/main/java/carbon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * Event is a Task with a start and end date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    private final Temporal start;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"    private final Temporal end;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     * Creates an Event with the specified description, start date/time, and end date/time.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"     * @param start Start date/time of the Event.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"     * @param end End date/time of the Event.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"        super(\u0027E\u0027, description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"        this.start \u003d Temporal.parse(start);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        this.end \u003d Temporal.parse(end);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    public String getStorageText() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"        return super.getStorageText() + \"\\n\" + start + \"\\n\" + end;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"     * Additionally, the start and end date/time is included.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"        return String.format(\"%s (from: %s, to: %s)\", super.toString(), start, end);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":38}},{"path":"src/main/java/carbon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * Task is an entry in the task list.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" * Each Task has a description and a completion status (isDone).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"    protected final char type;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"    protected String description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"     * Creates an Task with the specified description.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"    public Task(char type, String description) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"        return isDone;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"     * Marks the Task as done.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"     * Marks the Task as not done.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"     * Returns an icon representing the completion status of the Task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     * This is \"X\" if the task has been completed,","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"     * or a space \" \" if the task has not been completed.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"     * @return Completion status icon.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done carbon.task with X","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"     * Returns a String, formatted for text storage of the Task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"     * @return Representation of the Task in text storage.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"    public String getStorageText() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"        return type + \"\\n\" + (isDone ? \"1\" : \"0\") + \"\\n\" + description;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"     * This includes the label representing the type of Task, the completion status icon,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"     * and the description of the Task.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"    @Override","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"        return String.format(\"[%s][%s] %s\", type, getStatusIcon(), description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":72}},{"path":"src/main/java/carbon/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"import java.util.List;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"import carbon.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"import carbon.utils.Parser;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"import carbon.utils.Storage;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":" * A TaskList manages a list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"public class TaskList {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"     * Creates a TaskList object with no tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"     * Returns a String that lists all tasks in the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"     * Tasks are numbered, starting from 1.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"     * @return String representing the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"    public String listTasks() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"            return \"You don\u0027t have any tasks! :)\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"        return \"Tasks:\\n\" + IntStream.range(0, tasks.size())","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"     * Returns a String that lists all tasks in the TaskList whose String representation","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     * contains \u003ccode\u003efilter\u003c/code\u003e (case-insensitive).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"     * Tasks are still numbered according to their original indices, rather than the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"     * indices by which they appear in the filtered output. This is because the user","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"     * interacts with tasks based on their index in the TaskList, so presenting the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"     * original index of the task avoids confusion.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"     * @param filter The text to filter by.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"     * @return String representing the filtered TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"    public String listTasks(String filter) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"        if (filter.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"            throw new InvalidArgumentException(\"I expected some text after \\\"find\\\"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"            return \"You don\u0027t have any tasks! :)\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"        List\u003cString\u003e results \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"                .filter(i -\u003e tasks.get(i).toString().toLowerCase().contains(filter.toLowerCase()))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i))","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"                .toList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"        boolean isPlural \u003d results.size() !\u003d 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"        return results.isEmpty()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"                ? String.format(\"You don\u0027t have any tasks that contain \\\"%s\\\".\", filter)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"                : String.format(\"%d task%s contain%s \\\"%s\\\":\\n\", results.size(), isPlural ? \"s\" : \"\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"                isPlural ? \"\" : \"s\", filter) + String.join(\"\\n\", results);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if the TaskList is empty,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelneo"},"content":"     * \u003ccode\u003efalse\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelneo"},"content":"     * @return Whether the TaskList is empty.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelneo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelneo"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelneo"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelneo"},"content":"     * @return Number of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelneo"},"content":"    public int size() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelneo"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelneo"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelneo"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelneo"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelneo"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelneo"},"content":"     * Clears the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelneo"},"content":"    public void clear() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelneo"},"content":"        tasks.clear();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelneo"},"content":"     * Returns a String representing the input task, along with the","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelneo"},"content":"     * number of tasks currently in the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelneo"},"content":"     * @param task Task to be formatted.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelneo"},"content":"     * @return String representing the input task and TaskList size.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelneo"},"content":"    public String formatTask(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelneo"},"content":"        boolean isPlural \u003d tasks.size() !\u003d 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelneo"},"content":"        return \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelneo"},"content":"                + String.format(\"You now have %d task%s.\", tasks.size(), isPlural ? \"s\" : \"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelneo"},"content":"    private String addTask(Task task) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelneo"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelneo"},"content":"        Storage.updateDataFile(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelneo"},"content":"        return \"Added:\\n\" + formatTask(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelneo"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelneo"},"content":"     * Does nothing if the task has already been marked as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelneo"},"content":"     * @param index Index of the task in the TaskList to mark.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelneo"},"content":"     * @throws IndexOutOfBoundsException If \u003ccode\u003eindex\u003c/code\u003e is out of bounds.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelneo"},"content":"    public String markTask(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelneo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelneo"},"content":"        String message \u003d task.isDone()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelneo"},"content":"                ? String.format(\"Task #%d is already done (no changes made).\", index + 1)","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelneo"},"content":"                : \"Marked as done:\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelneo"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelneo"},"content":"        Storage.updateDataFile(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelneo"},"content":"        return message + \"\\n   \" + tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelneo"},"content":"     * Unmarks a task as done (i.e., marks as not done).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelneo"},"content":"     * Does nothing if the task has not been marked as done.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelneo"},"content":"     * @param index Index of the task in the TaskList to unmark.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelneo"},"content":"     * @throws IndexOutOfBoundsException If \u003ccode\u003eindex\u003c/code\u003e is out of bounds.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samuelneo"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samuelneo"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samuelneo"},"content":"        String message \u003d task.isDone()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samuelneo"},"content":"                ? \"Marked as not done:\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samuelneo"},"content":"                : String.format(\"Task #%d has not been done (no changes made).\", index + 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samuelneo"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samuelneo"},"content":"        Storage.updateDataFile(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samuelneo"},"content":"        return message + \"\\n   \" + tasks.get(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samuelneo"},"content":"     * Adds a Todo to the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samuelneo"},"content":"     * @param arg Description of the Todo.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samuelneo"},"content":"    public String addTodo(String arg) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samuelneo"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samuelneo"},"content":"            throw new InvalidArgumentException(\"I expected a description after \\\"todo\\\"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samuelneo"},"content":"        Todo todo \u003d new Todo(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samuelneo"},"content":"        return addTask(todo);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samuelneo"},"content":"     * Adds a Deadline to the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samuelneo"},"content":"     * The input \u003ccode\u003earg\u003c/code\u003e is the user input to be parsed into a Deadline","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samuelneo"},"content":"     * (excluding the word \"deadline\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samuelneo"},"content":"     * For example, if the user inputs \"deadline assignment /by 1pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samuelneo"},"content":"     * \u003ccode\u003earg\u003c/code\u003e would be \"assignment /by 1pm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samuelneo"},"content":"     * @param arg Details of the Deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samuelneo"},"content":"    public String addDeadline(String arg) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samuelneo"},"content":"        Deadline deadline \u003d Parser.parseDeadline(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samuelneo"},"content":"        return addTask(deadline);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samuelneo"},"content":"     * Adds an Event to the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samuelneo"},"content":"     * The input \u003ccode\u003earg\u003c/code\u003e is the user input to be parsed into an Event","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samuelneo"},"content":"     * (excluding the word \"event\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samuelneo"},"content":"     * For example, if the user inputs \"event meeting /from 4pm /to 5pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samuelneo"},"content":"     * \u003ccode\u003earg\u003c/code\u003e would be \"meeting /from 4pm /to 5pm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samuelneo"},"content":"     * @param arg Details of the Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"samuelneo"},"content":"    public String addEvent(String arg) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samuelneo"},"content":"        Event event \u003d Parser.parseEvent(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"samuelneo"},"content":"        return addTask(event);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"samuelneo"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"samuelneo"},"content":"     * @param index Index of the task in the TaskList to delete.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"samuelneo"},"content":"     * @return Message representing the changes made.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"samuelneo"},"content":"     * @throws IndexOutOfBoundsException If \u003ccode\u003eindex\u003c/code\u003e is out of bounds.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"samuelneo"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"samuelneo"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"samuelneo"},"content":"        Storage.updateDataFile(tasks);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"samuelneo"},"content":"        return \"Deleted the following task:\\n\" + formatTask(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":223}},{"path":"src/main/java/carbon/task/Temporal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":" * A Temporal stores an object that fits into one of the following categories:","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":" *     \u003cli\u003eDate\u003c/li\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":" *     \u003cli\u003eTime\u003c/li\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":" *     \u003cli\u003eDatetime\u003c/li\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":" *     \u003cli\u003eText (none of the above)\u003c/li\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"public class Temporal implements Comparable\u003cTemporal\u003e {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"    enum TemporalType {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        DATE,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"        TIME,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"        DATETIME,","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"        TEXT","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    private static final DateTimeFormatter[] DATE_FORMATTERS \u003d {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMM d\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"    };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"    private static final DateTimeFormatter[] TIME_FORMATTERS \u003d {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"ha\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"    };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"    private static final DateTimeFormatter[] DATE_TIME_FORMATTERS \u003d {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMM d H:mm\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMM d h:mma\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy ha\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d ha\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy ha\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d ha\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy ha\"),","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"            DateTimeFormatter.ofPattern(\"yyyy MMM d ha\")","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"    };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"    private final TemporalType type;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"    private LocalDate date;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"    private LocalTime time;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"    private String text;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"    private Temporal(LocalDate date) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"        type \u003d TemporalType.DATE;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"    private Temporal(LocalTime time) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelneo"},"content":"        type \u003d TemporalType.TIME;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelneo"},"content":"    private Temporal(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelneo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelneo"},"content":"        type \u003d TemporalType.DATETIME;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelneo"},"content":"    private Temporal(String text) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelneo"},"content":"        this.text \u003d text;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelneo"},"content":"        type \u003d TemporalType.TEXT;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelneo"},"content":"     * Parses text into a date-type Temporal object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelneo"},"content":"     * @param text Text to be parsed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelneo"},"content":"     * @return A date-type Temporal if possible, \u003ccode\u003enull\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelneo"},"content":"    public static Temporal parseToDate(String text) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelneo"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelneo"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelneo"},"content":"                LocalDate date \u003d LocalDate.parse(text, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelneo"},"content":"                return new Temporal(date);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelneo"},"content":"                // Text does not fit this format, continue to next formatter","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelneo"},"content":"        // Failed to parse","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelneo"},"content":"        return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelneo"},"content":"     * Parses text into a time-type Temporal object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelneo"},"content":"     * @param text Text to be parsed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelneo"},"content":"     * @return A time-type Temporal if possible, \u003ccode\u003enull\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelneo"},"content":"    public static Temporal parseToTime(String text) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelneo"},"content":"        for (DateTimeFormatter formatter : TIME_FORMATTERS) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelneo"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelneo"},"content":"                LocalTime time \u003d LocalTime.parse(text, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelneo"},"content":"                return new Temporal(time);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelneo"},"content":"                // Text does not fit this format, continue to next formatter","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelneo"},"content":"        // Failed to parse","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelneo"},"content":"        return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelneo"},"content":"     * Parses text into a datetime-type Temporal object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelneo"},"content":"     * @param text Text to be parsed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelneo"},"content":"     * @return A datetime-type Temporal if possible, \u003ccode\u003enull\u003c/code\u003e otherwise.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelneo"},"content":"    public static Temporal parseToDateTime(String text) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelneo"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_FORMATTERS) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelneo"},"content":"            try {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelneo"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(text, formatter);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelneo"},"content":"                return new Temporal(dateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelneo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelneo"},"content":"                // Text does not fit this format, continue to next formatter","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelneo"},"content":"        // Failed to parse","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelneo"},"content":"        return null;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelneo"},"content":"     * Returns a Temporal object of the appropriate type by parsing the input text.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelneo"},"content":"     * First attempts to parse the text into a datetime-type Temporal.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelneo"},"content":"     * On failure, attempts to parse into a date-type Temporal.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelneo"},"content":"     * On failure, attempts to parse into a time-type Temporal.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelneo"},"content":"     * On failure, returns a text-type Temporal.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelneo"},"content":"     * @param text Text to be parsed.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelneo"},"content":"     * @return Temporal object obtained by parsing the text.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samuelneo"},"content":"    public static Temporal parse(String text) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samuelneo"},"content":"        // Try parsing to datetime, then date, then time","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samuelneo"},"content":"        Temporal temporal \u003d parseToDateTime(text);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samuelneo"},"content":"        if (temporal \u003d\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samuelneo"},"content":"            temporal \u003d parseToDate(text);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samuelneo"},"content":"        if (temporal \u003d\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samuelneo"},"content":"            temporal \u003d parseToTime(text);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samuelneo"},"content":"        if (temporal \u003d\u003d null) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samuelneo"},"content":"            // Cannot be parsed","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samuelneo"},"content":"            temporal \u003d new Temporal(text);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samuelneo"},"content":"        return temporal;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samuelneo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samuelneo"},"content":"     * A text-type Temporal is considered to have a datetime later than a Temporal of any other type.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samuelneo"},"content":"     * A date-type Temporal is considered to have a time of 00:00 (midnight).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samuelneo"},"content":"     * A time-type Temporal is considered to have the current date.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samuelneo"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samuelneo"},"content":"    public int compareTo(Temporal other) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samuelneo"},"content":"        if (type \u003d\u003d TemporalType.TEXT) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samuelneo"},"content":"            return other.type \u003d\u003d TemporalType.TEXT ? 0 : 1;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samuelneo"},"content":"        if (other.type \u003d\u003d TemporalType.TEXT) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samuelneo"},"content":"            return -1;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samuelneo"},"content":"        LocalDateTime thisDateTime \u003d switch (type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samuelneo"},"content":"            case DATE -\u003e date.atStartOfDay();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samuelneo"},"content":"            case TIME -\u003e time.atDate(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samuelneo"},"content":"            case DATETIME -\u003e dateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samuelneo"},"content":"            case TEXT -\u003e throw new IllegalStateException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samuelneo"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samuelneo"},"content":"        LocalDateTime otherDateTime \u003d switch (other.type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samuelneo"},"content":"            case DATE -\u003e other.date.atStartOfDay();","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samuelneo"},"content":"            case TIME -\u003e other.time.atDate(LocalDate.now());","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samuelneo"},"content":"            case DATETIME -\u003e other.dateTime;","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samuelneo"},"content":"            case TEXT -\u003e throw new IllegalStateException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samuelneo"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"samuelneo"},"content":"        return thisDateTime.compareTo(otherDateTime);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samuelneo"},"content":"     * Returns a String representation of the Temporal.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samuelneo"},"content":"     * @return String representation of the Temporal.","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samuelneo"},"content":"    @Override","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"samuelneo"},"content":"    public String toString() {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samuelneo"},"content":"        return switch (type) {","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"samuelneo"},"content":"            case DATE -\u003e date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samuelneo"},"content":"            case TIME -\u003e time.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"samuelneo"},"content":"            case DATETIME -\u003e dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\"));","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"samuelneo"},"content":"            case TEXT -\u003e text;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"samuelneo"},"content":"        };","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-25","isFullCredit":false}],"authorContributionMap":{"samuelneo":216}},{"path":"src/main/java/carbon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":" * Todo is a Task with no date/time attached","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"     * Creates a Todo with the specified description.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"        super(\u0027T\u0027, description);","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":15}},{"path":"src/main/java/carbon/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.utils;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import carbon.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Event;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":" * Parser contains static methods that manage the parsing of user input.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"public class Parser {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"     * Parses user input regarding a deadline into a Deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"     * The input \u003ccode\u003etext\u003c/code\u003e is the user input to be parsed into a Deadline","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"     * (excluding the word \"deadline\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"     * For example, if the user inputs \"deadline assignment /by 1pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"     * \u003ccode\u003etext\u003c/code\u003e would be \"assignment /by 1pm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"     * @param text Details of the Deadline.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"     * @return The Deadline object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    public static Deadline parseDeadline(String text) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"        // Regex matches a String of the form \"{A} /by {B}\", where A and B each contain at least","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"        // one non-whitespace character","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"        Matcher matcher \u003d Pattern.compile(\"^(.*\\\\S.*) /by (.*\\\\S.*)$\").matcher(text);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"                    \"Deadline commands should be formatted as \\\"deadline [description] /by [due date/time]\\\"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"        return new Deadline(matcher.group(1).trim(), matcher.group(2).trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"     * Parses user input regarding an event into an Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"     * The input \u003ccode\u003etext\u003c/code\u003e is the user input to be parsed into an Event","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"     * (excluding the word \"event\").","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     * For example, if the user inputs \"event meeting /from 4pm /to 5pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"     * \u003ccode\u003etext\u003c/code\u003e would be \"meeting /from 4pm /to 5pm\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"     * @param text Details of the Event.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"     * @return The Event object.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"    public static Event parseEvent(String text) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"        // Regex matches a String of the form \"{A} /from {B} /to {C}\", where A, B, and C each","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"        // contain at least one non-whitespace character","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"        Matcher matcher \u003d Pattern.compile(\"^(.*\\\\S.*) /from (.*\\\\S.*) /to (.*\\\\S.*)$\").matcher(text);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"                    \"Event commands should be formatted as \\\"event [description] /from [start] /to [end]\\\"\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"        return new Event(matcher.group(1).trim(), matcher.group(2).trim(), matcher.group(3).trim());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":59}},{"path":"src/main/java/carbon/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.utils;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import java.io.File;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"import carbon.exceptions.InvalidFileFormatException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Deadline;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Event;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"import carbon.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"import carbon.task.Todo;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":" * Storage contains static methods that manage the storage of the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"public class Storage {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"    private static final String TASKS_FILE_PATH \u003d \"data/user/tasks.txt\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"     * Writes the tasks into storage.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"    public static void updateDataFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"        try (FileWriter writer \u003d new FileWriter(TASKS_FILE_PATH)) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"                writer.write(task.getStorageText() + \"\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"     * Loads data from storage into the TaskList.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"     * @param taskList TaskList to load data into.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     * @return Message describing any abnormalities (empty if none).","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"    public static String loadDataFile(TaskList taskList) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"        File dataFile \u003d new File(TASKS_FILE_PATH);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"        if (!dataFile.getParentFile().exists() \u0026\u0026 !dataFile.getParentFile().mkdirs()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"            throw new RuntimeException(\"Unable to create data/user/ directory\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"        boolean fileExists;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"            fileExists \u003d !dataFile.createNewFile();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"        if (fileExists) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"            try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"                Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"                    String firstLine \u003d scanner.nextLine();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"                    if (firstLine.isEmpty()) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"                        break;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"                    char type \u003d firstLine.charAt(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"                    boolean isDone \u003d scanner.nextLine().charAt(0) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"                    String description \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"                    Task task \u003d switch (type) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"                        case \u0027T\u0027 -\u003e new Todo(description);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"                        case \u0027D\u0027 -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelneo"},"content":"                            String dueBy \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelneo"},"content":"                            yield new Deadline(description, dueBy);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelneo"},"content":"                        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelneo"},"content":"                        case \u0027E\u0027 -\u003e {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelneo"},"content":"                            String from \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelneo"},"content":"                            String to \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelneo"},"content":"                            yield new Event(description, from, to);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelneo"},"content":"                        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelneo"},"content":"                        default -\u003e throw new InvalidFileFormatException();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelneo"},"content":"                    };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelneo"},"content":"                    if (isDone) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelneo"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelneo"},"content":"                    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelneo"},"content":"                    taskList.add(task);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelneo"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelneo"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelneo"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelneo"},"content":"            } catch (IndexOutOfBoundsException | NoSuchElementException | InvalidFileFormatException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelneo"},"content":"                message \u003d \"The data file was corrupted. Its contents are ignored and will be reset.\\n\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelneo"},"content":"                taskList.clear();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelneo"},"content":"                try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelneo"},"content":"                    // Clear tasks.txt contents","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelneo"},"content":"                    new FileWriter(TASKS_FILE_PATH).close();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelneo"},"content":"                } catch (IOException ex) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelneo"},"content":"                    throw new RuntimeException(ex);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelneo"},"content":"                }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelneo"},"content":"        return message;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":103}},{"path":"src/main/java/carbon/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.utils;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import carbon.exceptions.InvalidArgumentException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import carbon.exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"import carbon.task.TaskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"/**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":" * Ui manages interactions with the user.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":" */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"public class Ui {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"    private static final String LOGO \u003d \"\"\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"                   ____           _","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"                  / ___|__ _ _ __| |__   ___  _ __","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"                 | |   / _` | \u0027__| \u0027_ \\\\ / _ \\\\| \u0027_ \\\\","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"                 | |__| (_| | |  | |_) | (_) | | | |","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"                  \\\\____\\\\__,_|_|  |_.__/ \\\\___/|_| |_|\"\"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"    private static final String HORIZONTAL_LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"    private Ui() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"     * Starts a new Ui process.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"    public static void start() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"        new Ui().run();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"    private void run() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"        String loadDataMessage \u003d Storage.loadDataFile(taskList);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"        printMessage(LOGO, loadDataMessage + \"Hello! What can I do for you?\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"        inputLoop();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"        printMessage(\"Goodbye!\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"     * Prints the message in between two horizontal lines.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"     * The lines are indented by 4 spaces, and the message is indented by 5 spaces.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"    private static void printMessage(String... message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"        System.out.println(\"    \" + HORIZONTAL_LINE);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"        for (String s : message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"            System.out.println(\"     \" + s.replace(\"\\n\", \"\\n     \"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"        System.out.println(\"    \" + HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"     * Prints the error message in between two horizontal lines.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"     * The lines are indented by 4 spaces, and the message is indented by 5 spaces,","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"     * preceded with \"Oops!\" and followed with \":(\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"     *","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"    private static void printError(String message) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"        printMessage(String.format(\"Oops! %s :(\", message));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"    /**","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"     * Processes user commands until they enter \"bye\".","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"     */","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"    private void inputLoop() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"        while (true) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelneo"},"content":"            String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelneo"},"content":"            String command \u003d words[0].toLowerCase();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelneo"},"content":"            String arg \u003d words.length \u003e 1 ? words[1].trim() : \"\";","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelneo"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelneo"},"content":"                return;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelneo"},"content":"            try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelneo"},"content":"                String message \u003d switch (command) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelneo"},"content":"                    case \"list\" -\u003e taskList.listTasks();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelneo"},"content":"                    case \"find\" -\u003e taskList.listTasks(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelneo"},"content":"                    case \"mark\" -\u003e taskList.markTask(Integer.parseInt(arg) - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelneo"},"content":"                    case \"unmark\" -\u003e taskList.unmarkTask(Integer.parseInt(arg) - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelneo"},"content":"                    case \"todo\" -\u003e taskList.addTodo(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelneo"},"content":"                    case \"deadline\" -\u003e taskList.addDeadline(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelneo"},"content":"                    case \"event\" -\u003e taskList.addEvent(arg);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelneo"},"content":"                    case \"delete\" -\u003e taskList.deleteTask(Integer.parseInt(arg) - 1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelneo"},"content":"                    default -\u003e throw new InvalidCommandException(","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelneo"},"content":"                            String.format(\"The command \\\"%s\\\" is not recognised\", command));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelneo"},"content":"                };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelneo"},"content":"                printMessage(message);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelneo"},"content":"            } catch (InvalidCommandException | InvalidArgumentException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelneo"},"content":"                printError(e.getMessage());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelneo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelneo"},"content":"                printError(String.format(\"I expected a single integer after \\\"%s\\\"\", command));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelneo"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelneo"},"content":"                String message \u003d taskList.isEmpty()","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelneo"},"content":"                        ? \"You don\u0027t have any tasks!\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelneo"},"content":"                        : \"Tasks are numbered from 1 to \" + taskList.size();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelneo"},"content":"                printError(message);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelneo"},"content":"            }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":107}},{"path":"src/test/java/carbon/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"    public void listTasks_noTasks_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"You don\u0027t have any tasks! :)\", taskList.listTasks());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"    public void deleteTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"            new TaskList().deleteTask(1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"            // Expected","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"            new TaskList().deleteTask(0);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"            // Expected","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"            new TaskList().deleteTask(-1);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"            // Expected","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"        try {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"            taskList.add(new Todo(\"test\"));","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"            taskList.deleteTask(2);","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"            fail();","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"            // Expected","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":44}},{"path":"src/test/java/carbon/task/TemporalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"package carbon.task;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"public class TemporalTest {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"    public void parse_validDate_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024\", Temporal.parse(\"1 Jul 2024\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024\", Temporal.parse(\"01-07-2024\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024\", Temporal.parse(\"1-7-2024\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024\", Temporal.parse(\"2024-07-01\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024\", Temporal.parse(\"2024-7-1\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"    public void parse_validTime_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1:00pm\", Temporal.parse(\"1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1:00pm\", Temporal.parse(\"1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1:00pm\", Temporal.parse(\"13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1:15pm\", Temporal.parse(\"1:15pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1:15pm\", Temporal.parse(\"13:15\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"    public void parse_validDateTime_success() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1 Jul 2024 1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"01-07-2024 1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1-7-2024 1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-07-01 1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-7-1 1:00pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1 Jul 2024 1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"01-07-2024 1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1-7-2024 1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-07-01 1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-7-1 1pm\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1 Jul 2024 13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"01-07-2024 13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"1-7-2024 13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-07-01 13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"        assertEquals(\"1 Jul 2024 1:00pm\", Temporal.parse(\"2024-7-1 13:00\").toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"    @Test","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"    public void parse_invalid_textReturned() {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"        String[] invalidTexts \u003d {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"                \"\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"                \"hello\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"                \"32 Jul 2024\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"                \"13:00pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"                \"25:00\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"                \"1:60pm\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"                \"13:60\",","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"                \"1pm 1 Jul 2024\"","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"        };","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"        for (String invalidText : invalidTexts) {","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"            assertEquals(invalidText, Temporal.parse(invalidText).toString());","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"        }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"    }","lastModifiedDate":"2025-01-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"}","lastModifiedDate":"2025-01-26","isFullCredit":false}],"authorContributionMap":{"samuelneo":61}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"       ____           _","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"      / ___|__ _ _ __| |__   ___  _ __","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"     | |   / _` | \u0027__| \u0027_ \\ / _ \\| \u0027_ \\","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"     | |__| (_| | |  | |_) | (_) | | | |","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"      \\____\\__,_|_|  |_.__/ \\___/|_| |_|","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"     Hello! What can I do for you?","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"     You don\u0027t have any tasks! :)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelneo"},"content":"     You don\u0027t have any tasks! :)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelneo"},"content":"     Oops! I expected a single integer after \"delete\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelneo"},"content":"     Added:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelneo"},"content":"        [T][ ] buy pencils","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelneo"},"content":"     You now have 1 task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy pencils","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelneo"},"content":"     Oops! Tasks are numbered from 1 to 1 :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelneo"},"content":"     Oops! Tasks are numbered from 1 to 1 :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelneo"},"content":"     Deleted the following task:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelneo"},"content":"        [T][ ] buy pencils","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelneo"},"content":"     You now have 0 tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelneo"},"content":"     Oops! You don\u0027t have any tasks! :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelneo"},"content":"     Added:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelneo"},"content":"        [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelneo"},"content":"     You now have 1 task.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelneo"},"content":"     Marked as done:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelneo"},"content":"        [T][X] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelneo"},"content":"     Task #1 is already done (no changes made).","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelneo"},"content":"        [T][X] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelneo"},"content":"     Marked as not done:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelneo"},"content":"        [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelneo"},"content":"     Added:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelneo"},"content":"        [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelneo"},"content":"     You now have 2 tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelneo"},"content":"     Added:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelneo"},"content":"        [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelneo"},"content":"     You now have 3 tasks.","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelneo"},"content":"     2. [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelneo"},"content":"     3. [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelneo"},"content":"     Marked as done:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelneo"},"content":"        [D][X] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelneo"},"content":"     2. [D][X] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelneo"},"content":"     3. [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelneo"},"content":"     Marked as not done:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelneo"},"content":"        [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelneo"},"content":"     2. [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelneo"},"content":"     3. [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samuelneo"},"content":"     2. [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samuelneo"},"content":"     3. [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samuelneo"},"content":"     Tasks:","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samuelneo"},"content":"     1. [T][ ] buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samuelneo"},"content":"     2. [D][ ] homework 1 (by: Friday)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samuelneo"},"content":"     3. [E][ ] project meeting (from: Wednesday 1pm, to: Wednesday 3pm)","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samuelneo"},"content":"     Oops! I expected a description after \"todo\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samuelneo"},"content":"     Oops! Deadline commands should be formatted as \"deadline [description] /by [due date/time]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samuelneo"},"content":"     Oops! Deadline commands should be formatted as \"deadline [description] /by [due date/time]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samuelneo"},"content":"     Oops! Deadline commands should be formatted as \"deadline [description] /by [due date/time]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samuelneo"},"content":"     Oops! Event commands should be formatted as \"event [description] /from [start] /to [end]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samuelneo"},"content":"     Oops! Event commands should be formatted as \"event [description] /from [start] /to [end]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samuelneo"},"content":"     Oops! Event commands should be formatted as \"event [description] /from [start] /to [end]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samuelneo"},"content":"     Oops! Event commands should be formatted as \"event [description] /from [start] /to [end]\" :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samuelneo"},"content":"     Oops! The command \"unrecognised\" is not recognised :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samuelneo"},"content":"     Oops! The command \"-1\" is not recognised :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"samuelneo"},"content":"     Oops! The command \"\u0027\" is not recognised :(","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"samuelneo"},"content":"     Goodbye!","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samuelneo"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelneo":210,"-":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelneo"},"content":"delete 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelneo"},"content":"delete 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelneo"},"content":"delete -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelneo"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelneo"},"content":"mark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"mark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelneo"},"content":"unmark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelneo"},"content":"unmark 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"unmark -1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"delete hello","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"todo buy pencils","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelneo"},"content":"delete 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"delete 0","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelneo"},"content":"delete 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"delete 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"todo buy markers","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelneo"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelneo"},"content":"mark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"unmark 1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"deadline homework 1 /by Friday","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"event project meeting /from Wednesday 1pm /to Wednesday 3pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"mark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelneo"},"content":"unmark 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelneo"},"content":"list","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelneo"},"content":"todo","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelneo"},"content":"deadline homework 2","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelneo"},"content":"deadline homework 3 /by","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelneo"},"content":"deadline /by 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelneo"},"content":"event /from 1pm /to 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelneo"},"content":"event meeting /from /to 5pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelneo"},"content":"event meeting /to 2pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelneo"},"content":"event meeting /from 5pm","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelneo"},"content":"unrecognised command","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelneo"},"content":"-1","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelneo"},"content":"\u0027 OR 1\u003d1; --","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelneo"},"content":"bye","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelneo"},"content":"if exist ACTUAL.txt del ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\carbon\\*.java","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelneo"},"content":"    pause","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelneo"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelneo"},"content":"java -classpath ..\\bin carbon.Carbon \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelneo"},"content":"pause","lastModifiedDate":"2025-01-20","isFullCredit":false}],"authorContributionMap":{"samuelneo":8,"-":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelneo"},"content":"if [ -e \"./ACTUAL.txt\" ]","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelneo"},"content":"    rm ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelneo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/carbon/*.java","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelneo"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelneo"},"content":"java -classpath ../bin carbon.Carbon \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelneo"},"content":"cp EXPECTED.txt EXPECTED-UNIX.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelneo"},"content":"dos2unix ACTUAL.txt EXPECTED-UNIX.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelneo"},"content":"diff ACTUAL.txt EXPECTED-UNIX.txt","lastModifiedDate":"2025-01-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelneo":8,"-":30}}]
