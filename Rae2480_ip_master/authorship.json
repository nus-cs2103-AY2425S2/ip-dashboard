[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"# Viktor project template","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Viktor_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"1. After that, locate the `src/main/java/Viktor.java` file, right-click it, and choose `Run Viktor.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"Rae2480":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    mainClass.set(\"viktor.ui.Launcher\")","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    archiveBaseName \u003d \"viktor.jar\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"checkstyle {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"Rae2480":22,"-":39}},{"path":"data/viktor.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"E | X | conference | Feb. 3 2025, 08:30 | Feb. 5 2025, 21:30","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"T |   | read book","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"D |   | return the book | Feb. 19 2025, 12:00","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"# Viktor Chatbot User Guide","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"## Getting Started","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"### Installation","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"To use Viktor, ensure you have Java 11 or later installed. Follow these steps:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"1. Download `viktor.jar` from the release page.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"2. Open a terminal and navigate to the folder containing `viktor.jar`.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"3. Run Viktor with:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"   ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"   java -jar viktor.jar","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"   ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"### Basic Usage","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"Once Viktor starts, type a command and press Enter. Viktor will respond accordingly.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"## Features","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"### Task Management","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"Viktor helps you manage tasks efficiently. You can add, list, mark as done, delete, and search tasks.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"#### Commands:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"- **Add a ToDo**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"  todo Read a book","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"- **Add a Deadline**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"  deadline Submit report /by 2025-02-20 18:00","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"- **Add an Event**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"  event Team meeting /from 2025-02-20 14:00 /to 2025-02-20 16:00","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"- **List all tasks**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"  list","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"- **Mark a task as done**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"  done 1","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"- **Delete a task**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"  delete 2","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"- **Find a task**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"  find meeting","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"- **Update a task**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"  update 3 /desc New description","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"- **Change a task’s date/time**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"  update 2 /by 2025-02-22 12:00","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"  update 4 /from 2025-02-22 10:00 /to 2025-02-22 12:00","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"- **View task details**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"  view 5","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"- **Undo last action**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"  undo","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"- **Redo last undone action**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"  redo","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"- **Clear all tasks**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"  clear","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"- **View available commands**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"  help","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"  ```","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"- **Exit Viktor**:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"  ```sh","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"  bye","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"### Persistent Storage","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"Viktor saves tasks automatically in `tasks.txt`. If the file is missing or corrupted, Viktor will handle it gracefully.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"### Updating Viktor","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"To update, replace your `viktor.jar` file with the latest version from the release page.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"### Troubleshooting","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"- **Viktor doesn’t start**: Ensure Java 11+ is installed.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"- **Tasks not saving**: Check if `tasks.txt` is writable.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"- **Command not recognized**: Verify the syntax or use `help`.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"This guide helps you quickly start using Viktor and make the most of its features.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"Rae2480":86,"-":12}},{"path":"ip/data/viktor.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"E |   | party | Feb. 20 2025, 12:00 | Feb. 20 2025, 13:00","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"T | X | gym session","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"D |   | pay fees | Feb. 24 2025, 18:00","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"E |   | go hiking | Feb. 21 2025, 08:00 | Feb. 21 2025, 14:00","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"Rae2480":4}},{"path":"src/main/java/viktor/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.Random;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.DeadlineTask;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.EventTask;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskType;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TodoTask;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":" * Command to add a task to the task list based on user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"public class AddTaskCommand implements Commandable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    private static final String[] responses \u003d {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        \"The pursuit of knowledge is a noble endeavor. I\u0027ve added\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        \"Progress requires sacrifice, but it is always worth the cost for\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"        \"Even the greatest minds require assistance sometimes. You seek to\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        \"Ah, progress—the double-edged sword of innovation, alongside:\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        \"Every leap forward brings challenges, but such is the price of this great task,\",","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        \"Interesting... I will have to do more research about this\"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    private String userInput;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    private boolean isBeingTested;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    private final Random random \u003d new Random();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    private String testingResponse \u003d (\"Even the greatest minds require assistance sometimes. You seek to\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     * Constructs the AddTaskCommand with user input, task list, and testing mode.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"     * @param userInput The user\u0027s command input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"     * @param testing Whether the command is in testing mode.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    public AddTaskCommand(String userInput, TaskList taskList, boolean isBeingTested) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        this.isBeingTested \u003d isBeingTested;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to add a task to the task list based on user input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"     * Creates a Todo, DeadlineTask, or Event task and adds it to the task list, depending on user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"     * Prints a randomised response to the user, echoing the task description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"     * During testing, responses are fixed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"     * Saves saves the task list after the task is added.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        TaskType taskType \u003d TaskType.valueOf(words[0].toUpperCase());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"        String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"        String dueDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        String fromDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        String toDate;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        // Throws an exception if user inputs \"add\" without a event type, description (and more)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Tell me more about your task!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"        // Extracts the description from the user input","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"        String taskDescription \u003d userInput.substring(words[0].length()).trim();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"        case TODO:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"            TodoTask todo \u003d new TodoTask(taskDescription);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"            output \u003d todo.getDescription();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"            String[] parts \u003d taskDescription.split(\"/by\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"Invalid deadline format! Use: deadline \u003cdescription\u003e /by \u003cdue date\u003e\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"            description \u003d parts[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"            dueDate \u003d parts[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"Please provide a description of this deadline task!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"            } else if (dueDate.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"When\u0027s the deadline? Please focus, when is it due!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(description, dueDate);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"            output \u003d deadline.getDescription();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"        case EVENT:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"            String[] eventParts \u003d taskDescription.split(\"/from\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"            if (eventParts.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"Invalid event format! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"            description \u003d eventParts[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"You have to tell me what the event is!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"            String[] timeParts \u003d eventParts[1].trim().split(\"/to\", 2);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"            if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"Invalid event format! Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"            fromDate \u003d timeParts[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"            toDate \u003d timeParts[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rae2480"},"content":"            if (fromDate.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"You have to tell me when this event starts.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rae2480"},"content":"            } else if (toDate.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rae2480"},"content":"                throw new ViktorException(\"You have to tell me when this event ends.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rae2480"},"content":"            EventTask event \u003d new EventTask(description, fromDate, toDate);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rae2480"},"content":"            taskList.addTask(event);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Rae2480"},"content":"            output \u003d event.getDescription();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"            break;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rae2480"},"content":"        default:","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Unknown command type.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rae2480"},"content":"        String response \u003d isBeingTested ? testingResponse : responses[random.nextInt(responses.length)];","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"            Storage.save(taskList);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Rae2480"},"content":"            return \"An error occurred while saving tasks: \" + e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rae2480"},"content":"        return response + \" \" + output + \".\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":135}},{"path":"src/main/java/viktor/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * Command to handle the goodbye message when the program ends.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public class ByeCommand implements Commandable {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to display a goodbye message.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     * Prints a farewell message to the user when the program is about to end.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    public String execute() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"        return \"Goodbye. Remember, progress never rests.\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":16}},{"path":"src/main/java/viktor/commands/Commandable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"public interface Commandable {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If an error occurs during execution.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    String execute() throws ViktorException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":15}},{"path":"src/main/java/viktor/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"public class DeleteTaskCommand implements Commandable {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * Constructs a DeleteTaskCommand command with the specified task number and task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks from which the task will be removed.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    public DeleteTaskCommand(int taskNumber, TaskList tasks) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     * @return A response message after deleting the task.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        if (taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"You\u0027re asking for the impossible! That task doesn\u0027t exist.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        String taskDescription \u003d tasks.getTask(taskNumber).getDescription();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        tasks.removeTask(taskNumber);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        String response \u003d \"I guess \" + taskDescription + \" is no longer your concern.\\n\"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"                + \"Now you have \" + tasks.size() + \" remaining tasks.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        // Save the updated task list","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"            Storage.save(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"            response +\u003d \"\\nAh, something must\u0027ve gone awry: \" + e.getMessage()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"                    + \" Well, mistakes are but a part of progress.\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        return response; // Return the final response","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":55}},{"path":"src/main/java/viktor/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":" * Represents a command to find tasks by their description.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"public class FindCommand implements Commandable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private String nameInput;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"     * Constructs a FindCommand with the specified task list and name input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     * @param nameInput The input string to search for in task descriptions.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    public FindCommand(TaskList tasks, String nameInput) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        this.nameInput \u003d nameInput;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are your tasks matching \\\"\" + nameInput + \"\\\":\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"        boolean taskFound \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"            if (task.getDescription().contains(nameInput)) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"                response.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"                taskFound \u003d true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        if (!taskFound) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"            response.append(\"Vast emptiness is all there is. \\\"\").append(nameInput)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"                    .append(\"\\\"? I haven\u0027t heard of that in a long, long time. \")","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"                    .append(\"There are no tasks matching \\\"\").append(nameInput).append(\"\\\"!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"        response.append(\"\\n\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        return response.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":46}},{"path":"src/main/java/viktor/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * Command to display a list of available commands.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public class HelpCommand implements Commandable {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to display available commands.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     * @return A formatted string listing the bot\u0027s capabilities.","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    public String execute() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"        return \"Here are some of my advanced capabilities:\\n\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"                + \"Adding Tasks - \u0027add \u003ctask description\u003e\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"                + \"Deleting a Task - \u0027delete \u003ctask number\u003e\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"                + \"Marking Tasks as Done - \u0027done \u003ctask number\u003e\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"                + \"Viewing Tasks - \u0027list\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"                + \"Finding Tasks - \u0027find \u003ckeyword\u003e\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"                + \"Viewing Tasks by Date - \u0027view \u003cdate\u003e\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"                + \"Exiting the Program - \u0027bye\u0027\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"                + \"Resetting the Program - \u0027reset\u0027\\n\\n\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-20","isFullCredit":false}],"authorContributionMap":{"Rae2480":25}},{"path":"src/main/java/viktor/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" * Command to list all tasks in the task list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class ListCommand implements Commandable {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"     * Constructs the ListCommand with a task list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"            return \"No tasks added yet!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        String taskListString \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"            .mapToObj(i -\u003e (i + 1) + \". \" + tasks.getTask(i).toString())","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            .reduce((a, b) -\u003e a + \"\\n\" + b)","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"            .orElse(\"\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        return \"Your tasks await you:\\n\" + taskListString","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"                + \"\\n\\nCurrently, you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":42}},{"path":"src/main/java/viktor/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"public class MarkCommand implements Commandable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * Constructs a MarkCommand with the specified task number and task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks in which the task will be marked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    public MarkCommand(int taskNumber, TaskList tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to mark a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        if (taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"You\u0027re asking for the impossible! That task doesn\u0027t exist.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        tasks.getTask(taskNumber).beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        String response \u003d \"You\u0027ve just finished \" + tasks.getTask(taskNumber).getDescription()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"                + \"! True progress is still far away but a bit less further now!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"            Storage.save(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"            System.out.println(\"Ah something must\u0027ve gone awry: \" + e.getMessage()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"                    + \" Well, mistakes are but a part of progress.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        return response;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":49}},{"path":"src/main/java/viktor/commands/ResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" * Command to reset all tasks, effectively clearing the task list and stored data.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class ResetCommand implements Commandable {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"     * Constructs a ResetCommand to reset the task list and clear storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * @param taskList The list of tasks to reset.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    public ResetCommand(TaskList taskList) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * Executes the reset command, clearing the task list and removing saved tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     * @return A response message after resetting the tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    public String execute() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        // Clear the task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        taskList.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        // Remove the saved tasks file","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        File file \u003d new File(Storage.FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            if (file.delete()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"                return \"All tasks have been cleared, and saved data has been removed.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"            } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"                return \"Tasks cleared, but there was an issue deleting the saved data file.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        } else {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"            return \"Tasks have been cleared, but no saved data file was found.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Rae2480":45}},{"path":"src/main/java/viktor/commands/TimeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.parser.DateParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.DeadlineTask;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.EventTask;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":" * Command to list all tasks on a specific date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"public class TimeCommand implements Commandable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    private final String dateInput;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     * Constructs a TimeCommand with the given TaskList and date input.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The TaskList to search for tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * @param dateInput The date to search for tasks on.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    public TimeCommand(TaskList tasks, String dateInput) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        this.dateInput \u003d dateInput;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to list all tasks on the specified date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        LocalDate targetDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"            targetDate \u003d DateParser.parseDateOnly(dateInput);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Invalid date format! Use \u0027d/M/yyyy\u0027, e.g., \u002712/12/2025\u0027.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        StringBuilder response \u003d new StringBuilder(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"                \"Here are your tasks for \" + DateParser.formatDate(targetDate) + \":\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"            if ((task instanceof DeadlineTask \u0026\u0026 ((DeadlineTask) task).matchesDate(targetDate))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"                    || (task instanceof EventTask \u0026\u0026 ((EventTask) task).matchesDate(targetDate))) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"                response.append(task).append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"                isFound \u003d true;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"        if (!isFound) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"            return \"Are you truly a scientist? There are no tasks for \"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"                + DateParser.formatDate(targetDate) + \"!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"        return response.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":63}},{"path":"src/main/java/viktor/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.commands;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" * Command to unmark a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class UnmarkCommand implements Commandable {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private int taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     * Constructs an UnmarkCommand with the specified task number and task list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     * @param taskNumber The index of the task to be unmarked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks in which the task will be unmarked as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public UnmarkCommand(int taskNumber, TaskList tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     * Executes the command to unmark a task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the input is invalid or there is an error with task creation.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    public String execute() throws ViktorException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        if (taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"You\u0027re asking for the impossible! That task doesn\u0027t exist.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        tasks.getTask(taskNumber).beUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        String response \u003d \"Oh you\u0027ve yet to finish \" + tasks.getTask(taskNumber).getDescription()","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"                + \"? Don\u0027t forget: progress waits for no man\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            Storage.save(tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"            System.out.println(\"Ah something must\u0027ve gone awry: \" + e.getMessage()","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"                    + \" Well, mistakes are but a part of progress.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        return response.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":47}},{"path":"src/main/java/viktor/exceptions/ViktorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.exceptions;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" * Custom exception class for Viktor application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"public class ViktorException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"     * Constructs a new ViktorException with the specified detail message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     * @param message the detail message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    public ViktorException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"        super(message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Rae2480":16}},{"path":"src/main/java/viktor/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":" * Utility class for parsing and formatting dates and times, including relative dates.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"public class DateParser {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    private static final DateTimeFormatter ALTERNATIVE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    private static final Pattern RELATIVE_DATE_PATTERN \u003d Pattern.compile(\"(today|tomorrow|next \\\\w+)\\\\s+(\\\\d{4})?\",","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     * Parses a date and time string into a LocalDateTime object, supporting both absolute and relative dates.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * @param dateTimeStr the date and time string to parse","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     * @return the parsed LocalDateTime object","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     * @throws DateTimeParseException if the date and time string cannot be parsed","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        Matcher matcher \u003d RELATIVE_DATE_PATTERN.matcher(dateTimeStr.toLowerCase());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            String relativeDate \u003d matcher.group(1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"            String timePart \u003d matcher.group(2); // Can be null","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"            LocalDate date \u003d parseRelativeDate(relativeDate);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            int hour \u003d 0;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"            int minute \u003d 0;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"            if (timePart !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"                hour \u003d Integer.parseInt(timePart.substring(0, 2));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"                minute \u003d Integer.parseInt(timePart.substring(2));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"            return LocalDateTime.of(date, java.time.LocalTime.of(hour, minute));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"            assert dateTime !\u003d null : \"DateTime is null for parseDateTime\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"            return dateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"            return LocalDateTime.parse(dateTimeStr, ALTERNATIVE_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"     * Parses a relative date string into a LocalDate.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"     * @param relativeDate the relative date string (e.g., \"tomorrow\", \"next Monday\")","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"     * @return the computed LocalDate","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"    private static LocalDate parseRelativeDate(String relativeDate) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        if (relativeDate.equals(\"today\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"            return today;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"        if (relativeDate.equals(\"tomorrow\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"            return today.plusDays(1);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"        if (relativeDate.startsWith(\"next\")) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"            String dayOfWeekStr \u003d relativeDate.substring(5).toLowerCase();","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"            DayOfWeek targetDay \u003d getDayOfWeek(dayOfWeekStr);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"            if (targetDay !\u003d null) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"                int daysUntilNext \u003d (targetDay.getValue() - today.getDayOfWeek().getValue() + 7) % 7;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"                if (daysUntilNext \u003d\u003d 0) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"                    daysUntilNext \u003d 7; // Ensure \"next Monday\" means the next occurrence","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"                }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"                return today.plusDays(daysUntilNext);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"        throw new DateTimeParseException(\"Invalid relative date: \" + relativeDate, relativeDate, 0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"     * Converts a day of the week string (e.g., \"monday\") to a DayOfWeek enum.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"     * @param day the lowercase day of the week","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"     * @return the corresponding DayOfWeek or null if invalid","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"    private static DayOfWeek getDayOfWeek(String day) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"            return DayOfWeek.valueOf(day.toUpperCase(Locale.ROOT));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"            return null;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"     * Formats a LocalDateTime object into a string with the format MMM d yyyy, HH:mm.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"     * @param dateTime the LocalDateTime object to format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"     * @return the formatted string","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rae2480"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rae2480"},"content":"        assert dateTime !\u003d null : \"DateTime is null for formatDateTime\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rae2480"},"content":"        return dateTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rae2480"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"     * @param dateInput the date string to parse","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rae2480"},"content":"     * @return the parsed LocalDate object","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rae2480"},"content":"     * @throws DateTimeParseException if the date string cannot be parsed","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rae2480"},"content":"    public static LocalDate parseDateOnly(String dateInput) throws DateTimeParseException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Rae2480"},"content":"        Matcher matcher \u003d RELATIVE_DATE_PATTERN.matcher(dateInput.toLowerCase());","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rae2480"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"            return parseRelativeDate(matcher.group(1));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Rae2480"},"content":"        LocalDate date \u003d LocalDate.parse(dateInput, INPUT_DATE_FORMATTER);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Rae2480"},"content":"        assert date !\u003d null : \"Date is null for parseDateOnly\";","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rae2480"},"content":"        return date;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rae2480"},"content":"     * Formats a LocalDate object into a string with the format MMM d yyyy.","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Rae2480"},"content":"     * @param date the LocalDate object to format","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Rae2480"},"content":"     * @return the formatted string","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Rae2480"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Rae2480"},"content":"        return date.format(OUTPUT_DATE_FORMATTER);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":144}},{"path":"src/main/java/viktor/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.AddTaskCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.ByeCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.Commandable;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.DeleteTaskCommand;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.FindCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.HelpCommand;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.ListCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.MarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.ResetCommand;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.TimeCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.UnmarkCommand;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":" * The Parser class is responsible for interpreting user input and returning the appropriate command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"public class Parser {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"     * Parses the user input and returns the appropriate command.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     * @param userInput The input string from the user.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     * @param isBeingTested A flag indicating if the application is being tested.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     * @throws ViktorException If the user input is invalid.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    public Commandable parse(String userInput, TaskList tasks, boolean isBeingTested) throws ViktorException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        String commandWord \u003d words[0].toUpperCase();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        case \"ADD\":","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"            return handleAdd(words, tasks, isBeingTested);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        case \"DELETE\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"            return handleDelete(words, tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        case \"MARK\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"            return handleMark(words, tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        case \"UNMARK\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"            return handleUnmark(words, tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        case \"LIST\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"            return new ListCommand(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        case \"FIND\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"            return handleFind(words, tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        case \"BYE\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"        case \"RESET\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"            return new ResetCommand(tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        case \"TIME\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"            return handleTime(words, tasks);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        case \"HELP\":","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"            return new HelpCommand();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        default:","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Hey, I know you\u0027re sleep-deprived or something but that, \"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"                    + commandWord + \", it\u0027s nonsense! Try again!\");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleAdd(String[] words, TaskList tasks, boolean isBeingTested) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Add? Add what?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"        return new AddTaskCommand(words[1], tasks, isBeingTested);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleDelete(String[] words, TaskList tasks) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"You don\u0027t even know what you want me to delete?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"            int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"            return new DeleteTaskCommand(taskNumber - 1, tasks);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Invalid task number for deletion.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleMark(String[] words, TaskList tasks) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"One does not simply mark a task without specifying which one.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"            int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"            return new MarkCommand(taskNumber - 1, tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Invalid task number to mark.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleUnmark(String[] words, TaskList tasks) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"You\u0027ve got to be clearer what you want me to unmark.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"            int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"            return new UnmarkCommand(taskNumber - 1, tasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Invalid task number to unmark.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleFind(String[] words, TaskList tasks) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Find what?\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"        return new FindCommand(tasks, words[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rae2480"},"content":"    private static Commandable handleTime(String[] words, TaskList tasks) throws ViktorException {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rae2480"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rae2480"},"content":"            throw new ViktorException(\"Please specify a date for the search.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rae2480"},"content":"        return new TimeCommand(tasks, words[1]);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":118}},{"path":"src/main/java/viktor/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.File;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.DeadlineTask;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.EventTask;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.Task;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TodoTask;","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":" * Handles the storage of tasks to and from a file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"public class Storage {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public static final String FILE_PATH \u003d \"./ip/data/viktor.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * Saves the tasks from the TaskList to a file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    public static void save(TaskList taskList) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        f.createNewFile();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(taskList.getTasks()); // Convert TaskList to ArrayList\u003cTask\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"                fw.write(t.toSave() + \"\\n\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"            fw.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"            throw new IOException(\"Error saving file\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    public static ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"                if (parts[0].equals(\"T\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"                    tasks.add(new TodoTask(parts[2]));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"                    if (parts[1].equals(\"X\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"                        tasks.get(tasks.size() - 1).beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"                } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"                    tasks.add(new DeadlineTask(parts[2], parts[3]));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"                    if (parts[1].equals(\"X\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"                        tasks.get(tasks.size() - 1).beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"                } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"                    tasks.add(new EventTask(parts[2], parts[3], parts[4]));","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"                    if (parts[1].equals(\"X\")) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"                        tasks.get(tasks.size() - 1).beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"                    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"                }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"            s.close();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"            return tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"            throw new IOException(\"File not found\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":83}},{"path":"src/main/java/viktor/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.parser.DateParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" * Represents an Deadline task with a description, and due time","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private final String type;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"     * Constructs a Deadline task with a description and due date.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @param by The due date of the task in string format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    public DeadlineTask(String description, String by) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        this.by \u003d DateParser.parseDateTime(by);;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     * @return The task type as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    public String getType() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        return type;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"     * Checks if the task matches the given date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"     * @param targetDate The target date to compare against.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     * @return True if the task\u0027s due date matches the target date, false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    public boolean matchesDate(LocalDate targetDate) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        return targetDate.equals(by.toLocalDate());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        return \"[\" + getType() + \"][\" + getStatusIcon() + \"] \" + super.toString()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"            + \" (by: \" + DateParser.formatDateTime(by) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"     * Returns the string format for saving the Deadline task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"    public String toSave() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"        return getType() + \" | \" + getStatusIcon() + \" | \" + description + \" | \" + DateParser.formatDateTime(by);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Rae2480":67}},{"path":"src/main/java/viktor/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.parser.DateParser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":" * Represents an event task with a description, start time, and end time.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    private final String type;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"     * Constructs a Event task with a description, start and end date.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     * @param from The start date of the task in string format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     * @param to The end date of the task in string format.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        this.from \u003d DateParser.parseDateTime(from);;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        this.to \u003d DateParser.parseDateTime(to);;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     * @return The task type as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    public String getType() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        return type;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     * Checks if the event matches the given date.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"     * @param targetTime The date to check against the event\u0027s date range.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"     * @return true if the event is on the given date, false otherwise.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    public boolean matchesDate(LocalDate targetTime) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        LocalDate targetDate \u003d targetTime;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        return !targetDate.isBefore(from.toLocalDate()) \u0026\u0026 !targetDate.isAfter(to.toLocalDate());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"        return \"[\" + getType() + \"][\" + getStatusIcon() + \"] \" + super.toString()","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"            + \" (from: \" + DateParser.formatDateTime(from) + \" to: \" + DateParser.formatDateTime(to) + \")\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"     * Returns the string format for saving the event task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"    public String toSave() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        return getType() + \" | \" + getStatusIcon() + \" | \" + description + \" | \"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"            + DateParser.formatDateTime(from) + \" | \" + DateParser.formatDateTime(to);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Rae2480":72}},{"path":"src/main/java/viktor/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * Represents a task with a description and a status.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    protected String description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     * Constructs a task with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    public void beDone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    public void beUndone() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"     * Returns the type of the task (to be implemented by subclasses).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"     * @return The task type as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    public abstract String getType();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"     * Returns the status icon of the task based on whether it\u0027s done or not.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"     * @return \"X\" if the task is done, \" \" (empty space) if not done.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"        return description;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"     * Returns the string format for saving the task (to be implemented by subclasses).","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"    public abstract String toSave();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Rae2480":75}},{"path":"src/main/java/viktor/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":" * Represents a list of tasks, allowing for adding, removing, and retrieving tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"public class TaskList {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"     * Constructs a TaskList with an empty list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"     * Removes a task from the list by its index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    public int size() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        return tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"     * @return True if the list has no tasks, false otherwise.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"     * Sets the list of tasks.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"     * @param tasks The list of tasks to set.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"     * Clears the task list, removing all tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"    public void clear() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"        tasks.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":89}},{"path":"src/main/java/viktor/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * Represents the type of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public enum TaskType {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":8}},{"path":"src/main/java/viktor/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * Represents an todo task with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    private final String type;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     * Constructs a Todo task with a description.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"        super(description);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"     * Returns the type of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"     * \\","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"     * @return The task type as a string.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    public String getType() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        return type;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        return \"[\" + getType() + \"][\" + getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"     * Returns the string format for saving the todo task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    public String toSave() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        return getType() + \" | \" + getStatusIcon() + \" | \" + description;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Rae2480":48}},{"path":"src/main/java/viktor/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    private void flip() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"    public static DialogBox getViktorDialog(String text, Image img) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        db.flip();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        return db;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":62}},{"path":"src/main/java/viktor/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"public class Launcher {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":12}},{"path":"src/main/java/viktor/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":" * A GUI for Viktor using FXML.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    @Override","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"            stage.setResizable(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"            controller.setViktor(new Viktor());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"            stage.show();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":37}},{"path":"src/main/java/viktor/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.List;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    private HBox headerBox;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    private Label headerLabel;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    private Viktor viktor;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    private boolean isFirstLaunch \u003d true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    private List\u003cImage\u003e viktorImages \u003d Arrays.asList(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/viktor1.png\")),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/viktor2.png\")),","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            new Image(this.getClass().getResourceAsStream(\"/images/viktor3.png\"))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    private int currentImageIndex \u003d 0; // Track which image is being used","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"     * Automatically scrolls the scroll pane to the bottom whenever the dialog","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"     * container is updated with new content.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        scrollPane.setFitToHeight(true);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"        // Ensure the ScrollPane resizes with the window","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setTopAnchor(scrollPane, 50.0); // Adjust based on header size","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setBottomAnchor(scrollPane, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setLeftAnchor(scrollPane, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setRightAnchor(scrollPane, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        // Make dialogContainer expand with the ScrollPane","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty().subtract(20)); // Ensure padding","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"        dialogContainer.setMaxWidth(500); // Prevent messages from stretching too much","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Rae2480"},"content":"        // Ensure input field and send button expand dynamically","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setBottomAnchor(userInput, 10.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setLeftAnchor(userInput, 10.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setRightAnchor(userInput, 80.0); // Leave space for send button","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setBottomAnchor(sendButton, 10.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setRightAnchor(sendButton, 10.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Rae2480"},"content":"        // Ensure header stays at the top and resizes","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setTopAnchor(headerBox, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setLeftAnchor(headerBox, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Rae2480"},"content":"        AnchorPane.setRightAnchor(headerBox, 0.0);","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Rae2480"},"content":"    /** Injects the Viktor instance and shows appropriate messages */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Rae2480"},"content":"    public void setViktor(Viktor v) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Rae2480"},"content":"        viktor \u003d v;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Rae2480"},"content":"        // Set the header label for the chatbot\u0027s name","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Rae2480"},"content":"        headerLabel.setText(\"viktor\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Rae2480"},"content":"        if (isFirstLaunch) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Rae2480"},"content":"            // Show welcome message on first launch","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Rae2480"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Rae2480"},"content":"                DialogBox.getViktorDialog(viktor.getWelcomeMessage(), viktorImages.get(0))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Rae2480"},"content":"            );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Rae2480"},"content":"            isFirstLaunch \u003d false;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Rae2480"},"content":"        showStartMessage(); // Always show start message when GUI is opened","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Rae2480"},"content":"    /** Displays the start message every time the GUI is opened */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Rae2480"},"content":"    private void showStartMessage() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Rae2480"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Rae2480"},"content":"            DialogBox.getViktorDialog(viktor.getStartMessage(), viktorImages.get(0))","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Rae2480"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Rae2480"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Viktor\u0027s reply, then appends them to","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Rae2480"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Rae2480"},"content":"    @FXML","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Rae2480"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Rae2480"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Rae2480"},"content":"        String response \u003d viktor.getResponse(input);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Rae2480"},"content":"        // Get the next image in cycle","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Rae2480"},"content":"        Image currentViktorImage \u003d viktorImages.get(currentImageIndex);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Rae2480"},"content":"        currentImageIndex \u003d (currentImageIndex + 1) % viktorImages.size(); // Cycle to next image","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Rae2480"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Rae2480"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Rae2480"},"content":"                DialogBox.getViktorDialog(response, currentViktorImage)","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Rae2480"},"content":"        );","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Rae2480"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Rae2480"},"content":"     * Resets the first launch flag to true. This is used to show the welcome message","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Rae2480"},"content":"     * again after the user resets the application.","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Rae2480"},"content":"    public void resetFirstLaunch() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Rae2480"},"content":"        isFirstLaunch \u003d true; // Reset first launch flag to true","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Rae2480"},"content":"     * Resets the UI by clearing the dialog container and reinitializing Viktor.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Rae2480"},"content":"    public void resetUI() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Rae2480"},"content":"        dialogContainer.getChildren().clear(); // Clear the dialog container","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Rae2480"},"content":"        setViktor(viktor); // Reinitialize Viktor and show the welcome message again","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":140}},{"path":"src/main/java/viktor/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":" * This class represents the user interface for Viktor.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"public class UI {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"     * Returns the welcome message.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"     * @return the welcome message string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"        return \"Hello! I\u0027m Viktor!\\n\" + \"What can I do for you today?\\n\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public String getStartMessage() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        return \"Here are some of my advanced capabilities:\\n\\n\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"                + \"Adding Tasks\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"                + \"Deleting a Task\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"                + \"Marking Tasks as Done\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"                + \"Viewing Tasks\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"                + \"Finding Tasks\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"                + \"Viewing Tasks by Date\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"                + \"Exiting the Program\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"                + \"Resetting the Program\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"Rae2480":27}},{"path":"src/main/java/viktor/ui/Viktor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import viktor.commands.Commandable;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import viktor.exceptions.ViktorException;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import viktor.parser.Parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import viktor.storage.Storage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.Task;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"import viktor.tasks.TaskList;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":" * The Viktor class represents the main class for the Viktor application.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":" * It initializes the UI, task list, and parser, and handles the loading of tasks from storage.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"public class Viktor {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    private UI ui;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    private Parser parser;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"     * Constructs a new Viktor instance, initializing the UI, task list, and parser.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"     * Loads tasks from storage and sets them in the task list.","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    public Viktor() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d Storage.load();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            taskList.setTasks(loadedTasks);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            System.out.println(\"Welcome to Viktor Chatbot!\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    public void reset() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        taskList.clear(); // Clear the current task list","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"    public String getStartMessage() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        return ui.getStartMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"            Commandable command \u003d parser.parse(input, taskList, false);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"            return command.execute();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"        } catch (ViktorException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"            return \"Something went wrong! Very wrong! Hextech is alive!\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"Rae2480":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"         \u003cviewport\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"            \u003cRectangle2D /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"         \u003c/viewport\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"            \u003cInsets left\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2025-02-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"\u003c?import javafx.scene.layout.Priority?\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"             xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"             fx:controller\u003d\"viktor.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"        \u003c!-- VBox to contain Header and Scrollable part --\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        \u003cVBox fx:id\u003d\"mainContainer\" spacing\u003d\"5.0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"              AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"            ","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"            \u003c!-- Header Box --\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"            \u003cHBox fx:id\u003d\"headerBox\" prefHeight\u003d\"50.0\" styleClass\u003d\"header-box\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"                    \u003cLabel fx:id\u003d\"headerLabel\" text\u003d\"VIKTOR\" textAlignment\u003d\"CENTER\" styleClass\u003d\"header-label\" /\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"                \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"            \u003c!-- Scrollable chat area --\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"            \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"                        VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"                    \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"5.0\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"                \u003c/content\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"            \u003c!-- User input TextField and Button --\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"            \u003cHBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"                \u003cButton fx:id\u003d\"sendButton\" text\u003d\"Send\" onAction\u003d\"#handleUserInput\" /\u003e","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":43}},{"path":"src/test/java/viktor/parser/DateParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.parser;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"public class DateParserTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"    public void testParseDateTime_validDateTime() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        String dateTimeStr \u003d \"5/2/2025 1530\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 2, 5, 15, 30);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        LocalDateTime actual \u003d DateParser.parseDateTime(dateTimeStr);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    public void testParseDateTime_alternativeFormat() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"        String dateTimeStr \u003d \"Feb. 5 2025, 15:30\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 2, 5, 15, 30);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        LocalDateTime actual \u003d DateParser.parseDateTime(dateTimeStr);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    public void testParseDateTime_invalidDateTime() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        String dateTimeStr \u003d \"2025-02-05T15:30\"; // Invalid format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateParser.parseDateTime(dateTimeStr));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    public void testFormatDateTime() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 2, 5, 15, 30);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        String expected \u003d \"Feb. 5 2025, 15:30\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        String actual \u003d DateParser.formatDateTime(dateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    public void testParseDateOnly_validDate() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        String dateInput \u003d \"5/2/2025\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        LocalDate expected \u003d LocalDate.of(2025, 2, 5);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        LocalDate actual \u003d DateParser.parseDateOnly(dateInput);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    public void testParseDateOnly_invalidDate() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        String dateInput \u003d \"2025-02-05\"; // Invalid format","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateParser.parseDateOnly(dateInput));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"    public void testFormatDate() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        LocalDate date \u003d LocalDate.of(2025, 2, 5);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"        String expected \u003d \"Feb. 5 2025\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"        String actual \u003d DateParser.formatDate(date);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"Rae2480":65}},{"path":"src/test/java/viktor/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    public void testDeadlineConstructor() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        assertNotNull(deadline);","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    public void testGetType() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"D\", deadline.getType());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    public void testGetDescription() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"return book\", deadline.getDescription());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    public void testMatchesDate() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        assertTrue(deadline.matchesDate(LocalDate.of(2023, 2, 1)));","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    public void testToString() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[D][ ] return book (by: Feb. 1 2023, 18:00)\", deadline.toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"    public void testBeDone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"        deadline.beDone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[D][X] return book (by: Feb. 1 2023, 18:00)\", deadline.toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"    public void testBeUndone() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"        deadline.beDone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"        deadline.beUndone();","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[D][ ] return book (by: Feb. 1 2023, 18:00)\", deadline.toString());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    public void testToSave() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"1/2/2023 1800\");","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"D |   | return book | Feb. 1 2023, 18:00\", deadline.toSave());","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"Rae2480":57}},{"path":"src/test/java/viktor/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"public class EventTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    public void testEventConstructor() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    public void testGetType() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"E\", event.getType());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"    public void testGetDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"meeting\", event.getDescription());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"    public void testMatchesDate() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"        assertTrue(event.matchesDate(LocalDate.of(2025, 2, 1)));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"    public void testToString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[E][ ] meeting (from: Feb. 1 2025, 10:00 to: Feb. 1 2025, 12:00)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"    public void testBeDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        event.beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[E][X] meeting (from: Feb. 1 2025, 10:00 to: Feb. 1 2025, 12:00)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"    public void testBeUndone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"        event.beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"        event.beUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[E][ ] meeting (from: Feb. 1 2025, 10:00 to: Feb. 1 2025, 12:00)\", event.toString());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Rae2480"},"content":"    public void testToSave() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Rae2480"},"content":"        EventTask event \u003d new EventTask(\"meeting\", \"1/2/2025 1000\", \"1/2/2025 1200\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"E |   | meeting | Feb. 1 2025, 10:00 | Feb. 1 2025, 12:00\", event.toSave());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":63}},{"path":"src/test/java/viktor/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"package viktor.tasks;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"class TodoTest {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"    void testTodoConstructor() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Rae2480"},"content":"        assertNotNull(todo, \"The Todo object should be created.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"    void testGetDescription() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"Test task\", todo.getDescription(),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"            \"Description should match the one provided in the constructor.\");","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Rae2480"},"content":"    void testGetType() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"T\", todo.getType(), \"The type of the Todo should be \u0027T\u0027.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"    void testToString() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"[T][ ] Test task\", todo.toString(), \"toString should return the correct string format.\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Rae2480"},"content":"    void testToSaveandBeDone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"T |   | Test task\", todo.toSave(), \"toSave should return the correct save format.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Rae2480"},"content":"    void testBeDoneandBeUndone() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Rae2480"},"content":"        todo.beDone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Rae2480"},"content":"        todo.beUndone();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\"T |   | Test task\", todo.toSave(), \"toSave should return the correct save format.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Rae2480"},"content":"    @Test","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Rae2480"},"content":"    void testTodoStatus() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Rae2480"},"content":"        TodoTask todo \u003d new TodoTask(\"Test task\");","lastModifiedDate":"2025-02-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Rae2480"},"content":"        assertEquals(\" \", todo.getStatusIcon(), \"Initially, the status icon should be a space.\");","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Rae2480"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Rae2480"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"add todo invent hextech","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"add Deadline convince mel for funding /by 3/4/1845 1730","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Rae2480"},"content":"mark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Rae2480"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Rae2480"},"content":"unmark 2","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Rae2480"},"content":"add event meeting with heimerdinger /from 5/4/1845 2100 /to 6/4/1845 0300","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Rae2480"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Rae2480"},"content":"delete 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Rae2480"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Rae2480"},"content":"time 6/4/1845","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Rae2480"},"content":"mark 2","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Rae2480"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"Rae2480":12}},{"path":"text-ui-test/ip/data/viktor.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rae2480"},"content":"D |   | convince mel for funding | Apr. 3 1845, 17:30","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"E | X | meeting with heimerdinger | Apr. 5 1845, 21:00 | Apr. 6 1845, 03:00","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"Rae2480":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"REM Run the program with isTesting set to true","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"java -classpath ..\\bin -Dtesting\u003dtrue Viktor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Rae2480":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Rae2480"},"content":"# need to manually toggle testing to true in Viktor.java to run this test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Rae2480"},"content":"# Clear the viktor.txt file explicitly before running the program","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Rae2480"},"content":"if [ -e \"ip/data/viktor.txt\" ]","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Rae2480"},"content":"then","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Rae2480"},"content":"    echo \"Clearing viktor.txt before running the test...\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Rae2480"},"content":"    \u003e ip/data/viktor.txt  ","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Rae2480"},"content":"fi","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Rae2480"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Rae2480"},"content":"# run the program with testing set to true","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Rae2480"},"content":"java -classpath ../bin -DisTesting\u003dtrue Viktor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Rae2480":10,"-":36}}]
