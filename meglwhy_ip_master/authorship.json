[{"path":"data/koji.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"T | 0 | study lac4202","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"E | 0 | study sesh | 2019-02-01 0000 | 2020-12-12 1800","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"D | 0 | hw | 2025-03-02 1900","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"T | 0 | read books","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"T | 0 | return books","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":5}},{"path":"src/main/java/Koji.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"import commands.Command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"import parser.Parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.*;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":" * The main entry point of the Koji chatbot application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" * Handles initializing the chatbot and processing user commands.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"public class Koji {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * Initializes Koji with storage, task list, and UI components.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     * @param filePath Path to the storage file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"    public Koji(String filePath) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"            ui.printError(\"Error loading tasks.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"     * Runs the chatbot, continuously processing user input until exit.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"    public void run() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"        ui.printWelcome();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"            try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"            } finally {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"meglwhy"},"content":"                ui.printLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"meglwhy"},"content":"     * Main method that starts Koji.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"meglwhy"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"meglwhy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"meglwhy"},"content":"        new Koji(\"./data/koji.txt\").run();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":62}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" * Represents a command to add a Deadline task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private final String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    private final String by;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * Constructs an AddDeadlineCommand.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * @param input The full user input containing the deadline description and date.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If the format is incorrect.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"    public AddDeadlineCommand(String input) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        if (!input.contains(\"/by \")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Deadline format: deadline \u003cdesc\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"        String[] parts \u003d input.replaceFirst(\"deadline \", \"\").split(\" /by \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Deadline format: deadline \u003cdesc\u003e /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"        this.by \u003d parts[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"            tasks.add(new Deadline(description, by));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"            ui.printMessage(\" Got it. I\u0027ve added this task:\\n   \" + tasks.getLastTask() +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"                    \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"            ui.printError(\" Invalid date format :( - Try using yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":44}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" * Represents a command to add an Event task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private final String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    private final String from;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    private final String to;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * Constructs an AddEventCommand.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     * @param input The full user input containing the event description and dates.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If the format is incorrect.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"    public AddEventCommand(String input) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"        if (!input.contains(\"/from \") || !input.contains(\"/to \")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Event format: event \u003cdesc\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        String[] parts \u003d input.replaceFirst(\"event \", \"\").split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"        if (parts.length \u003c 3 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Event format: event \u003cdesc\u003e /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"        this.from \u003d parts[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"        this.to \u003d parts[2].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"            tasks.add(new Event(description, from, to));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"            ui.printMessage(\" Got it. I\u0027ve added this task:\\n   \" + tasks.getLastTask() +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"                    \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"            ui.printError(\" Invalid date format :( - Try using yyyy-MM-dd HHmm.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":46}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.Todo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" * Represents a command to add a Todo task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private final String description;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     * Constructs an AddTodoCommand.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * @param input The full user input containing the todo description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"    public AddTodoCommand(String input) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"        this.description \u003d input.replaceFirst(\"todo \", \"\").trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Todo description cannot be empty.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"        tasks.add(new Todo(description, false));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"        ui.printMessage(\" Got it. I\u0027ve added this task:\\n   \" + tasks.getLastTask() +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"                \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":33}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":" * Represents a command that can be executed by the chatbot.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"public abstract class Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"     * @param tasks The TaskList containing the current tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"     * @param ui The UI handling user interactions.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     * @param storage The Storage handling file operations.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If an error occurs during execution.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"     * Indicates whether the command should terminate the chatbot.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"     * @return true if the chatbot should exit, false otherwise.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        return false;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":29}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     * Constructs a DeleteCommand.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * @param input The full user input containing the task number to delete.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If the task number is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"    public DeleteCommand(String input) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Delete what?? Task number required.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"            this.taskIndex \u003d Integer.parseInt(parts[1]) - 1; // Convert 1-based index to 0-based","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Task number must be an integer!!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Task number out of range..\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"        Task removedTask \u003d tasks.delete(taskIndex);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"        ui.printMessage(\" Noted. I\u0027ve removed this task:\\n   \" + removedTask +","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"                \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":42}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":" * Represents a command to exit the chatbot.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"        return true;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":20}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":" * Represents a command to find tasks that match a given keyword.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * Constructs a FindCommand.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     * @param input The full user input containing the search keyword.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If the keyword is missing.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"    public FindCommand(String input) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\" Find what?? Keyword required.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"        this.keyword \u003d parts[1].trim();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"            ui.printMessage(\" No matching tasks found.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"            ui.printMessage(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"                ui.printMessage(\" \" + (i + 1) + \". \" + filteredTasks.get(i));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":44}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package commands;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import ui.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":" * Represents a command to list the added tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"        ui.printMessage(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"        tasks.printTasks();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":16}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import commands.*;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":" * Parses user input and returns the corresponding Command object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"public class Parser {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"     * Parses the user input and returns a Command object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"     * @param input The user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If an unknown command is encountered.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    public static Command parse(String input) throws IOException {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"            return new ListCommand();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"            return new AddTodoCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"            throw new IOException(\"Unknown command.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":35}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import task.Deadline;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import task.Event;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import task.Task;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import task.Todo;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"import java.io.*;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"public class Storage {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    private File file;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * Creates a Storage object and ensures the file exists.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"        verifyFileExistence();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"     * Ensures that the file and its parent directories exist.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"    private void verifyFileExistence() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"                file.createNewFile();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"            System.out.println(\"Error creating file\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"     * @return A list of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"            String line;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"meglwhy"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"meglwhy"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"meglwhy"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"meglwhy"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"meglwhy"},"content":"                } else {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"meglwhy"},"content":"                    System.out.println(\"Skipped corrupted line: \" + line);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"meglwhy"},"content":"                }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"meglwhy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"meglwhy"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"meglwhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"meglwhy"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"meglwhy"},"content":"        return tasks;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"meglwhy"},"content":"     * Saves the current task list to the file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"meglwhy"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"meglwhy"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"meglwhy"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"meglwhy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"meglwhy"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"meglwhy"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"meglwhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"meglwhy"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"meglwhy"},"content":"     * Parses a task from a formatted string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"meglwhy"},"content":"     * @param line The line from the storage file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"meglwhy"},"content":"     * @return A Task object or null if parsing fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"meglwhy"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"meglwhy"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"meglwhy"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"meglwhy"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"meglwhy"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"meglwhy"},"content":"            switch (type) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"meglwhy"},"content":"                case \"T\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"meglwhy"},"content":"                    return new Todo(description, isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"meglwhy"},"content":"                case \"D\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"meglwhy"},"content":"                    return new Deadline(description, Task.parseDate(parts[3]).format(Task.INPUT_FORMAT), isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"meglwhy"},"content":"                case \"E\":","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"meglwhy"},"content":"                    return new Event(description,","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"meglwhy"},"content":"                            Task.parseDate(parts[3]).format(Task.INPUT_FORMAT),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"meglwhy"},"content":"                            Task.parseDate(parts[4]).format(Task.INPUT_FORMAT),","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"meglwhy"},"content":"                            isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"meglwhy"},"content":"                default:","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"meglwhy"},"content":"                    return null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"meglwhy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"meglwhy"},"content":"            return null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-11","isFullCredit":false}],"authorContributionMap":{"meglwhy":110}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":" * Represents a task that needs to be completed before a specific deadline.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"    protected LocalDateTime deadlineTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"     * @param deadlineTime The deadline date in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"     * @param isDone Whether the task is already completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"     * @throws IllegalArgumentException If the deadline date format is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    public Deadline(String description, String deadlineTime, boolean isDone) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"        this.deadlineTime \u003d parseDate(deadlineTime);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"        if (this.deadlineTime \u003d\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"            throw new IllegalArgumentException(\" Invalid deadline\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"     * Constructs a new Deadline task that is initially not completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"     * @param deadlineTime The deadline date in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    public Deadline(String description, String deadlineTime) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"        this(description, deadlineTime, false); // calls new Deadline with isDone \u003d false","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadlineTime.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":44}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":" * Represents an event with a start and end time.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"     * @param description The event description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"     * @param startTime The event start time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"     * @param endTime The event end time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     * @param isDone Whether the event has already happened.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * @throws IllegalArgumentException If the date format is invalid.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        this.startTime \u003d parseDate(startTime);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        this.endTime \u003d parseDate(endTime);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        if (this.endTime \u003d\u003d null || this.startTime \u003d\u003d null) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"            throw new IllegalArgumentException(\" Invalid date format.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"     * Constructs an Event task that is initially not completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"     * @param description The event description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"     * @param startTime The event start time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"     * @param endTime The event end time in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"        this(description, startTime, endTime, false);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime.format(OUTPUT_FORMAT) + \" to: \" + endTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTime.format(INPUT_FORMAT) + \" | \" + endTime.format(INPUT_FORMAT);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":49}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    protected String description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    public static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * Constructs a new Task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"     * Gets icon for status of task completion.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"     * @return \"X\" for completed task and \" \" otherwise.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"meglwhy"},"content":"     * @param date The date string in yyyy-MM-dd HHmm format.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"meglwhy"},"content":"     * @return A LocalDateTime object or null if parsing fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"meglwhy"},"content":"    public static LocalDateTime parseDate(String date) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"meglwhy"},"content":"        try {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"meglwhy"},"content":"            return LocalDateTime.parse(date, INPUT_FORMAT);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"meglwhy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"meglwhy"},"content":"            return null;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"meglwhy"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"meglwhy"},"content":"     * @return The formatted task string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"meglwhy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"meglwhy"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"meglwhy"},"content":"     * Returns a formatted string for saving to a file.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"meglwhy"},"content":"     * @return The formatted string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"meglwhy"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":76}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import storage.Storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":" * Provides methods to add, delete, and retrieve tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"public class TaskList {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    private Storage storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"     * Constructs a TaskList with tasks loaded from storage.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"     * @param storage The storage system used to load and save tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If an error occurs while loading tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"    public TaskList(Storage storage) throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        this.tasks \u003d storage.load();","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"     * Adds a task to the task list and saves it to storage.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If an error occurs while saving tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    public void add(Task task) throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"    public int size() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"     * Retrieves the most recently added task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"     * @return The last task in the list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"    public Task getLastTask() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"meglwhy"},"content":"     * Prints all tasks currently in the task list.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"meglwhy"},"content":"    public void printTasks() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"meglwhy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"meglwhy"},"content":"            System.out.println(\" Task list is empty\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"meglwhy"},"content":"        } else {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"meglwhy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"meglwhy"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"meglwhy"},"content":"     * Deletes a task from the list by index and saves the updated list to storage.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"meglwhy"},"content":"     * @param index The index of the task to delete (0-based index).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"meglwhy"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"meglwhy"},"content":"     * @throws IOException If an error occurs while saving tasks.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"meglwhy"},"content":"    public Task delete(int index) throws IOException {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"meglwhy"},"content":"        Task removed \u003d tasks.remove(index);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"meglwhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"meglwhy"},"content":"        return removed;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"meglwhy"},"content":"     * Searches for tasks that contain the given keyword in their description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"meglwhy"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"meglwhy"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"meglwhy"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"meglwhy"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"meglwhy"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"meglwhy"},"content":"            if (task.description.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"meglwhy"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"meglwhy"},"content":"            }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"meglwhy"},"content":"        }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"meglwhy"},"content":"        return filteredTasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":91}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":" * Represents a Todo task without a specific deadline.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"     * @param description The task description.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"    @Override","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"    public String toFileString() {","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":24}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"package ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":" * Handles user interactions with the chatbot.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"meglwhy"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"meglwhy"},"content":"public class Ui {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"meglwhy"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"meglwhy"},"content":"     * Constructs a Ui object for handling user input and output.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"meglwhy"},"content":"    public Ui() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"meglwhy"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"meglwhy"},"content":"     * Prints the welcome message when the chatbot starts.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"meglwhy"},"content":"    public void printWelcome() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\" Hello! I\u0027m Koji.\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"meglwhy"},"content":"     * Prints a separator line for better readability in output.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"meglwhy"},"content":"    public void printLine() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"meglwhy"},"content":"     * Prints the goodbye message when the chatbot exits.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"meglwhy"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"meglwhy"},"content":"     * Prints a given message to the user.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"meglwhy"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"meglwhy"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"meglwhy"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"meglwhy"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"meglwhy"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"meglwhy"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"meglwhy"},"content":"        System.out.println(\" Error: \" + errorMessage);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"meglwhy"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"meglwhy"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"meglwhy"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"meglwhy"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"meglwhy"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"meglwhy"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"meglwhy"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"meglwhy"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"meglwhy"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"meglwhy":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meglwhy"},"content":"todo borrow book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"meglwhy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"meglwhy"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"meglwhy"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"meglwhy"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"meglwhy"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"meglwhy":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"meglwhy"},"content":"java -classpath ../bin Koji \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"meglwhy"},"content":"## convert to UNIX format","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"meglwhy"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"meglwhy"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"meglwhy":4,"-":34}}]
