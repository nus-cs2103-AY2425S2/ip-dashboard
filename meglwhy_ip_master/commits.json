{"authorDailyContributionsMap":{"meglwhy":[{"date":"2025-01-24","commitResults":[{"hash":"105273c70e07856d13976a727b6f43a839e92ef4","isMergeCommit":false,"messageTitle":"level 0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":10}}},{"hash":"e18d32a0d57520a3c8dfe67d58d25276720e4e1e","isMergeCommit":false,"messageTitle":"level 1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}},{"hash":"66bdfbb2a27ec2e361275ba5d28956713ab5b7d5","isMergeCommit":false,"messageTitle":"level 2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":6}}},{"hash":"bb51c0c7c65005d7237bcfc7b0714a706d746634","isMergeCommit":false,"messageTitle":"level 3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":23}}},{"hash":"feaecdfc0a7d18199ba66a38be935c5f2ade6e1d","isMergeCommit":false,"messageTitle":"level 4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":14}}},{"hash":"5a8507feef7759c7b29e3dfe362ddec7225776e7","isMergeCommit":false,"messageTitle":"a-textuitesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":7,"deletions":1},"sh":{"insertions":4,"deletions":4}}},{"hash":"15142784213109ffae19352f3fafd1035b715797","isMergeCommit":false,"messageTitle":"level 5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":298,"deletions":119}}},{"hash":"373e429777b92c0ef4921cba5aa45fbe77a5702f","isMergeCommit":false,"messageTitle":"level 6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}}]},{"date":"2025-02-10","commitResults":[{"hash":"c6f230f79f17b24493fab1e14dbaa57c0a1ab255","isMergeCommit":false,"messageTitle":"Refactor project structure: Organize files into koji and task packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":252}}}]},{"date":"2025-02-11","commitResults":[{"hash":"23672c1e78e3acece51e6dc56d3d788ee0b666c8","isMergeCommit":false,"messageTitle":"Add Storage class to save tasks in duke.txt","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":165,"deletions":41}}},{"hash":"297b363b4f3d5e0351502ffeb5707be845d3f55e","isMergeCommit":true,"messageTitle":"Merge branch-Level-7","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"0f2bf99273e7b4807da1846437011cbb46d3a38a","isMergeCommit":false,"messageTitle":"Use LocalDateTime for parsing and formatting dates in Deadline and Event","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":41,"deletions":19}}},{"hash":"70480f8ae6f3837e50e401d51601ac69cbc51f67","isMergeCommit":true,"messageTitle":"Merge branch-Level-8 (corrected)","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-12","commitResults":[{"hash":"ad9841aba6e06852c73f7025113f1c2e4c8e15e2","isMergeCommit":false,"messageTitle":"Refactor project structure into more OOP design","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":383,"deletions":99}}},{"hash":"6ed99e84278307366023c37f53d5482362faf2e3","isMergeCommit":false,"messageTitle":"Delete commented lines and fix event date parsing and storage format","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":46,"deletions":156}}},{"hash":"beceb5469c5fad0a1508075dd01f791c91c108c2","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to the code","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":228,"deletions":7}}},{"hash":"72103f4cf28f9b57cbc97590f6e65fd66776a5e3","isMergeCommit":false,"messageTitle":"Enforce coding standards across all classes","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":26}}},{"hash":"2624f4c261d73dcdb43013996ad24763530304e9","isMergeCommit":false,"messageTitle":"Implement find feature","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":3},"java":{"insertions":63,"deletions":0}}}]},{"date":"2025-02-14","commitResults":[{"hash":"3068a96ec32684b4cac8146f1ccc61f531f4ef5c","isMergeCommit":false,"messageTitle":"Add Gradle to project section","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":71,"deletions":0},"java":{"insertions":10,"deletions":3}}},{"hash":"74eea62b8318086520e571ee9eed5b351e12c522","isMergeCommit":true,"messageTitle":"Correct implementation of Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"7f4d75a51f86d78e939fbd00e07a1059e46861d8","isMergeCommit":false,"messageTitle":"Add JUnit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"305d4af55be4ad0b65bdf4d0d9ed25d9b4350f82","isMergeCommit":false,"messageTitle":"Package the app as an executable JAR file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":2}}},{"hash":"53e882abf63d42219cd0fbe05a66f92391c0eec8","isMergeCommit":false,"messageTitle":"Implement (incomplete) version of checkstyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":9,"deletions":0},"java":{"insertions":69,"deletions":45}}},{"hash":"5a297d9cac3f54474dc8ae6ee14deabfc33aa311","isMergeCommit":false,"messageTitle":"Remove debugging statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":5}}},{"hash":"692501f50a63c370e7ce4f2b127315d961e1f8d8","isMergeCommit":false,"messageTitle":"Implement complete GUI layout with JavaFX controls and custom DialogBox","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":1},"java":{"insertions":64,"deletions":0}}},{"hash":"aee957c9bc756e75fd415f5e1eac8734568ea4c1","isMergeCommit":false,"messageTitle":"Create a GUI for Koji","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":28}}},{"hash":"5357accebe1d3a1fe53fe53a02c27bd30c88da69","isMergeCommit":false,"messageTitle":"Use the JavaFX technology to implement the GUI (completed)","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":59,"deletions":0},"java":{"insertions":227,"deletions":88}}}]},{"date":"2025-02-17","commitResults":[{"hash":"66199add082277daf1e4fc11759cdc1fb3a81cdd","isMergeCommit":false,"messageTitle":"Add assertions to document key assumptions in the code","messageBody":"Added Java assert statements in critical methods and constructors to ensure that important assumptions hold during execution. For example, assertions now verify that:\n- Input values are not null.\n- Parsed dates in Deadline and Event classes are valid (non-null).\n- Task objects added to the TaskList are not null.\n\nThese runtime checks help catch logical errors early when assertions are enabled (with the -ea flag), serving both as documentation and as a debugging aid.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"81984ab7267f23828db631da12172ad3af392801","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Assertions\u0027","messageBody":"Add assertions to document key assumptions\n\nThis merge integrates changes that add Java assert statements in critical parts of\nthe codebase. Assertions have been added to ensure that:\n- Input values are not null.\n- Parsed dates in Deadline and Event classes are valid.\n- Task objects added to the TaskList are not null.\n\nThese runtime checks help catch logical errors early (when assertions are enabled)\nand serve as both documentation and a debugging aid.\n","fileTypesAndContributionMap":{}},{"hash":"cb24afa7d78cae1232c02a7f80ada476619cfbc3","isMergeCommit":false,"messageTitle":"Remove unused/duplicate DialogBox class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":61}}},{"hash":"231d5607cf3b591f518a16f876716f47558edde8","isMergeCommit":false,"messageTitle":"Refactor DialogBox: Extract FXML loading and improve documentation","messageBody":"Refactored the DialogBox class to enhance readability and maintainability.\n- Extracted the FXML loading logic into a separate loadFXML() method.\n- Enhanced JavaDoc comments for clarity.\n- Retained functionality for creating user and system dialog boxes,\n  including flipping the dialog for system messages.\nThis change cleans up the constructor and simplifies future modifications.\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":24}}},{"hash":"492e992e5fff24761f373c5a959f96434a440323","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodeQuality\u0027 Improve code quality and enforce coding standards","messageBody":"This merge incorporates changes from branch-A-CodeQuality, which refactors the code for better\nreadability, adds assertions to document key assumptions, and aligns code formatting with our\nquality guidelines. These improvements enhance maintainability and help catch bugs earlier.\n","fileTypesAndContributionMap":{}},{"hash":"2ebf02e35a95e2bcf7c85833f30fcea7bf51aac7","isMergeCommit":false,"messageTitle":"Refactor TaskList.findTasks to use Java Streams","messageBody":"This commit replaces the explicit for-loop in the TaskList.findTasks method with a stream-based approach. The new implementation leverages the Java Stream API to filter tasks by a keyword in a case-insensitive manner.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":7}}},{"hash":"2417f13e2fad0d6866497e759db61f3a41f3d97c","isMergeCommit":false,"messageTitle":"Refactor TaskList.findTasks to use Java Streams","messageBody":"This commit replaces the explicit for-loop in the TaskList.findTasks method with a stream-based approach. The new implementation leverages the Java Stream API to filter tasks by a keyword in a case-insensitive manner.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":7}}},{"hash":"2da1eaa10b52ebed73a053978e88c494a4865a68","isMergeCommit":false,"messageTitle":"Revert \"Refactor TaskList.findTasks to use Java Streams\"","messageBody":"This reverts commit 2417f13e2fad0d6866497e759db61f3a41f3d97c.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":4}}},{"hash":"6d037006d68faeecd5ac06d7ed649e99832da4ec","isMergeCommit":false,"messageTitle":"Refactor TaskList.findTasks to use Java Streams","messageBody":"This commit replaces the explicit for-loop in the TaskList.findTasks method with a stream-based approach. The new implementation leverages the Java Stream API to filter tasks by a keyword in a case-insensitive manner.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"d0ff0dfa527530e3f4c0bbb8aab811cac1a81953","isMergeCommit":true,"messageTitle":"Merge branch-A-Streams into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"21ab0cfcbcce5449ecdfdbc2198d65cbe89fb979","isMergeCommit":false,"messageTitle":"Add comments for change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"d24daccebe609b60912992e7fdc427621aa5027d","isMergeCommit":true,"messageTitle":"Merge pull request #4 from meglwhy/master","messageBody":"Merge branch \u0027branch-A-CodeQuality\u0027","fileTypesAndContributionMap":{}},{"hash":"46bdebcbeef736d5c31d90f830f35b34dadb4141","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodeQuality\u0027 of https://github.com/meglwhy/ip into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"952acd4cadd1326d0f74150674d8fb72967ea9ab","isMergeCommit":false,"messageTitle":"Delete duplicate DialogBox class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":60}}},{"hash":"497836415ba0b10c8695cdcf24ed8c6db68a7353","isMergeCommit":false,"messageTitle":"Add assertions to document key assumptions in the code","messageBody":"Added Java assert statements in critical methods and constructors to ensure that important assumptions hold during execution. For example, assertions now verify that:\n- Input values are not null.\n- Parsed dates in Deadline and Event classes are valid (non-null).\n- Task objects added to the TaskList are not null.\n\nThese runtime checks help catch logical errors early when assertions are enabled (with the -ea flag), serving both as documentation and as a debugging aid.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"91d8535e526a6a49e6e4586f0afa05941346d106","isMergeCommit":true,"messageTitle":"Merge pull request #5 from meglwhy/branch-A-Assertions","messageBody":"Merge branch \u0027branch-A-Assertions\u0027","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"ed0242c367b2d9c31b774805d48cf3300fa896dd","isMergeCommit":false,"messageTitle":"Refactor DialogBox class for improved readability and maintainability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":25}}},{"hash":"9c34f801b82386d9e80e4773cae5c3eba85d68b7","isMergeCommit":false,"messageTitle":"Revert \"Refactor DialogBox class for improved readability and maintainability\"","messageBody":"This reverts commit ed0242c367b2d9c31b774805d48cf3300fa896dd.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":40}}}]},{"date":"2025-02-18","commitResults":[{"hash":"78d284177ac7ba6288405be946b5ae8f241a18ca","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"56bf109e4dc041a87d3a121fdf2ef21a8796c28d","isMergeCommit":true,"messageTitle":"Merge pull request #6 from meglwhy/branch-A-CodeQuality","messageBody":"Merge branch \u0027branch-A-CodeQuality\u0027","fileTypesAndContributionMap":{}},{"hash":"58fe9990a7bd1e9eb8e552aef929f4b6f9c9a69a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/meglwhy/ip","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"8df21b1367c8f5f7159f9782c5aef11d6d165d1c","isMergeCommit":false,"messageTitle":"Refactor task search to use Java Streams","messageBody":"Refactored the findTasks method in TaskList to utilize Java Streams instead\nof a traditional for-loop. This change simplifies the code and improves\nreadability by making the filtering logic more declarative. The new\nimplementation filters tasks based on the search keyword and collects the\nresults into an ArrayList.\n\nThis approach not only reduces boilerplate but also lays the foundation for\npotential future enhancements, such as parallel processing, if needed.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":7}}},{"hash":"eac829dfd08ca1e5e8a793070e0cf3733e897878","isMergeCommit":true,"messageTitle":"Merge pull request #7 from meglwhy/branch-A-Streams","messageBody":"Refactor task search to use Java Streams","tags":["A-Streams","A-FullCommitMessage"],"fileTypesAndContributionMap":{}},{"hash":"592dae62469e9a51c0bab17bd4d66a455c1b6c2d","isMergeCommit":false,"messageTitle":"Add edit command feature to update tasks","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":90,"deletions":8}}}]},{"date":"2025-02-20","commitResults":[{"hash":"45cfc96d4028ca74b901f1c86bdbfa4169a740b0","isMergeCommit":false,"messageTitle":"Refactor command classes to return responses","messageBody":"Updated all command classes so that their execute() methods now return a String response.\nThis allows the GUI to display responses generated by the commands, providing better\nintegration between user input and system output.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":1,"deletions":1},"java":{"insertions":76,"deletions":44}}},{"hash":"198a089a0f5f216ace312da6baef8b33b11e91f9","isMergeCommit":false,"messageTitle":"Improve GUI interactivity and layout for Koji chatbot","messageBody":"Added event handlers for user input, auto-scrolling for the dialog container, and updated layout constraints to center the ScrollPane and prevent horizontal scrolling.\nInserted a welcome message on startup.\nUpdated DialogBox styling to add padding between text and avatar and to display avatars as circular images.\nThese improvements enhance the overall user experience.\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":1},"java":{"insertions":29,"deletions":30}}},{"hash":"ef29cb5e8e67af3adf23bebc18d1918df6909daf","isMergeCommit":false,"messageTitle":"Improve GUI layout and implement mark/unmark commands","messageBody":"Enhanced the chatbot GUI by refining the layout to ensure that the dialog\ncontainer auto-scrolls and displays full-length messages without truncation.\nAdjusted component sizes, spacing, and background styling for a more polished\nlook.\n\nImplemented mark and unmark commands to allow users to update task statuses\nin-place. Updated the commands and TaskList methods to use 1-based indexing,\nensuring that commands like \u0027mark 6\u0027 and \u0027unmark 6\u0027 update the correct tasks.\nThese improvements collectively enhance the user experience by providing\nboth a more visually appealing interface and interactive task updates.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":123,"deletions":5}}}]},{"date":"2025-02-21","commitResults":[{"hash":"87f0d0a45b96bcde36a7925e9f2e826814f520b8","isMergeCommit":false,"messageTitle":"Refactor exit command and update build.gradle for Windows compatibility","messageBody":"Modified ExitCommand to call Platform.exit() so that when the user types \u0027bye\u0027, the application window is closed immediately. This change ensures a clean shutdown of the GUI.\n\nAlso updated build.gradle to work correctly on Windows by adjusting the JavaFX dependency declarations. Platform-specific suffixes have been set appropriately to avoid build issues on Windows environments.\n\nThese changes improve the overall user experience and enhance cross-platform compatibility.\n","fileTypesAndContributionMap":{"gradle":{"insertions":33,"deletions":31},"java":{"insertions":5,"deletions":1}}},{"hash":"2bdee182dd3c96ca27e454ee296a643f5e0a6f2f","isMergeCommit":false,"messageTitle":"Add event date validation to ensure start date is before end date","messageBody":"Updated AddEventCommand to validate event dates before creating an Event task.\nNow the command parses the start and end dates using Task.parseDate, checks that\nboth dates are valid, and ensures that the start date is not after the end date.\nIf the validation fails, the command returns a descriptive error message.\nThis change improves data integrity by preventing events with invalid date ranges.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":4}}},{"hash":"2bbd333203455b1097023972d9b6f429ebf6586b","isMergeCommit":false,"messageTitle":"Refactor chatbot responses for consistency and improved clarity","messageBody":"Updated the command execution flow so that each command now returns a response\nstring instead of directly printing to the UI. This refactoring applies to the\nExitCommand, ListCommand, and other commands, enabling the UI to capture and display\nresponses uniformly. These changes improve separation of concerns and pave the way\nfor future enhancements in response handling.\n","tags":["A-Personality"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":23,"deletions":23}}},{"hash":"ee370aa6f8faffe7b0b7154caa5639501ca60e8e","isMergeCommit":false,"messageTitle":"Update User Guide with comprehensive feature documentation and GitHub Pages setup","messageBody":"Updated docs/README.md to provide detailed instructions for using Koji Chatbot. The guide now covers how to add deadlines, mark/unmark tasks, edit tasks, find tasks, add events, and delete tasks. It also explains the command format and includes step-by-step instructions for enabling GitHub Pages for hosting the user guide. These enhancements help users better understand and interact with Koji.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":115,"deletions":16}}},{"hash":"afcff6638bca9a3a2fffd2a8842d8ba6b29a1955","isMergeCommit":false,"messageTitle":"docs: expand README documentation","messageBody":"Added more details about project setup and usage instructions.\n","fileTypesAndContributionMap":{"md":{"insertions":59,"deletions":40}}},{"hash":"82d1a76d8a6783d29c5d48ddbefba1dac7e8650e","isMergeCommit":false,"messageTitle":"Improve README documentation","messageBody":"Added more details about project setup and usage instructions.\n","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2025-02-23","commitResults":[{"hash":"c3a42adb007bcba84cacaac36dba902835ffcd73","isMergeCommit":false,"messageTitle":"Change dependencies to accomodate for linux","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":13,"deletions":16}}},{"hash":"b77aa26e84698ad2181556b474cc01eaa38072d7","isMergeCommit":false,"messageTitle":"Add JUnit 5 dependencies for unit testing","messageBody":"","tags":["A-NewRelease"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":2}}}]},{"date":"2025-03-05","commitResults":[{"hash":"26ede31a3a05b699af894f93f3d5c19dca84bc8a","isMergeCommit":false,"messageTitle":"Fix DeadlineTest to match OUTPUT_FORMAT in Task","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":4,"deletions":5}}},{"hash":"b6409f565fd02631ce89451e31d08339da443086","isMergeCommit":false,"messageTitle":"Fix testDeadlineToString formatting issue","messageBody":"Deadline.toString() was producing a different format than expected in\ntestDeadlineToString. The expected format was \u0027(by: 02 Mar 2025, 07:00 PM)\u0027,\nbut the actual output was incorrect due to the OUTPUT_FORMAT used in Task.\n\nThe OUTPUT_FORMAT in Task was using \u0027MMM dd yyyy, h:mm a\u0027, which did not\nensure leading zeros for single-digit hours and had the wrong order for\nday and month.\n\nLet\u0027s update OUTPUT_FORMAT to \u0027dd MMM yyyy, hh:mm a\u0027 to ensure:\n- Day appears before the month.\n- Hours are displayed with leading zeros in 12-hour format.\n- The AM/PM notation is correctly formatted.\n\nThis fix ensures that testDeadlineToString now passes and matches the\nexpected output format.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"ab8c6d108db4bba35db797e03db71245b153272f","isMergeCommit":false,"messageTitle":"File creation: Add warning message for file existence check","messageBody":"When creating a new file in the Storage class, the code silently proceeds\neven if the file already exists or cannot be created. This lack of\nfeedback can make debugging file-related issues difficult.\n\nAdding a warning message when the file already exists or cannot be\ncreated improves the visibility of file creation issues. This helps\ndevelopers identify and resolve file-related problems more easily.\n\nLet\u0027s add a warning message in the verifyFileExistence method to notify\nwhen the file already exists or cannot be created. This ensures that\ndevelopers are aware of potential issues during file creation.\n\nThe warning message is logged to the console, which is sufficient for\ndebugging purposes. This change does not affect the functionality of the\ncode but improves its maintainability and debugging experience.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"db9be89410831a4c395bcf75e6b04044b0501a61","isMergeCommit":false,"messageTitle":"Add validation check for unmark command","messageBody":"The UnmarkCommand class did not previously validate whether the command\nwas explicitly \u0027unmark\u0027 before processing. This allowed potential\nunexpected behavior in certain cases.\n\nTo improve clarity and prevent unintended execution, let\u0027s add a check\nto verify if the command starts with \u0027unmark\u0027. If it does, the program\nnow immediately throws an IOException with the message \u0027The method is\nnot done yet.\u0027 This ensures that the command execution is halted before\nproceeding further.\n\nThis change enhances error handling and provides clear feedback to\ndevelopers when this method is called.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"a65514e03199e4ea65ec3c69644b2637f7e69fc8","isMergeCommit":false,"messageTitle":"Add validation for already marked tasks in MarkCommand","messageBody":"Previously, MarkCommand did not check whether a task was already marked\nas done before attempting to mark it again. This could lead to redundant\noperations and unnecessary writes to storage.\n\nTo improve error handling, let\u0027s add a check before marking a task as\ndone. If the task is already marked, the program now throws an IOException\nwith the message \u0027Task is already marked as done.\u0027 This prevents duplicate\noperations and improves clarity for the user.\n\nAdditionally, this ensures that no unnecessary file writes occur if the\ntask was already marked.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":8,"deletions":1}}},{"hash":"32cda6e4617b36a1f3033d2df845200474609e47","isMergeCommit":false,"messageTitle":"Improve README formatting and structure","messageBody":"The Koji Chatbot User Guide previously had a plain layout, making it harder\nto read and navigate efficiently. Important commands lacked proper\nhighlighting, and sections were not clearly distinguished.\n\nTo enhance readability and user experience, let\u0027s:\n- Add proper Markdown formatting, including bold headings and icons.\n- Improve command highlighting using code blocks.\n- Separate sections with clear dividers.\n- Standardize expected output formatting for consistency.\n- Make instructions more intuitive and engaging.\n\nThese changes make the README more structured, visually appealing, and\neasier for users to follow when interacting with Koji Chatbot.\n","tags":["A-LatestRelease"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"md":{"insertions":110,"deletions":78}}}]},{"date":"2025-03-06","commitResults":[{"hash":"e712ed34e6d2504f74b76e2dc0bc6cb322a97cab","isMergeCommit":false,"messageTitle":"Fix incorrect validation logic in UnmarkCommand","messageBody":"Previously, the UnmarkCommand constructor incorrectly checked if the\ncommand was \u0027unmark\u0027 and immediately threw an IOException, making the\ncommand unusable. This was not the intended behavior.\n\nTo fix this:\n- Removed the incorrect validation that blocked execution for all \u0027unmark\u0027 commands.\n- Ensured task indexing is properly validated before attempting to mark a task as not done.\n- Improved error handling to provide accurate feedback to users.\n\nWith this fix, \u0027unmark\u0027 now correctly allows marking tasks as not done while\npreventing invalid task numbers from being processed.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":7,"deletions":6}}}]}]},"authorFileTypeContributionMap":{"meglwhy":{"java":1442,"md":161,"fxml":60,"sh":4,"bat":0,"gradle":66,"txt":13}},"authorContributionVariance":{"meglwhy":47618.84},"authorDisplayNameMap":{"meglwhy":"CS2103T-F10-2 LOW .. YEN"}}
