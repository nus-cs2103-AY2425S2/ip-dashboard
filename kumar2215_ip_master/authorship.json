[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-29T17:25:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-07T01:38:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-core\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    mainClass.set(\"rover.main.Launcher\")","lastModifiedDate":"2025-02-08T11:36:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    archiveFileName \u003d \"Rover.jar\"","lastModifiedDate":"2025-02-22T15:51:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T17:25:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:25:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"checkstyle {","lastModifiedDate":"2025-01-29T17:25:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2025-01-29T17:25:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"kumar2215":24,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"# Rover User Guide","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"Rover is a simple desktop app that act as a command-based to-do list manager with an intuitive interface for adding, listing, and managing tasks efficiently.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"## Quick Start","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"**Mac users**: Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"2. Download the latest Rover.jar file from [here](https://github.com/kumar2215/ip/releases/download/A-Release/Rover.jar).","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"3. Copy the file to the folder you want to use as the home folder for Rover.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar Rover.jar command to run the application.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"![Rover Todo App Screenshot](Ui.png)","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"## Features","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"### Adding Deadlines","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"You can add a deadline task by using the following command format:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"deadline Finish report /by 21-02-25 23:59","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"- A new deadline task is added with the specified due date.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"- The task will be displayed in the task list.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"### Adding To-Do Tasks","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"To add a simple to-do task without deadlines, use:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"todo Buy groceries","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"- The task is added without any time constraints.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"### Adding Events","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"You can add an event by specifying a start and end time:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"event Team meeting /from 20-02-25 10:00 /to 20-02-25 12:00","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"- An event task is created with a specified time range.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"### Listing Tasks","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"To list all existing tasks, use:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"- All saved tasks will be displayed with their statuses.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"## Managing Tasks","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"### Marking a Task as Done","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"mark 1","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"- Marks the task at index 1 in the list as done.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"### Marking a Task as Not Done","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"unmark 1","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"- Marks the task at index 1 in the list as not done.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"### Deleting a Task","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"delete 1","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"### Expected Outcome:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"- Deletes the task at index 1 in the list.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"## Filtering Tasks","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"### Find Tasks by Keyword","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"find report","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"- Displays all tasks containing the keyword \"report\".","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"### Show Tasks Before a Certain Date","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"show before 01-03-25","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"- Displays all tasks with deadlines before the specified date.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"### Show Tasks After a Certain Date","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"show after 15-02-25","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"- Displays all tasks with deadlines after the specified date.","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"## Setting User Preferences","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"### Set Your Name","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"set name John","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"- Your name will be updated.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"### Set User Image","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"set userImage path/to/image.png (relative to the current directory)","lastModifiedDate":"2025-02-22T16:46:50","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"- Your profile picture used in the chat will be updated.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"### Set Rover\u0027s Image","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"set roverImage path/to/rover.png (relative to the current directory)","lastModifiedDate":"2025-02-22T16:46:50","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"- Rover\u0027s profile picture used in the chat will be updated.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"## Exiting the Application","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"To exit the program, use:","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"**Example:**","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"```plaintext","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"bye","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"```","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"**Expected Outcome:**","lastModifiedDate":"2025-02-22T23:32:51","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"- The program closes safely.","lastModifiedDate":"2025-02-22T16:29:13","isFullCredit":false}],"authorContributionMap":{"kumar2215":147,"-":27}},{"path":"src/main/java/rover/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.task.Task;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" * Represents a command that adds a task to the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"public final class AddCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     * Constructs an add command with the given arguments.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    public AddCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     * Executes the add command to add a task to the task list.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            Task newTask \u003d parser.parseTaskDescription(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(newTask, ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"            if (e.getMessage().contains(\"date\")) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(\"The date format should be \u0027dd/mm/yy\u0027.\");","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"            if (e.getMessage().contains(\"time\")) {","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(\"The time format should be \u0027hh:mm\u0027.\");","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":43}},{"path":"src/main/java/rover/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.storage.Storage;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" * Represents a command that can be executed by the user.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"    protected final String args;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     * Constructs a command with the given arguments.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    public Command(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"        this.args \u003d args;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The task list to execute the command on.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * @param parser The parser to parse the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    public abstract void execute(TaskList taskList, Parser parser, Ui ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     * Executes the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The task list to execute the command on.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * @param storage The storage to save the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {}","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     * Returns true if the command is an exit command and is false by default.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     * Checks equality of commands based on their arguments.","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     * Returns true if the argument of the command is equal to the argument of the other command.","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        if (obj instanceof Command other) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"            return this.args.equals(other.args);","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false}],"authorContributionMap":{"kumar2215":62}},{"path":"src/main/java/rover/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskAction;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"public final class DeleteCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(6).trim());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"            int index \u003d parser.parseTaskNumber(args, taskList.getNumberOfTasks(), TaskAction.DELETE);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            taskList.deleteTask(index, ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":35}},{"path":"src/main/java/rover/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents a command that does nothing.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public final class EmptyCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Constructs an EmptyCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to be passed to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public EmptyCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Just displays an error message to the user.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        ui.displayError(\"Please enter a command.\");","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":28}},{"path":"src/main/java/rover/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public final class ExitCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments passed to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public ExitCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Executes nothing as the program is exiting.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * Returns true as the command is an exit command.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"        return true;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":34}},{"path":"src/main/java/rover/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":" * Represents a command to find tasks by keyword.","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"public class FindCommand extends ShowCommand {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"     * Constructor for a FindCommand.","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    public FindCommand(String args) {","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(4).trim());","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"     * Shows the tasks that contain the keyword.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T23:38:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    protected void show(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-02-02T20:00:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"The keyword to find cannot be empty.\");","lastModifiedDate":"2025-02-02T20:00:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"            return;","lastModifiedDate":"2025-02-02T20:00:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-02T20:00:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        taskList.showTasks(ui, (task, ignore) -\u003e task.toString().contains(args),","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            \"with the keyword \u0027\" + args + \"\u0027\");","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false}],"authorContributionMap":{"kumar2215":32}},{"path":"src/main/java/rover/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents an invalid command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public final class InvalidCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Constructs an InvalidCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public InvalidCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Displays the help message to the user.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        ui.showHelpMessage();","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":28}},{"path":"src/main/java/rover/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"public final class ListCommand extends ShowCommand {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to be passed to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    public ListCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    protected void show(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        taskList.showTasks(ui, (task, ignore) -\u003e true, \"in your list\");","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":28}},{"path":"src/main/java/rover/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskAction;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"public final class MarkCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public MarkCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(4).trim());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     * Marks a task as done in the task list.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"            int index \u003d parser.parseTaskNumber(args, taskList.getNumberOfTasks(), TaskAction.MARK_DONE);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            taskList.markTask(index, ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":35}},{"path":"src/main/java/rover/command/RetrySaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.storage.Storage;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" * Represents a command to retry saving the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"public final class RetrySaveCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     * Constructs a RetrySaveCommand.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     * @param args The user input arguments.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    public RetrySaveCommand(String args) {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {}","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     * Retries saving the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     * @param storage The storage.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        if (args.equals(\"y\") || args.equals(\"yes\")) {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"            storage.saveAll(taskList, ui.getUserPreferences(), ui);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"            ui.showMessage(\"Exiting without saving...\");","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     * Returns true if the user wants to exit the application.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        return args.equals(\"n\") || args.equals(\"no\");","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false}],"authorContributionMap":{"kumar2215":48}},{"path":"src/main/java/rover/command/SetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.PreferenceOption;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Gui;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import rover.ui.TextUi;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":" * Represents a command to set the user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"     * Creates a new SetCommand with the given arguments.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments for the command.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    public SetCommand(String args) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(3).trim());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * Executes the set command to set the given user preferences.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The task list to be operated on.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     * @param parser The parser to parse the user input.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        String[] preferences \u003d args.split(\" \");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        if (preferences.length \u003d\u003d 2) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"            preferences[0] \u003d preferences[0].trim();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"            preferences[1] \u003d preferences[1].trim();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"            PreferenceOption preferenceOption;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"            try {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"                preferenceOption \u003d parser.parsePreferenceOption(preferences[0]);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"            } catch (RoverException e) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(\"Invalid preference! Preference options can only be: name, userImage or roverImage \"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"                    + \"and the value should be a valid file path if setting image.\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"                return;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"            String optionName \u003d String.join(\" \", preferenceOption.name().split(\"_\")).toLowerCase();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            optionName \u003d optionName.substring(0, 1).toUpperCase() + optionName.substring(1);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"            if (ui instanceof TextUi \u0026\u0026 optionName.contains(\"image\")) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(String.format(\"%s cannot be set in text mode!\", optionName));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"                return;","lastModifiedDate":"2025-02-22T15:51:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"            boolean isSuccessful \u003d setOption(ui, preferenceOption, preferences[1]);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"            if (isSuccessful) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"                ui.showMessage(String.format(\"%s successfully set to %s\", optionName, preferences[1]));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"Invalid input! Please enter the command in the format: set [preference] [value]\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"    private boolean setOption(Ui ui, PreferenceOption preferenceOption, String value) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"        return switch (preferenceOption) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"        case NAME -\u003e ui.setUsername(value);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        case USER_IMAGE -\u003e ((Gui) ui).setUserImage(Paths.get(value));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        case ROVER_IMAGE -\u003e ((Gui) ui).setRoverImage(Paths.get(value));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        };","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":73}},{"path":"src/main/java/rover/command/ShowAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents a command to show tasks after a specified date.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public final class ShowAfterCommand extends ShowCommand {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Constructs a ShowAfterCommand.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @param args The date to show tasks after.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public ShowAfterCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(10).trim());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Shows the tasks after the specified date and/or time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    protected void show(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        taskList.showTasks(ui, (task, wasExceptionThrown) -\u003e {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"            try {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"                if (wasExceptionThrown.get()) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"                    return false;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"                return task.isAfter(args);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(\"The date format should be \u0027dd/mm/yy\u0027 and the time format should be \u0027hh:mm\u0027.\");","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"                wasExceptionThrown.set(true);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"                return false;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        }, \"after \" + args);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":39}},{"path":"src/main/java/rover/command/ShowBeforeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents a command to show tasks before a specified date.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public final class ShowBeforeCommand extends ShowCommand {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Constructs a ShowBeforeCommand.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public ShowBeforeCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(11).trim());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Shows the tasks before the specified date and/or time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    protected void show(TaskList taskList, Ui ui) {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        taskList.showTasks(ui, (task, wasExceptionThrown) -\u003e {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"            try {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"                if (wasExceptionThrown.get()) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"                    return false;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"                return task.isBefore(args);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"                ui.displayError(\"The date format should be \u0027dd/mm/yy\u0027 and the time format should be \u0027hh:mm\u0027.\");","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"                wasExceptionThrown.set(true);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"                return false;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        }, \"before \" + args);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":39}},{"path":"src/main/java/rover/command/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Abstract class for show commands.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public abstract class ShowCommand extends Command {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    public ShowCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"        super(args);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     * Executes the show command.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"        show(taskList, ui);","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     * Shows the task list.","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The task list to show.","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the task list.","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    protected abstract void show(TaskList taskList, Ui ui);","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":31}},{"path":"src/main/java/rover/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.command;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskAction;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"public final class UnmarkCommand extends Command {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * Constructs a new UnmarkCommand object.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public UnmarkCommand(String args) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        super(args.substring(6).trim());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     * Marks the task as not done in the task list.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    public void execute(TaskList taskList, Parser parser, Ui ui) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"            int index \u003d parser.parseTaskNumber(args, taskList.getNumberOfTasks(), TaskAction.MARK_UNDONE);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            taskList.unmarkTask(index, ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false}],"authorContributionMap":{"kumar2215":35}},{"path":"src/main/java/rover/exceptions/RoverException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.exceptions;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":" * RoverException is a custom exception class that extends the Exception class.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":" * It is used to throw exceptions when the rover chatBot is not able to function properly.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"public final class RoverException extends Exception {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"    public RoverException(String message) {","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"        super(message);","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     * Overridden toString method to include the class name in the exception message.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @return String","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    public String toString() {","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"        return \"RoverException: \" + this.getMessage();","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false}],"authorContributionMap":{"kumar2215":21}},{"path":"src/main/java/rover/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.main;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"        assert args !\u003d null : \"Arguments array should not be null\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":12}},{"path":"src/main/java/rover/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.main;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Gui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":" * A GUI for Rover using FXML.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    private final Rover rover \u003d new Rover();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"            stage.setTitle(\"Rover - Your Personal Task Manager\");","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"            fxmlLoader.\u003cGui\u003egetController().setRover(rover);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"            stage.show();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            rover.startSession();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":35}},{"path":"src/main/java/rover/main/Rover.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.main;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import rover.command.Command;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.parser.Parser;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.UserPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.storage.Storage;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import rover.ui.TextUi;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":" * Rover is a personal task manager that helps users keep track of their tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":" **/","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"public final class Rover {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T22:38:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    private static final String DEFAULT_TASKS_FILE_PATH \u003d \"data/Tasks.txt\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    private static final String DEFAULT_PREFERENCES_FILE_PATH \u003d \"data/Preferences.json\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    private UserPreferences userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    private Ui ui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * Creates a new Rover instance with the default file path.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    public Rover() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        this(DEFAULT_TASKS_FILE_PATH, DEFAULT_PREFERENCES_FILE_PATH);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T22:38:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     * Creates a new Rover instance by loading tasks from the specified file path.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * @param tasksFilePath The file path to save and load tasks from.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * @param preferencesFilePath The file path to save and load preferences from.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    private Rover(String tasksFilePath, String preferencesFilePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"        storage \u003d new Storage(tasksFilePath, preferencesFilePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"     * Sets the Ui instance for Rover.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"        this.userPreferences \u003d new UserPreferences(storage.loadPreferences(ui));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        this.ui.setUserPreferences(userPreferences);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"     * Starts the Rover session by displaying the welcome message.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"    public void startSession() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"            taskList \u003d new TaskList(ui, storage.loadTasks(ui));","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"Could not load saved tasks properly. Saved tasks could be corrupted.\");","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"     * Handles the response from Rover based on the user input.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"    public boolean handleResponse(String input) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"        Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"        command.execute(taskList, parser, ui);","lastModifiedDate":"2025-01-28T20:06:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"        return command.isExit();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"     * Ends the Rover session by saving the tasks and displaying the goodbye message.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    public void endSession() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"        storage.saveAll(taskList, userPreferences, ui);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        while (!storage.isSavedSuccessfully()) {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"Could not save tasks. Try again? (Y/N)\");","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"            Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"            command.execute(taskList, storage, ui);","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"            if (command.isExit()) {","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"                break;","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T21:18:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        ui.sayBye();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T22:49:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T22:49:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"     * Runs the Rover program.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"    private void run() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"        setUi(ui);","lastModifiedDate":"2025-02-22T15:51:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        startSession();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"        while (!isExit) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"            isExit \u003d handleResponse(ui.readCommand());","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"        endSession();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"     * Creates a new Rover instance and runs the program.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-21T23:35:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"        new Rover(DEFAULT_TASKS_FILE_PATH, DEFAULT_PREFERENCES_FILE_PATH).run();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"kumar2215":113,"-":2}},{"path":"src/main/java/rover/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.parser;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * A utility class for parsing date and time strings.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"public final class DateTimeParser {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    public static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"        \"yyyy/MM/dd\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"        \"yyyy-MM-dd\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"        \"dd-MM-yyyy\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        \"dd/MM/yyyy\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"        \"dd/MM/yy\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        \"dd-MM-yy\"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    };","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    public static final String[] TIME_FORMATS \u003d {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        \"HH:mm\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        \"HHmm\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        \"h:mma\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"        \"h.mma\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        \"hha\",","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        \"ha\"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    };","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"     * Parses a date and time string using the supported formats.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     * @param dateTimeString the date and time string to parse","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     * @return LocalDateTime object representing the parsed date and time","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException if the string cannot be parsed","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"        assert dateTimeString !\u003d null : \"Date and time string should not be null\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        for (String dateFormat : DATE_FORMATS) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"            for (String timeFormat : TIME_FORMATS) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"                String format \u003d dateFormat + \" \" + timeFormat;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"                try {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"                    return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"                    // Continue to the next formatter","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"        throw new DateTimeParseException(\"Unable to parse date and time: \" + dateTimeString, dateTimeString, 0);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"     * Parses a date string using the supported formats.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"     * @param dateString the date string to parse","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"     * @return LocalDate object representing the parsed date","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException if the string cannot be parsed","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    public static LocalDate parseDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        assert dateString !\u003d null : \"Date string should not be null\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"            try {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"                return LocalDate.parse(dateString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"                // Continue to the next formatter","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        throw new DateTimeParseException(\"Unable to parse date: \" + dateString, dateString, 0);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     * Parses a time string using the supported formats.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"     * @param timeString the time string to parse","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"     * @return LocalTime object representing the parsed time","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException if the string cannot be parsed","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    public static LocalTime parseTime(String timeString) throws DateTimeParseException {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"        assert timeString !\u003d null : \"Time string should not be null\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        for (String format : TIME_FORMATS) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"            try {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"                return LocalTime.parse(timeString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"                // Continue to the next formatter","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        throw new DateTimeParseException(\"Unable to parse time: \" + timeString, timeString, 0);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false}],"authorContributionMap":{"kumar2215":91}},{"path":"src/main/java/rover/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.parser;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.command.AddCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import rover.command.Command;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.command.DeleteCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.command.EmptyCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.command.ExitCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import rover.command.FindCommand;","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import rover.command.InvalidCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.command.ListCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import rover.command.MarkCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"import rover.command.RetrySaveCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"import rover.command.SetCommand;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"import rover.command.ShowAfterCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"import rover.command.ShowBeforeCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"import rover.command.UnmarkCommand;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.PreferenceOption;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"import rover.task.Deadline;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"import rover.task.Event;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"import rover.task.Task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskAction;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"import rover.task.Todo;","lastModifiedDate":"2025-01-28T23:34:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":" * Parser class to parse user input","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"public final class Parser {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    private boolean isPreviousCommandBye \u003d false;","lastModifiedDate":"2025-02-07T19:30:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     * Parses the user input and returns the corresponding command","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * @param args User input","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * @return Command object","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    public Command parseCommand(String args) {","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        String stdInput \u003d args.trim().toLowerCase();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        if (stdInput.isEmpty()) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"            return new EmptyCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.equals(\"bye\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"            isPreviousCommandBye \u003d true;","lastModifiedDate":"2025-02-07T19:30:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"            return new ExitCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        } else if (isPreviousCommandBye \u0026\u0026 (stdInput.equals(\"y\") || stdInput.equals(\"n\")","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"            || stdInput.equals(\"yes\") || stdInput.equals(\"no\"))) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"            return new RetrySaveCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.equals(\"list\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            return new ListCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"find\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"            return new FindCommand(args);","lastModifiedDate":"2025-01-29T23:13:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"mark\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"            return new MarkCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"unmark\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"            return new UnmarkCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"delete\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"set\")) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"            return new SetCommand(args);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"show before\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            return new ShowBeforeCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"show after\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"            return new ShowAfterCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        } else if (stdInput.startsWith(\"todo\") || stdInput.startsWith(\"deadline\") || stdInput.startsWith(\"event\")) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            return new AddCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"            return new InvalidCommand(args);","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     * Parses the preference option and returns the corresponding preference option","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"     * @param option Preference option specified by the user","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"     * @return Preference option","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the preference option is invalid","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    public PreferenceOption parsePreferenceOption(String option) throws RoverException {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"        return switch (option) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        case \"name\" -\u003e PreferenceOption.NAME;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"        case \"userImage\" -\u003e PreferenceOption.USER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"        case \"roverImage\" -\u003e PreferenceOption.ROVER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"        default -\u003e throw new RoverException(\"Invalid preference option\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"        };","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"     * Parses the task description and returns the corresponding task object","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"     * @param description Task description","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"     * @return Task object","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the task description is invalid","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException If the date and time format is invalid","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"    public Task parseTaskDescription(String description) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"        Task newTask;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        description \u003d description.trim();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"        if (description.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"            newTask \u003d new Deadline(description.substring(8).trim());","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"        } else if (description.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"            newTask \u003d new Event(description.substring(5).trim());","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"        } else if (description.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            newTask \u003d new Todo(description.substring(4).trim());","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"Not a valid task type.\");","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"        return newTask;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"     * Parses the task number and returns the corresponding task index","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"     * @param taskNumber Task number","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"     * @param numberOfTasks Number of tasks","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"     * @param taskAction Task action used to determine error message","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"     * @return Task index","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the task number is invalid","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"    public int parseTaskNumber(String taskNumber, int numberOfTasks, TaskAction taskAction) throws RoverException {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"        String action \u003d getAction(taskAction);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"        int index \u003d getIndex(taskNumber, action);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"        checkValidIndex(numberOfTasks, index, action);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        return index;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"    private String getAction(TaskAction taskAction) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"        return switch (taskAction) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"        case MARK_DONE -\u003e \"marked as done\";","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        case MARK_UNDONE -\u003e \"marked as not done\";","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"        case DELETE -\u003e \"deleted\";","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"        default -\u003e throw new AssertionError(\"Invalid task action\");","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"        };","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"    private int getIndex(String taskNumber, String action) throws RoverException {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"        if (taskNumber.isEmpty()) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"Please specify the task number to be \" + action + \".\");","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"        int index;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"            index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"Please specify a valid task number to be \" + action + \".\");","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"        return index;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"    private void checkValidIndex(int numberOfTasks, int index, String action) throws RoverException {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        if (index \u003c 0 || index \u003e\u003d numberOfTasks) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"Please specify a valid task number to be \" + action + \".\\n\"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"                + \"You only have \" + numberOfTasks + \" tasks in total.\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false}],"authorContributionMap":{"kumar2215":156}},{"path":"src/main/java/rover/preferences/PreferenceOption.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.preferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":" * Represents the options for user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"public enum PreferenceOption {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"    NAME,","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"    USER_IMAGE,","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"    ROVER_IMAGE","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":10}},{"path":"src/main/java/rover/preferences/UserPreferences.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.preferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents the user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public class UserPreferences {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    private ObjectNode jsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * Creates a new UserPreferences object with default values.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public UserPreferences() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"        this.jsonNode \u003d objectMapper.createObjectNode();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        this.jsonNode.put(\"name\", \"\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"        this.jsonNode.put(\"userImage\", \"default\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"        this.jsonNode.put(\"roverImage\", \"default\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     * Creates a new UserPreferences object.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * @param jsonNode The JSON node representing the user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    public UserPreferences(ObjectNode jsonNode) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        this();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"        if (jsonNode !\u003d null) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"            this.jsonNode \u003d jsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * Sets the name of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"     * @param name The name of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"     * @return True if the name is successfully set, false otherwise.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    public boolean setName(String name) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"        jsonNode.put(\"name\", name);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"        return jsonNode.get(\"name\").asText().equals(name);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"     * Sets the image of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     * @param userImagePath The path to the image of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"     * @return True if the image is successfully set, false otherwise.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    public boolean setUserImage(String userImagePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"        jsonNode.put(\"userImage\", userImagePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"        return jsonNode.get(\"userImage\").asText().equals(userImagePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"     * Sets the image of the rover.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"     * @param roverImagePath The path to the image of the rover.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"     * @return True if the image is successfully set, false otherwise.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"    public boolean setRoverImage(String roverImagePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        jsonNode.put(\"roverImage\", roverImagePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"        return jsonNode.get(\"roverImage\").asText().equals(roverImagePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"     * Returns the JSON node representing the user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"     * @return The JSON node representing the user preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"    public JsonNode getJsonNode() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"        return jsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":78}},{"path":"src/main/java/rover/storage/JsonFileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.storage;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.io.File;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * Represents a writer that writes tasks to a JSON file.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"public class JsonFileManager {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    private final ObjectMapper objectMapper;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     * Creates a new JsonFileManager object.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public JsonFileManager() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        this.objectMapper \u003d new ObjectMapper();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     * Loads the JSON node from the specified file path.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     * @param preferencesFilePath The file path to load the JSON node from.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     * @return The JSON node loaded from the file path.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    public JsonNode load(String preferencesFilePath) throws IOException {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        return objectMapper.readTree(new File(preferencesFilePath));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     * Writes the specified JSON node to the specified file path.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * @param jsonNode The JSON node to write.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * @param preferencesFilePath The file path to write the JSON node to.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    public void write(JsonNode jsonNode, String preferencesFilePath) throws IOException {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        objectMapper.writeValue(new File(preferencesFilePath), jsonNode);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":45}},{"path":"src/main/java/rover/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.storage;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-02-08T22:49:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-08T22:49:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.UserPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import rover.task.Task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskList;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":" * Handles the storage of the tasks in the file system.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"public final class Storage {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    private final Path tasksFilePath;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    private final Path preferencesFilePath;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    private boolean isTasksSaved \u003d false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    private boolean isPreferencesSaved \u003d false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    private final JsonFileManager jsonFileManager \u003d new JsonFileManager();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     * Returns a new Storage object with the specified file path.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"     * @param tasksFilePath The file path to save and load tasks from.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"     * @param preferencesFilePath The file path to save and load preferences from.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    public Storage(String tasksFilePath, String preferencesFilePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        String cwd \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        this.tasksFilePath \u003d Paths.get(cwd, tasksFilePath.split(\"/\"));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        this.preferencesFilePath \u003d Paths.get(cwd, preferencesFilePath.split(\"/\"));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     * Loads the tasks from the file system.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     * @param ui The Ui object to display messages.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"     * @return An array of strings representing the tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    public String[] loadTasks(Ui ui) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T21:23:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"            boolean fileExists \u003d Files.exists(tasksFilePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"            if (!fileExists) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"                return new String[0];","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"            } else {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"                Stream\u003cString\u003e lines \u003d Files.lines(tasksFilePath).filter(line -\u003e !line.isBlank());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"                String[] tasks \u003d lines.toArray(String[]::new);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"                lines.close();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"                return tasks;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28T21:23:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"Failed to load tasks.\");","lastModifiedDate":"2025-01-28T21:23:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"            return new String[0];","lastModifiedDate":"2025-01-28T21:23:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T21:23:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"     * Loads the preferences from the file system.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"     * @param ui The Ui object to display messages.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"     * @return The JSON node representing the preferences.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    public ObjectNode loadPreferences(Ui ui) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"            boolean fileExists \u003d Files.exists(preferencesFilePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"            if (!fileExists) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"                return (ObjectNode) (new UserPreferences()).getJsonNode();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"            return (ObjectNode) jsonFileManager.load(preferencesFilePath.toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(\"Failed to load preferences.\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"            return (ObjectNode) (new UserPreferences()).getJsonNode();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"     * Saves tasks and preferences to the file system.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The TaskList object containing the tasks to be saved.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"     * @param userPreferences The UserPreferences object containing the preferences to be saved.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"     * @param ui The Ui object to display messages.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"    public void saveAll(TaskList taskList, UserPreferences userPreferences, Ui ui) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        assert taskList !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"        assert userPreferences !\u003d null : \"UserPreferences should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"        String response \u003d \"Saving your tasks...\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"        response +\u003d NEW_LINE + (isTasksSaved ? \"Tasks saved successfully!\" : \"Failed to save tasks.\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"        response +\u003d NEW_LINE + \"Saving your preferences...\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        savePreferences(userPreferences);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"        response +\u003d NEW_LINE + (isPreferencesSaved ? \"Preferences saved successfully!\" : \"Failed to save preferences.\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"        if (isTasksSaved \u0026\u0026 isPreferencesSaved) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"            ui.showMessageWithoutLineSeparator(response);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            ui.displayError(response);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"     * Saves the tasks to the file system and updates the isSaved field.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"     * @param taskList The TaskList object containing the tasks to be saved.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"    private void saveTasks(TaskList taskList) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"        assert taskList !\u003d null : \"TaskList should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"            Files.createDirectories(tasksFilePath.getParent());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"            Files.deleteIfExists(tasksFilePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"            Files.createFile(tasksFilePath);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"            String tasksString \u003d taskList.getTasks().stream()","lastModifiedDate":"2025-02-08T22:49:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"                .map(Task::getTaskString)","lastModifiedDate":"2025-02-08T22:49:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2025-02-08T22:49:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"            Files.writeString(tasksFilePath, tasksString, StandardOpenOption.WRITE);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"            isTasksSaved \u003d true;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"            isTasksSaved \u003d false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T11:36:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"     * Saves the preferences to the file system and updates the isSaved field.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"     * @param userPreferences The UserPreferences object containing the preferences to be saved.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"    private void savePreferences(UserPreferences userPreferences) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"        assert userPreferences !\u003d null : \"UserPreferences should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"            jsonFileManager.write(userPreferences.getJsonNode(), preferencesFilePath.toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"            isPreferencesSaved \u003d true;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"            isPreferencesSaved \u003d false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"     * Returns whether the tasks were saved successfully.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"     * @return True if the tasks were saved successfully, false otherwise.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"    public boolean isSavedSuccessfully() {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        return isTasksSaved \u0026\u0026 isPreferencesSaved;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false}],"authorContributionMap":{"kumar2215":153}},{"path":"src/main/java/rover/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.parser.DateTimeParser;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":" * Represents a deadline task that can be added to the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":" * A deadline task has a description, a status that indicates whether it is done, and a deadline.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"public final class Deadline extends Task {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    private LocalDate byDate;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    private LocalTime byTime;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    private String by;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    private String byFullFormat;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     * Constructs a deadline task with the given description.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is not in the correct format.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"    public Deadline(String description) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"        this(description, null);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     * Constructs a deadline task with the given description.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     * * The description must be in the format \"task /by (deadline)\".","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     * The deadline can be a date, time, or date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * If the deadline is a date, the time will be set to 00:00.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * If the deadline is a time, the date will be set to the current date.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     * If the deadline is a date and time, the date and time will be set accordingly.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     * @param ui The ui object to display messages.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is not in the correct format.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    public Deadline(String description, Ui ui) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        super(description);","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        setByAndDescription(description);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"        setByDateAndTime(ui);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"        setByFullFormat();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"    private void setByAndDescription(String description) throws RoverException {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d description.split(\" /by \");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2025-01-23T01:08:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"A deadline task must be a task followed with \u0027/by (deadline)\u0027.\");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        this.by \u003d parts[1];","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    private void setByDateAndTime(Ui ui) throws DateTimeParseException, RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        String[] dateAndTime \u003d by.split(\" \");","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"        if (dateAndTime.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"            // Deadline is a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"            // The case where only time is given is omitted as it doesn\u0027t make sense","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"            // to create a deadline task on the same day with only a time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            this.byDate \u003d DateTimeParser.parseDate(dateAndTime[0]);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"            this.byTime \u003d LocalTime.MAX; // Set to the end of the day","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"            if (byDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"                handleOverDue(ui, String.format(\"The following deadline: %s is overdue.\", this.description),","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"                        \"The deadline cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"        } else {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"            // Deadline is a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"            this.byDate \u003d DateTimeParser.parseDate(dateAndTime[0]);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"            this.byTime \u003d DateTimeParser.parseTime(dateAndTime[1]);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"            if (byDate.isBefore(LocalDate.now()) || (byDate.isEqual(LocalDate.now())","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 byTime.isBefore(LocalTime.now()))) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"                handleOverDue(ui, String.format(\"The following deadline: %s is overdue.\", this.description),","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"                        \"The deadline cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"    private void handleOverDue(Ui ui, String warning, String error) throws RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"            ui.showMessage(warning);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"            return;","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"        throw new RoverException(error);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"    private void setByFullFormat() {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"        this.byFullFormat \u003d byDate.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMMM, yyyy\"));","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"        this.byFullFormat +\u003d \" \" + byTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")).toLowerCase();","lastModifiedDate":"2025-02-14T15:43:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due before the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"    public boolean isBefore(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            try { // Interpret as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"                LocalDate otherDate \u003d DateTimeParser.parseDate(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"                return byDate.isBefore(otherDate);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"                // Interpret as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"                LocalDateTime otherTime \u003d DateTimeParser.parseDateTime(LocalDate.now() + \" \" + dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"                return byDate.atTime(byTime).isBefore(otherTime);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"        } else { // Interpret as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"            LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"            return byDate.atTime(byTime).isBefore(otherDateTime);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due after the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"    public boolean isAfter(String dateTime) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"            try { // Interpret as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"                LocalDate otherDate \u003d DateTimeParser.parseDate(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"                return byDate.isAfter(otherDate);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"                // Interpret as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"                LocalDateTime otherTime \u003d DateTimeParser.parseDateTime(LocalDate.now() + \" \" + dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"                return byDate.atTime(byTime).isAfter(otherTime);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"        } else { // Interpret as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"            LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"            return byDate.atTime(byTime).isAfter(otherDateTime);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"     * Compares this deadline task with the specified object for equality.","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"        if (obj instanceof Deadline other) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"            return this.description.equals(other.description) \u0026\u0026 this.byDate.equals(other.byDate)","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 this.byTime.equals(other.byTime);","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"     * Returns the description of the deadline task for saving to the file.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" /by \" + by;","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byFullFormat + \")\";","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false}],"authorContributionMap":{"kumar2215":168}},{"path":"src/main/java/rover/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.parser.DateTimeParser;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":" * Represents an event task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":" * An event task is a task that has a start date and/or time and an end date and/or time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"public final class Event extends Task {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    private LocalDate startDate;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    private LocalTime startTime;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    private LocalDate endDate;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    private LocalTime endTime;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    private String start;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    private String end;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    private String fromToFullFormat;","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"     * Constructs an event task with the given description.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is not in the correct format or the start date and time is after","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     *      the end date and time.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    public Event(String description) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        this(description, null);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     * Constructs an event task with the given description.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"     * The description must be in the format \"task /from (start) /to (end)\".","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"     * The start and end can be a date, time, or date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"     * If the start or end is a date, the time will be set to 00:00.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     * If the start or end is a time, the date will be set to the current date.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     * If the start or end is a date and time, the date and time will be set accordingly.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     * The start date and time must be before the end date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"     * @param ui The ui object to display messages.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is not in the correct format or the start date and time is after","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"     *      the end date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"    public Event(String description, Ui ui) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        super(description);","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"        setStartAndEnd();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        setStartDateAndTime(ui);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"        setEndDateAndTime(ui);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"        checkIfEndIsAfterStart();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        setFromToFullFormat();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"    private void setFromToFullFormat() {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        fromToFullFormat \u003d \"from \"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"            + startDate.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMMM, yyyy\")) + \" \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            + startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")).toLowerCase() + \" to \"","lastModifiedDate":"2025-02-14T15:43:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"            + endDate.format(DateTimeFormatter.ofPattern(\"EEEE, dd MMMM, yyyy\")) + \" \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"            + endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")).toLowerCase();","lastModifiedDate":"2025-02-14T15:43:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    private void checkIfEndIsAfterStart() throws RoverException {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        if (startDate.isAfter(endDate) || (startDate.isEqual(endDate) \u0026\u0026 startTime.isAfter(endTime))) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"The start date and time must be before the end date and time.\");","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"    private void setStartAndEnd() throws RoverException {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d description.split(\" /from \");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"        this.description \u003d parts[0];","lastModifiedDate":"2025-01-23T01:08:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"        String[] parts2 \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"        if (parts2.length !\u003d 2) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"        this.start \u003d parts2[0];","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"        this.end \u003d parts2[1];","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"    private void setStartDateAndTime(Ui ui) throws DateTimeParseException, RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        try { // Try to parse the start as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"            startDate \u003d DateTimeParser.parseDateTime(start).toLocalDate();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"            startTime \u003d DateTimeParser.parseDateTime(start).toLocalTime();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"            if (startDate.isBefore(LocalDate.now()) || (startDate.isEqual(LocalDate.now())","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 startTime.isBefore(LocalTime.now()))) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"                handleOverDue(ui, String.format(\"The following event: %s has already transpired.\", this.description),","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"                    \"The start date and time cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"            try { // Try to parse the start as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"                this.startDate \u003d DateTimeParser.parseDate(start);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"                this.startTime \u003d LocalTime.of(0, 0);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"                if (startDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"                    handleOverDue(ui, String.format(\"The following event: %s has already transpired.\",","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"                            this.description), \"The start date cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"                // Try to parse the start as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"                this.startDate \u003d LocalDate.now();","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"                this.startTime \u003d DateTimeParser.parseTime(start);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"                if (startTime.isBefore(LocalTime.now())) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"                    handleOverDue(ui, String.format(\"The following event: %s has already transpired.\",","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"                            this.description), \"The start time cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"    private void setEndDateAndTime(Ui ui) throws DateTimeParseException, RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"        try { // Try to parse the end as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"            endDate \u003d DateTimeParser.parseDateTime(end).toLocalDate();","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"            endTime \u003d DateTimeParser.parseDateTime(end).toLocalTime();","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"            if (endDate.isBefore(LocalDate.now()) || (endDate.isEqual(LocalDate.now())","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 endTime.isBefore(LocalTime.now()))) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"                handleOverDue(ui, String.format(\"The following event: %s has already transpired.\", this.description),","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"                    \"The end date and time cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"            try { // Try to parse the end as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"                endDate \u003d startDate;","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"                endTime \u003d DateTimeParser.parseTime(end);","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"                if (startDate.equals(LocalDate.now()) \u0026\u0026 endTime.isBefore(LocalTime.now())) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"                    handleOverDue(ui, String.format(\"The following event: %s has already transpired.\",","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"                            this.description), \"The end time cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"                // Try to parse the end as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"                endDate \u003d DateTimeParser.parseDate(end);","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"                endTime \u003d LocalTime.of(23, 59);","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"                if (endDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"                    handleOverDue(ui, String.format(\"The following event: %s has already transpired.\",","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"                            this.description), \"The end date cannot be in the past.\");","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"                }","lastModifiedDate":"2025-02-22T21:58:54","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"    private void handleOverDue(Ui ui, String warning, String error) throws RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"        if (ui !\u003d null) {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"            ui.showMessage(warning);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"            return;","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        throw new RoverException(error);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due before the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"     * Event tasks are due before the start date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"    public boolean isBefore(String dateTime) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"            try { // Interpret as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"                LocalDate otherDate \u003d DateTimeParser.parseDate(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"                return startDate.isBefore(otherDate);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"                // Interpret as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"                LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(LocalDate.now() + \" \" + dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"                return startDate.atTime(startTime).isBefore(otherDateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"        } else { // Interpret as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"            LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kumar2215"},"content":"            return startDate.atTime(startTime).isBefore(otherDateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due after the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kumar2215"},"content":"     * Event tasks are due before the end date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kumar2215"},"content":"    public boolean isAfter(String dateTime) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kumar2215"},"content":"        String[] parts \u003d dateTime.split(\" \");","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kumar2215"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kumar2215"},"content":"            try { // Interpret as a date only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kumar2215"},"content":"                LocalDate otherDate \u003d DateTimeParser.parseDate(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kumar2215"},"content":"                return startDate.isAfter(otherDate);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kumar2215"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kumar2215"},"content":"                // Interpret as a time only","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kumar2215"},"content":"                LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(LocalDate.now() + \" \" + dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kumar2215"},"content":"                return startDate.atTime(startTime).isAfter(otherDateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kumar2215"},"content":"        } else { // Interpret as a date and time","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kumar2215"},"content":"            LocalDateTime otherDateTime \u003d DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kumar2215"},"content":"            return startDate.atTime(startTime).isAfter(otherDateTime);","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kumar2215"},"content":"     * Compares this event task with the specified object for equality.","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kumar2215"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kumar2215"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kumar2215"},"content":"        if (obj instanceof Event other) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kumar2215"},"content":"            return this.description.equals(other.description) \u0026\u0026 this.startDate.equals(other.startDate)","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 this.startTime.equals(other.startTime) \u0026\u0026 this.endDate.equals(other.endDate)","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kumar2215"},"content":"                    \u0026\u0026 this.endTime.equals(other.endTime);","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kumar2215"},"content":"     * Returns the description of the task for saving to the file.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kumar2215"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kumar2215"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" /from \" + start + \" /to \" + end;","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kumar2215"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kumar2215"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kumar2215"},"content":"        return \"[E]\" + super.toString() + \" (\" + fromToFullFormat + \")\";","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false}],"authorContributionMap":{"kumar2215":227}},{"path":"src/main/java/rover/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" * Represents a task that can be added to the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":" * A task has a description and a status that indicates whether it is done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"public abstract sealed class Task permits Todo, Deadline, Event {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    protected String description;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     * Constructor for a task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is empty.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    public Task(String description) throws RoverException {","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"        if (this.description.isEmpty()) {","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    public void setDone() {","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     * Marks the task as undone.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    public void setUndone() {","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"     * Returns the description of the task for saving to the file.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"    public abstract String getTaskString();","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due before the given date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"     * @param dateTime The date and time to compare with.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"     * @return True if the task is due before the given date and time, false otherwise.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException If the date and time is in the wrong format.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    public abstract boolean isBefore(String dateTime) throws DateTimeParseException;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due after the given date and time.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"     * @param dateTime The date and time to compare with.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"     * @return True if the task is due after the given date and time, false otherwise.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException If the date and time is in the wrong format.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    public abstract boolean isAfter(String dateTime) throws DateTimeParseException;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"    public String toString() {","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-21T23:20:35","isFullCredit":false}],"authorContributionMap":{"kumar2215":81}},{"path":"src/main/java/rover/task/TaskAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":" * Represents the actions that can be performed on a task given by its index.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"public enum TaskAction {","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"    MARK_DONE,","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"    MARK_UNDONE,","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"    DELETE","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-23T01:28:25","isFullCredit":false}],"authorContributionMap":{"kumar2215":10}},{"path":"src/main/java/rover/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.util.concurrent.atomic.AtomicBoolean;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":" * Represents a list of tasks that can be added to, marked, unmarked, deleted, and displayed.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"public final class TaskList {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    private static final String DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Returns an empty task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     * Returns a task list with the tasks from the given array of task strings.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display messages.","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"     * @param taskStrings The array of task strings to be converted to tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If there is a possible corruption in the saved tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     * @throws DateTimeParseException If the date and time format is incorrect.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"    public TaskList(Ui ui, String ...taskStrings) throws RoverException, DateTimeParseException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        assert taskStrings !\u003d null : \"Task strings should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"        for (String taskString : taskStrings) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"            String[] parts \u003d taskString.split(DELIMITER);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"                throw new RoverException(\"Possible corruption in saved tasks.\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"            Task newTask \u003d getTask(ui, parts);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"            tasks.add(newTask);","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"            taskCount++;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     * Returns a task based on the given parts of the task string.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"     * @param parts The parts of the task string.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"     * @return The task based on the parts.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If there is a possible corruption in the saved tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"    private Task getTask(Ui ui, String ...parts) throws RoverException {","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        assert parts !\u003d null : \"Parts should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"        Task newTask;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        case \"T\" -\u003e newTask \u003d new Todo(parts[2]);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        case \"D\" -\u003e newTask \u003d new Deadline(parts[2], ui);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"        case \"E\" -\u003e newTask \u003d new Event(parts[2], ui);","lastModifiedDate":"2025-02-22T22:48:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"        default -\u003e throw new RoverException(\"Possible corruption in saved tasks.\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            newTask.setDone();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"        } else if (!parts[1].equals(\"0\")) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"Possible corruption in saved tasks.\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        return newTask;","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"        return this.tasks;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"        return this.taskCount;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"     * Displays all the tasks that match the given predicate.","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the tasks.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"     * @param predicate The predicate to filter the tasks.","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"     * @param filterDescription The description of the filter.","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"    public void showTasks(Ui ui, BiFunction\u003cTask, AtomicBoolean, Boolean\u003e predicate, String filterDescription) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"        assert predicate !\u003d null : \"Predicate should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        assert filterDescription !\u003d null : \"Filter description should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"        assert !filterDescription.isEmpty() : \"Filter description should not be empty.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"        AtomicBoolean wasExceptionThrown \u003d new AtomicBoolean(false);","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream().filter(task -\u003e predicate.apply(task, wasExceptionThrown)).toList();","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"        if (wasExceptionThrown.get()) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"            return;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        String response \u003d getStringOfFilteredTasks(filteredTasks, filterDescription);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"        ui.showMessage(response);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"    private String getStringOfFilteredTasks(List\u003cTask\u003e filteredTasks, String filterDescription) {","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            return \"There are no tasks \" + filterDescription + \".\";","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks \" + filterDescription + \":\" + NEW_LINE);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2025-01-30T02:21:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"            response.append((i + 1)).append(\". \").append(filteredTasks.get(i));","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"            if (i !\u003d filteredTasks.size() - 1) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"                response.append(NEW_LINE);","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"        return response.toString();","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the added task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the task already exists in the list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"    public void addTask(Task newTask, Ui ui) throws RoverException {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        assert newTask !\u003d null : \"Task should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"        if (tasks.contains(newTask)) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"            throw new RoverException(\"This task already exists in the list.\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        taskCount++;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"Got it%s. I\u0027ve added this task:\", ui.getUsername()) + NEW_LINE","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"            + \"  \" + newTask + NEW_LINE","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"            + \"Now you have \" + taskCount + \" task\"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"            + (taskCount \u003e 1 ? \"s\" : \"\") + \" in the list.\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"        ui.showMessage(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the tasks found.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"    public void markTask(int index, Ui ui) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"        assert index \u003c taskCount : \"Index should be less than the number of tasks.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"        task.setDone();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"Nice%s! I\u0027ve marked this task as done:\", ui.getUsername()) + NEW_LINE + task;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"        ui.showMessage(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"     * Marks a task in the task list as undone.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the tasks found.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"    public void unmarkTask(int index, Ui ui) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"        assert index \u003c taskCount : \"Index should be less than the number of tasks.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"        task.setUndone();","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"Alright%s, I\u0027ve marked this task as not done yet:\", ui.getUsername())","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"            + NEW_LINE + task;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"        ui.showMessage(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kumar2215"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kumar2215"},"content":"     * @param ui The user interface to display the deleted task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kumar2215"},"content":"    public void deleteTask(int index, Ui ui) {","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kumar2215"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kumar2215"},"content":"        assert index \u003c taskCount : \"Index should be less than the number of tasks.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kumar2215"},"content":"        assert ui !\u003d null : \"Ui should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kumar2215"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kumar2215"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kumar2215"},"content":"        taskCount--;","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"Noted%s. I\u0027ve removed this task:\", ui.getUsername()) + NEW_LINE + task","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kumar2215"},"content":"            + NEW_LINE + \"Now you have \" + taskCount + \" task\"","lastModifiedDate":"2025-02-08T22:29:32","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kumar2215"},"content":"            + (taskCount \u003e 1 ? \"s\" : \"\") + \" in the list.\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kumar2215"},"content":"        ui.showMessage(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false}],"authorContributionMap":{"kumar2215":190}},{"path":"src/main/java/rover/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":" * Represents a todo task that can be added to the task list.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":" * A todo task has a description and a status that indicates whether it is done.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"public final class Todo extends Task {","lastModifiedDate":"2025-02-03T00:59:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"     * Constructor for a todo task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"     * @throws RoverException If the description is empty.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public Todo(String description) throws RoverException {","lastModifiedDate":"2025-01-23T00:28:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        super(description);","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due before the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     * Todo tasks do not have a date and time and will always return false.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"     * @param dateTime The date and time to compare with.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    public boolean isBefore(String dateTime) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"     * Checks if the task is due after the given date and time.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"     * Todo tasks do not have a date and time and will always return false.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"     * @param dateTime The date and time to compare with.","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    public boolean isAfter(String dateTime) {","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T12:52:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     * Compares this todo task with the specified object for equality.","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        if (obj instanceof Todo other) {","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            return this.description.equals(other.description);","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"        return false;","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-20T22:21:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"     * Returns the description of the task for saving to the file.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"    public String getTaskString() {","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-27T23:17:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-22T13:49:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    public String toString() {","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-22T18:41:19","isFullCredit":false}],"authorContributionMap":{"kumar2215":72}},{"path":"src/main/java/rover/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.ui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"        assert text !\u003d null : \"Text should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"        assert img !\u003d null : \"Image should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    private void flip() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"     * Converts the dialog box to an error dialog box.","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"    private void convertToErrorDialog() {","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"    public static DialogBox getRoverDialog(String text, Image img) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-21T01:55:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        db.flip();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"        return db;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        DialogBox db \u003d getRoverDialog(text, img);","lastModifiedDate":"2025-02-21T01:55:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"        db.convertToErrorDialog();","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"        return db;","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":75}},{"path":"src/main/java/rover/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.ui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import java.util.Timer;","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.util.TimerTask;","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"import rover.main.Rover;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.UserPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"public final class Gui extends AnchorPane implements Ui {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    private static final Image DEFAULT_USER_IMAGE \u003d new Image(Gui.class.getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    private static final Image DEFAULT_ROVER_IMAGE \u003d new Image(Gui.class.getResourceAsStream(\"/images/Rover.png\"));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    private Rover rover;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    private Image userImage;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"    private Image roverImage;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"    private String username;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    private UserPreferences userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"     * Initializes the GUI.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"     * Gets the UserPreferences instance.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     * @return The UserPreferences instance.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    public UserPreferences getUserPreferences() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        return userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"     * Injects the UserPreferences instance.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"     * @param userPreferences The UserPreferences instance.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"    public void setUserPreferences(UserPreferences userPreferences) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"        assert userPreferences !\u003d null : \"User preferences should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"        this.userPreferences \u003d userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        JsonNode name \u003d userPreferences.getJsonNode().get(\"name\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"        this.username \u003d name.asText().isEmpty() ? \"\" : \" \" + name.asText();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"        setUserImage(Path.of(userPreferences.getJsonNode().get(\"userImage\").asText()));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        setRoverImage(Path.of(userPreferences.getJsonNode().get(\"roverImage\").asText()));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"     * Injects the Rover instance","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"    public void setRover(Rover r) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"        rover \u003d r;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"        rover.setUi(this);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"     * Gets the username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"     * @return The username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"    public String getUsername() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"        return username;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"     * Sets the username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"     * @param username The username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"    public boolean setUsername(String username) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"        assert username !\u003d null : \"Username should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"        assert !username.isBlank() : \"Username should not be blank.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        this.username \u003d \" \" + username;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"        return userPreferences.setName(username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"     * Sets the image of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"     * @param userImagePath The path to the image of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"    public boolean setUserImage(Path userImagePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"        if (userImagePath.toString().equals(\"default\")) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"            userImage \u003d DEFAULT_USER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"            return false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"        } else if (!Files.exists(userImagePath)) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"            displayError(String.format(\"File %s not found at the specified path. \"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"                + \"Using default user image.\", userImagePath));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"            userImage \u003d DEFAULT_USER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"            return false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"        userImage \u003d new Image(userImagePath.toUri().toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"        return userPreferences.setUserImage(userImagePath.toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"     * Sets the image of the rover.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"     * @param roverImagePath The path to the image of the rover.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"    public boolean setRoverImage(Path roverImagePath) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"        if (roverImagePath.toString().equals(\"default\")) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"            roverImage \u003d DEFAULT_ROVER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"            return false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        } else if (!Files.exists(roverImagePath)) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"            displayError(String.format(\"File %s not found at the specified path. \"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"                + \"Using default rover image.\", roverImagePath));","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"            roverImage \u003d DEFAULT_ROVER_IMAGE;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"            return false;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"        roverImage \u003d new Image(roverImagePath.toUri().toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"        return userPreferences.setRoverImage(roverImagePath.toString());","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"     * Shows the response from the user in the dialog container.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"    private void showUserResponse() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"        assert dialogContainer !\u003d null : \"Dialog container should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"            DialogBox.getUserDialog(userInput.getText(), userImage)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"        );","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"     * Shows the response from Rover in the dialog container.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"     * @param response The response from Rover.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"    private void showRoverResponse(String response) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"        assert dialogContainer !\u003d null : \"Dialog container should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"            DialogBox.getRoverDialog(response, roverImage)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"        );","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"     * Reads the user\u0027s input.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"        assert userInput !\u003d null : \"User input should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"        return userInput.getText();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kumar2215"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Rover\u0027s reply and then appends them to","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kumar2215"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kumar2215"},"content":"    @FXML","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kumar2215"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kumar2215"},"content":"        String input \u003d readCommand();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kumar2215"},"content":"        showUserResponse();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kumar2215"},"content":"        assert rover !\u003d null : \"Rover should not be null.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kumar2215"},"content":"        boolean isExit \u003d rover.handleResponse(input);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kumar2215"},"content":"        if (isExit) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kumar2215"},"content":"            rover.endSession();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kumar2215"},"content":"     * Displays the welcome message when the program starts.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kumar2215"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"\"\"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kumar2215"},"content":"            Hello%s! I\u0027m Rover","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kumar2215"},"content":"            I am your personal task manager.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kumar2215"},"content":"            What can I do for you?","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kumar2215"},"content":"            \"\"\", username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kumar2215"},"content":"        showRoverResponse(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kumar2215"},"content":"     * Displays the goodbye message when the program ends.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kumar2215"},"content":"     * Part of the code was taken from a StackOverflow answer given by Jason C.","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kumar2215"},"content":"     * source: \u003ca href\u003d\"https://stackoverflow.com/questions/21974415/how-to-close-this-javafx","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kumar2215"},"content":"     * -application-after-showing-a-message-in-a-text-area-elem\"\u003e...\u003c/a\u003e","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kumar2215"},"content":"     * Thanks to Jason C. for the original code.","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kumar2215"},"content":"     * Thanks to @zuoshihua for pointing out the issue with the original code.","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kumar2215"},"content":"     * Thanks to @ChinZJ for the fix to use new Timer(true) instead.","lastModifiedDate":"2025-02-22T13:30:39","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kumar2215"},"content":"    public void sayBye() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kumar2215"},"content":"        String response \u003d String.format(\"Bye%s. Hope to see you again soon!\", username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kumar2215"},"content":"        showRoverResponse(response);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kumar2215"},"content":"        new Timer(true).schedule(new TimerTask() {","lastModifiedDate":"2025-02-08T11:36:21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kumar2215"},"content":"            public void run() {","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kumar2215"},"content":"                Platform.exit();","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kumar2215"},"content":"            }","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kumar2215"},"content":"        }, 2000);","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kumar2215"},"content":"     * Displays the help message when the user types an invalid command.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kumar2215"},"content":"    public void showHelpMessage() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kumar2215"},"content":"        String briefHelp \u003d String.format(\"\"\"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kumar2215"},"content":"                        I\u0027m sorry%s, but I don\u0027t know what that means.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kumar2215"},"content":"                        The following commands are supported:","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kumar2215"},"content":"                            You can add a task by typing:","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kumar2215"},"content":"                            - todo (description)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kumar2215"},"content":"                            - deadline (description) /by (deadline)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kumar2215"},"content":"                            - event (description) /from (start) /to (end)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kumar2215"},"content":"                            You can set your preferences by typing \u0027set (preference) (value)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kumar2215"},"content":"                            To set your name, type \u0027set name (your name)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kumar2215"},"content":"                            To set your user image, type \u0027set userImage (path to image)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kumar2215"},"content":"                            To set Rover\u0027s image, type \u0027set roverImage (path to image)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kumar2215"},"content":"                            List the existing tasks by typing \u0027list\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kumar2215"},"content":"                            Mark a task as done by typing \u0027mark (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kumar2215"},"content":"                            Mark a task as not done by typing \u0027unmark (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kumar2215"},"content":"                            Delete a task by typing \u0027delete (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kumar2215"},"content":"                            Find tasks with a certain keyword by typing \u0027find (keyword)\u0027.","lastModifiedDate":"2025-02-22T16:31:03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kumar2215"},"content":"                            Show tasks before a certain date and/or time by typing \u0027show before (date) (time)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kumar2215"},"content":"                            Show tasks after a certain date and/or time by typing \u0027show after (date) (time)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kumar2215"},"content":"                            Exit the program by typing \u0027bye\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kumar2215"},"content":"                        \"\"\", username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kumar2215"},"content":"        showRoverResponse(briefHelp);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kumar2215"},"content":"     * Displays the message to the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kumar2215"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kumar2215"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kumar2215"},"content":"        showRoverResponse(message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kumar2215"},"content":"     * Displays the message to the user without a line separator.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kumar2215"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kumar2215"},"content":"    public void showMessageWithoutLineSeparator(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kumar2215"},"content":"        showRoverResponse(message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kumar2215"},"content":"     * Displays the error message to the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kumar2215"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kumar2215"},"content":"    public void displayError(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kumar2215"},"content":"        String response \u003d \"Oops! Error: \" + message;","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kumar2215"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kumar2215"},"content":"            DialogBox.getErrorDialog(response, roverImage)","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kumar2215"},"content":"        );","lastModifiedDate":"2025-02-07T19:22:26","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":282}},{"path":"src/main/java/rover/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.ui;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.UserPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":" * Ui class deals with interactions with the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":" * It displays messages to the user and reads input from the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"public final class TextUi implements Ui {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    private static final String divider \u003d \"--------------------------------------------\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    private String username \u003d \"\";","lastModifiedDate":"2025-02-22T02:21:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    private UserPreferences userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"     * It initializes the scanner to read input from the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    public TextUi() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"     * @return The next line of input from the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        assert input !\u003d null \u0026\u0026 !input.isEmpty() : \"Input should not be null or empty.\";","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        return input;","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"     * Gets the user preferences for the Ui.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"     * @return The user preferences object.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"    public UserPreferences getUserPreferences() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        return userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"     * Sets the user preferences for the Ui.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"     * @param userPreferences The user preferences object to set.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"    public void setUserPreferences(UserPreferences userPreferences) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"        assert userPreferences !\u003d null : \"User preferences should not be null.\";","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        this.userPreferences \u003d userPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        JsonNode name \u003d userPreferences.getJsonNode().get(\"name\");","lastModifiedDate":"2025-02-22T02:21:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"        this.username \u003d name.asText().isEmpty() ? \"\" : \" \" + name.asText();","lastModifiedDate":"2025-02-22T02:21:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"     * Gets the username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"     * @return The username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    public String getUsername() {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        return username;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"     * Sets the username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"     * @param username The username of the user.","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"    public boolean setUsername(String username) {","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"        assert username !\u003d null : \"Username should not be null.\";","lastModifiedDate":"2025-02-22T02:21:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"        assert !username.isBlank() : \"Username should not be blank.\";","lastModifiedDate":"2025-02-22T02:21:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"        this.username \u003d \" \" + username;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        return userPreferences.setName(username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"     * Displays a line to separate different messages.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"    private void showLine() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        System.out.println(divider);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"     * Displays the welcome message when the program starts.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"                ___","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"                |  _`\\\\","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"                | (_) )   _    _   _    __   _ __","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"                | ,  /  /\u0027_`\\\\ ( ) ( ) /\u0027__`\\\\( \u0027__)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"                | |\\\\ \\\\ ( (_) )| \\\\_/ |(  ___/| |","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"                (_) (_)`\\\\___/\u0027`\\\\___/\u0027`\\\\____)(_)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"                \"\"\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"Hello\" + username + \"! I\u0027m Rover\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"        System.out.println(logo);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"I am your personal task manager.\");","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"     * Displays the goodbye message when the program ends.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"    public void sayBye() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"Bye\" + username + \". Hope to see you again soon!\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"        sc.close();","lastModifiedDate":"2025-02-08T13:24:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"     * Displays the help message when the user types an invalid command.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"    public void showHelpMessage() {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"I\u0027m sorry\" + username + \", but I don\u0027t know what that means.\");","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        String briefHelp \u003d \"\"\"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"                        The following commands are supported:","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"                            You can add a task by typing:","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"                            - todo (description)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"                            - deadline (description) /by (deadline)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"                            - event (description) /from (start) /to (end)","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"                            You can set your preferences by typing \u0027set (preference) (value)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"                            To set your name, type \u0027set name (your name)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"                            To set your user image, type \u0027set userImage (path to image)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"                            To set Rover\u0027s image, type \u0027set roverImage (path to image)\u0027.","lastModifiedDate":"2025-02-22T15:55:20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"                            List the existing tasks by typing \u0027list\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"                            Mark a task as done by typing \u0027mark (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"                            Mark a task as not done by typing \u0027unmark (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"                            Delete a task by typing \u0027delete (task number)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"                            Find tasks with a certain keyword by typing \u0027find (keyword)\u0027.","lastModifiedDate":"2025-02-22T16:31:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"                            Show tasks before a certain date and/or time by typing \u0027show before (date) (time)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"                            Show tasks after a certain date and/or time by typing \u0027show after (date) (time)\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"                            Exit the program by typing \u0027bye\u0027.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"                        \"\"\";","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"        System.out.print(briefHelp);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"     * Displays the message to the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"     * Displays the message to the user without the 2nd line separator.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kumar2215"},"content":"    public void showMessageWithoutLineSeparator(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"        System.out.println(message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kumar2215"},"content":"    /**","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kumar2215"},"content":"     * Displays the error message to the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kumar2215"},"content":"     *","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kumar2215"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kumar2215"},"content":"     */","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kumar2215"},"content":"    @Override","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kumar2215"},"content":"    public void displayError(String message) {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kumar2215"},"content":"        System.out.println(\"Oops! Error: \" + message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kumar2215"},"content":"        showLine();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":188}},{"path":"src/main/java/rover/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.ui;","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T18:59:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.UserPreferences;","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"/**","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":" * Ui interface deals with interactions with the user.","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":" */","lastModifiedDate":"2025-01-29T19:07:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"public interface Ui {","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"    UserPreferences getUserPreferences();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    void setUserPreferences(UserPreferences userPreferences);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    String getUsername();","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    boolean setUsername(String username);","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T02:01:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    String readCommand();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    void showWelcome();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    void sayBye();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"    void showHelpMessage();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"    void showMessage(String message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    void showMessageWithoutLineSeparator(String message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    void displayError(String message);","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-28T17:10:11","isFullCredit":false}],"authorContributionMap":{"kumar2215":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-02-07T14:42:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"rover.ui.Gui\"\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":16}},{"path":"src/test/java/rover/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.parser;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertThrowsExactly;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.command.AddCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import rover.command.DeleteCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"import rover.command.EmptyCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"import rover.command.ExitCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"import rover.command.FindCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"import rover.command.InvalidCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"import rover.command.ListCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"import rover.command.MarkCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"import rover.command.RetrySaveCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"import rover.command.SetCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"import rover.command.ShowAfterCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"import rover.command.ShowBeforeCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"import rover.command.UnmarkCommand;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"import rover.preferences.PreferenceOption;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"import rover.task.Deadline;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"import rover.task.Event;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"import rover.task.TaskAction;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"import rover.task.Todo;","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"public class ParserTest {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    public void checkParseCommand() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new AddCommand(\"todo read book\"), parser.parseCommand(\"todo read book\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new AddCommand(\"deadline return book /by 2021-08-24 1800\"),","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"            parser.parseCommand(\"deadline return book /by 2021-08-24 1800\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new AddCommand(\"event project meeting /at 2021-08-24 1800\"),","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"            parser.parseCommand(\"event project meeting /at 2021-08-24 1800\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new DeleteCommand(\"delete 1\"), parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new EmptyCommand(\"\"), parser.parseCommand(\"\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new ExitCommand(\"bye\"), parser.parseCommand(\"bye\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new FindCommand(\"find book\"), parser.parseCommand(\"find book\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new InvalidCommand(\"whatever\"), parser.parseCommand(\"whatever\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new ListCommand(\"list\"), parser.parseCommand(\"list\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new MarkCommand(\"mark 1\"), parser.parseCommand(\"mark 1\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new SetCommand(\"set name John\"), parser.parseCommand(\"set name John\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new ShowAfterCommand(\"show after 21/08/24\"), parser.parseCommand(\"show after 21/08/24\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new ShowBeforeCommand(\"show before 21/08/24\"), parser.parseCommand(\"show before 21/08/24\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new UnmarkCommand(\"unmark 1\"), parser.parseCommand(\"unmark 1\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"    public void checkIsPreviousCommandBye() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new InvalidCommand(\"yes\"), parser.parseCommand(\"yes\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"        parser.parseCommand(\"bye\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        assertEquals(new RetrySaveCommand(\"yes\"), parser.parseCommand(\"yes\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"    public void checkParsePreferenceOption() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            assertEquals(PreferenceOption.NAME, parser.parsePreferenceOption(\"name\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"            assertEquals(PreferenceOption.USER_IMAGE, parser.parsePreferenceOption(\"userImage\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"            assertEquals(PreferenceOption.ROVER_IMAGE, parser.parsePreferenceOption(\"roverImage\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e parser.parsePreferenceOption(\"backgroundImage\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"    public void checkParseTaskDescription() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"            assertEquals(new Todo(\"read book\"), parser.parseTaskDescription(\"todo read book\"));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"            assertEquals(new Deadline(\"return book /by 24/08/30 1800\"),","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"                parser.parseTaskDescription(\"deadline return book /by 24/08/30 1800\"));","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"            assertEquals(new Event(\"project meeting /from 24/08/30 1800 /to 1900\"),","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"                parser.parseTaskDescription(\"event project meeting /from 24/08/30 1800 /to 1900\"));","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"    public void checkParseTaskDescription2() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskDescription(\"deadline return book by 24/08/21 1800\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"A deadline task must be a task followed with \u0027/by (deadline)\u0027.\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskDescription(\"deadline return book /by 240821 1800\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Unable to parse date: 240821\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskDescription(\"event project meeting /from 24/08/21 1800 to 1900\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\",","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"                e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"    public void checkParseTaskNumber() {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(3, parser.parseTaskNumber(\"4\", 4,","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"            TaskAction.MARK_DONE)));","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskNumber(\"\", 2, TaskAction.DELETE);","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Please specify the task number to be deleted.\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskNumber(\"read book\", 3, TaskAction.MARK_DONE);","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Please specify a valid task number to be marked as done.\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskNumber(\"-1\", 4, TaskAction.MARK_DONE);","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Please specify a valid task number to be marked as done.\\n\"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"                + \"You only have 4 tasks in total.\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"            parser.parseTaskNumber(\"5\", 4, TaskAction.MARK_UNDONE);","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Please specify a valid task number to be marked as not done.\\n\"","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"                + \"You only have 4 tasks in total.\", e.getMessage());","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"            fail(\"Unexpected exception thrown\");","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-02-22T13:16:20","isFullCredit":false}],"authorContributionMap":{"kumar2215":155}},{"path":"src/test/java/rover/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertThrowsExactly;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_emptyStringInitialisation() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Deadline(\"\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_noByKeyword() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Deadline(\"read book by 2021-08-24\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Deadline(\"read book 2021-08-24\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_noDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Deadline(\"read book /by \"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Deadline(\"read book /by\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_improperDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(DateTimeParseException.class, () -\u003e new Deadline(\"read book /by 240921\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionNotThrown_properDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"            new Deadline(\"read book /by 2030-08-24\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"            new Deadline(\"read book /by 2030-08-24 1800\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_beforeMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            Deadline deadline \u003d new Deadline(\"do homework /by 2021-08-24\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"D | 0 | do homework /by 2021-08-24\", deadline.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[D][ ] do homework (by: Tuesday, 24 August, 2021 11:59 pm)\", deadline.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_afterMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"            Deadline deadline \u003d new Deadline(\"do homework /by 2021-08-24\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            deadline.setDone();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"D | 1 | do homework /by 2021-08-24\", deadline.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[D][X] do homework (by: Tuesday, 24 August, 2021 11:59 pm)\", deadline.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"    public void checkIfIsBefore() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"            Deadline deadline \u003d new Deadline(\"do homework /by 2021-08-24\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"            assertFalse(deadline.isBefore(\"2021-08-24 18:00\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"            assertFalse(deadline.isBefore(\"20-08-21\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"            assertTrue(deadline.isBefore(\"26/08/24\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException | RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"    public void checkIfIsAfter() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"            Deadline deadline \u003d new Deadline(\"do homework /by 2021-08-24\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"            assertTrue(deadline.isAfter(\"2021-08-24 18:00\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"            assertTrue(deadline.isAfter(\"20-08-21\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"            assertFalse(deadline.isAfter(\"26/08/24\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException | RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false}],"authorContributionMap":{"kumar2215":94}},{"path":"src/test/java/rover/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertThrowsExactly;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"public class EventTest {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_emptyStringInitialisation() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_noFromKeyword() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book 2021-08-24 /to 2021-08-25\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book /to 2021-08-25\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_noToKeyword() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book /from 2021-08-24 1800\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book /from 2021-08-24 1800 /to \"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_noDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book /from /to 2021-08-25 1800\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e new Event(\"read book /from 2021-08-24 1800 /to \"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_improperDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(DateTimeParseException.class, () -\u003e new Event(\"read book /from 240921 /to 250921\"));","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"            new Event(\"read book /from 2030-08-24 1800 /to 250921\"));","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"            new Event(\"read book /from 24/08/30 1900 /to 2030-08-24 1800\"));","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionNotThrown_properDate() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            new Event(\"School Camp /from 2030-08-24 /to 2030-08-27\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"            new Event(\"School Camp /from 2030-08-24 1800 /to 2030-08-25 1800\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_beforeMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"            Event event \u003d new Event(\"School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"E | 0 | School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\", event.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[E][ ] School Camp (from Tuesday, 24 August, 2021 6:00 pm to Friday, \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"                + \"27 August, 2021 6:00 pm)\", event.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"            Event event2 \u003d new Event(\"School Camp /from 2021-08-24 /to 2021-08-27\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"E | 0 | School Camp /from 2021-08-24 /to 2021-08-27\", event2.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[E][ ] School Camp (from Tuesday, 24 August, 2021 12:00 am to Friday, \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"                + \"27 August, 2021 11:59 pm)\", event2.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_afterMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"            Event event \u003d new Event(\"School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"            event.setDone();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"E | 1 | School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\", event.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[E][X] School Camp (from Tuesday, 24 August, 2021 6:00 pm to Friday, \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"                + \"27 August, 2021 6:00 pm)\", event.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"            Event event2 \u003d new Event(\"School Camp /from 2021-08-24 /to 2021-08-27\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"            event2.setDone();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"E | 1 | School Camp /from 2021-08-24 /to 2021-08-27\", event2.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[E][X] School Camp (from Tuesday, 24 August, 2021 12:00 am to Friday, \"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"                + \"27 August, 2021 11:59 pm)\", event2.toString());","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"    public void checkIsBefore() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"            Event event \u003d new Event(\"School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isBefore(\"2021-08-24 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isBefore(\"2021-08-24\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isBefore(\"24-08-21 1800\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isBefore(\"24/08/2021 1801\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isBefore(\"27/08/21 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isBefore(\"27-08-2021 1800\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isBefore(\"2021-08-27 1801\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isBefore(\"2021-08-28\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"    public void checkIsAfter() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"            Event event \u003d new Event(\"School Camp /from 2021-08-24 1800 /to 2021-08-27 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isAfter(\"2021-08-24 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"2021-08-24\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"            assertTrue(event.isAfter(\"24-08-21 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"24/08/2021 1800\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"27/08/21 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"27-08-2021 1800\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"2021-08-27 1759\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"            assertFalse(event.isAfter(\"2021-08-28\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false}],"authorContributionMap":{"kumar2215":127}},{"path":"src/test/java/rover/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"import rover.ui.TextUi;","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"import rover.ui.Ui;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"public class TaskListTest {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    public void checkEmptyTaskList() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"        assertEquals(0, new TaskList().getNumberOfTasks());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"            assertEquals(0, new TaskList(null).getNumberOfTasks());","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_corruptedTaskString() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"T | 2 | read book\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Possible corruption in saved tasks.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"X | 0 | read book\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Possible corruption in saved tasks.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"T | 0 |read book\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Possible corruption in saved tasks.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_corruptedTaskString2() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"D | 0 | read book 10/12/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"A deadline task must be a task followed with \u0027/by (deadline)\u0027.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"D | 1 | read book /by 10/12/21 /by 09/08/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"A deadline task must be a task followed with \u0027/by (deadline)\u0027.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"            new TaskList(null, \"D | 0 | read book /by 10/12/\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"            fail(\"This exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Unable to parse date: 10/12/\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_corruptedTaskString3() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kumar2215"},"content":"        Ui ui \u003d new TextUi();","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kumar2215"},"content":"            new TaskList(ui, \"E | 0 | read book 10/12/21 09/08/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kumar2215"},"content":"            new TaskList(ui, \"E | 1 | read book /from 10/12/21 /from 09/08/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kumar2215"},"content":"            new TaskList(ui, \"E | 0 | read book /from 10/12/21 09/08/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"An event task must be a task followed with \u0027/from (start) /to (end)\u0027.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kumar2215"},"content":"            new TaskList(ui, \"E | 0 | read book /from 10/12/21 /to 09/08/\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kumar2215"},"content":"            fail(\"This exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kumar2215"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"Unable to parse date: 09/08/\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kumar2215"},"content":"            new TaskList(ui, \"E | 0 | read book /from 10/12/21 /to 09/08/21\");","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"The start date and time must be before the end date and time.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskList_forProperStrings() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kumar2215"},"content":"        String[] taskStrings \u003d {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kumar2215"},"content":"            \"T | 0 | read book\",","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kumar2215"},"content":"            \"D | 1 | return book /by 2021-08-24 1800\",","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kumar2215"},"content":"            \"E | 0 | project meeting /from 2021-08-25 1400 /to 2021-08-25 1600\"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kumar2215"},"content":"        };","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kumar2215"},"content":"            Ui ui \u003d new TextUi();","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kumar2215"},"content":"            TaskList taskList \u003d new TaskList(ui, taskStrings);","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kumar2215"},"content":"            assertEquals(3, taskList.getNumberOfTasks());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"T | 0 | read book\", taskList.getTasks().get(0).getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"D | 1 | return book /by 2021-08-24 1800\", taskList.getTasks().get(1).getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kumar2215"},"content":"            assertEquals(","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kumar2215"},"content":"                \"E | 0 | project meeting /from 2021-08-25 1400 /to 2021-08-25 1600\",","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kumar2215"},"content":"                taskList.getTasks().get(2).getTaskString()","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kumar2215"},"content":"            );","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kumar2215"},"content":"    public void checkListingOfTasks() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kumar2215"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kumar2215"},"content":"        Ui ui \u003d new TextUi();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Todo(\"read book\"), ui);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Deadline(\"return book /by 2021-08-24 1800\", ui), ui);","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Event(\"project meeting /from 2021-08-25 1400 /to 2021-08-25 1600\", ui), ui);","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kumar2215"},"content":"        // Capture the output of the UI","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kumar2215"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kumar2215"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kumar2215"},"content":"        taskList.showTasks(ui, (task, ignore) -\u003e true, \"in your list\");","lastModifiedDate":"2025-01-30T02:22:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kumar2215"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kumar2215"},"content":"            Here are the tasks in your list:","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kumar2215"},"content":"            1. [T][ ] read book","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kumar2215"},"content":"            2. [D][ ] return book (by: Tuesday, 24 August, 2021 6:00 pm)","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kumar2215"},"content":"            3. [E][ ] project meeting (from Wednesday, 25 August, 2021 2:00 pm to Wednesday, 25 August, 2021 4:00 pm)","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kumar2215"},"content":"            \"\"\".replace(\"\\n\", System.lineSeparator());","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kumar2215"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kumar2215"},"content":"    public void checkAddingOfTasks() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kumar2215"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kumar2215"},"content":"        Ui ui \u003d new TextUi();","lastModifiedDate":"2025-02-07T13:14:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kumar2215"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kumar2215"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Todo(\"read book\"), ui);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kumar2215"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kumar2215"},"content":"           --------------------------------------------","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kumar2215"},"content":"           Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kumar2215"},"content":"             [T][ ] read book","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kumar2215"},"content":"           Now you have 1 task in the list.","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kumar2215"},"content":"           --------------------------------------------","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kumar2215"},"content":"            \"\"\".replace(\"\\n\", System.lineSeparator());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kumar2215"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kumar2215"},"content":"        outContent.reset();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Deadline(\"return book /by 2030-08-24 1800\", ui), ui);","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kumar2215"},"content":"        String expectedOutput2 \u003d \"\"\"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kumar2215"},"content":"            Got it. I\u0027ve added this task:","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kumar2215"},"content":"              [D][ ] return book (by: Saturday, 24 August, 2030 6:00 pm)","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kumar2215"},"content":"            Now you have 2 tasks in the list.","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kumar2215"},"content":"            \"\"\".replace(\"\\n\", System.lineSeparator());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kumar2215"},"content":"        assertEquals(expectedOutput2, outContent.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kumar2215"},"content":"        outContent.reset();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Event(\"project meeting /from 2030-08-25 1400 /to 2030-08-25 1600\"), ui);","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kumar2215"},"content":"            fail(\"Exception should not be thrown\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kumar2215"},"content":"        String expectedOutput3 \u003d \"\"\"","lastModifiedDate":"2025-02-14T15:22:06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kumar2215"},"content":"            Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kumar2215"},"content":"              [E][ ] project meeting (from Sunday, 25 August, 2030 2:00 pm to Sunday, 25 August, 2030 4:00 pm)","lastModifiedDate":"2025-02-22T23:01:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kumar2215"},"content":"            Now you have 3 tasks in the list.","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kumar2215"},"content":"            --------------------------------------------","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kumar2215"},"content":"            \"\"\".replace(\"\\n\", System.lineSeparator());","lastModifiedDate":"2025-02-14T13:48:41","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kumar2215"},"content":"        assertEquals(expectedOutput3, outContent.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kumar2215"},"content":"        outContent.reset();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kumar2215"},"content":"            taskList.addTask(new Todo(\"read book\"), ui);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException | DateTimeParseException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"This task already exists in the list.\", e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false}],"authorContributionMap":{"kumar2215":211}},{"path":"src/test/java/rover/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public class TaskTest {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"    public void checkIfTaskIsAbstract() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"        assertThrows(InstantiationException.class, () -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"            Class\u003c?\u003e clazz \u003d Task.class;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"            clazz.getDeclaredConstructor(String.class).newInstance(\"test\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"    public void checkForTaskInEquality() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"            Task task1 \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"            Task task2 \u003d new Todo(\" read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"            Task task3 \u003d new Todo(\"read book \");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task1, task2);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task1, task3);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task2, task3);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"    public void checkForTaskEquality() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"            Task task1 \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"            Task task2 \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"            Task task3 \u003d new Deadline(\"read book /by 01/01/2021 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"            Task task4 \u003d new Deadline(\"read book /by 01/02/2021 1800\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"            Task task5 \u003d new Event(\"read book /from 01/01/2021 1800 /to 01/01/2021 1900\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"            Task task6 \u003d new Event(\"read book /from 01/01/2022 1800 /to 01/01/2022 1900\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"            assertEquals(task1, task2);","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task1, task3);","lastModifiedDate":"2025-02-20T22:24:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task1, task5);","lastModifiedDate":"2025-02-20T22:24:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task3, task4);","lastModifiedDate":"2025-02-20T22:24:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task3, task5);","lastModifiedDate":"2025-02-20T22:24:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"            assertNotEquals(task5, task6);","lastModifiedDate":"2025-02-20T22:24:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false}],"authorContributionMap":{"kumar2215":55}},{"path":"src/test/java/rover/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"package rover.task;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"import static org.junit.jupiter.api.Assertions.assertThrowsExactly;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"import rover.exceptions.RoverException;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"public class TodoTest {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    public void checkIfExceptionThrown_emptyStringInitialisation() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"        assertThrowsExactly(RoverException.class, () -\u003e {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"            new Todo(\"\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"        });","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_beforeMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"            Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"T | 0 | read book\", todo.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"    public void checkTaskString_afterMarkingItDone() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"            Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"            todo.setDone();","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"T | 1 | read book\", todo.getTaskString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"            assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"    public void checkIfIsBeforeAlwaysReturnsFalse() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"            Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"            assertFalse(todo.isBefore(\"2021-08-24T18:00\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"            assertFalse(todo.isBefore(\"garbage\"));;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"    @Test","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    public void checkIfIsAfterAlwaysReturnsFalse() {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"        try {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"            Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kumar2215"},"content":"            assertFalse(todo.isAfter(\"2021-08-24T18:00\"));","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kumar2215"},"content":"            assertFalse(todo.isAfter(\"garbage\"));;","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kumar2215"},"content":"        } catch (RoverException e) {","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kumar2215"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kumar2215"},"content":"        }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kumar2215"},"content":"    }","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kumar2215"},"content":"}","lastModifiedDate":"2025-01-29T13:13:37","isFullCredit":false}],"authorContributionMap":{"kumar2215":62}},{"path":"text-ui-test/unix/input_1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"help","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"todo","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"todo buy milk","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"CS3230 Assignment 2 /by 010225 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"deadline CS3230 Assignment 2 /by 010225 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"deadline CS3230 Assignment 2 /by 01/02/25 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"event CS3230 Lecture /from 29/01/25 2pm /to 4pm","lastModifiedDate":"2025-01-30T02:19:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"todo read book","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"bye","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":13}},{"path":"text-ui-test/unix/input_2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"todo read book","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"mark 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"mark 4","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"delete 4","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"show before 02/02/25","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"show after 30/01/25","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"bye","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":11}},{"path":"text-ui-test/unix/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"if [ ! -d \"../../bin\" ]","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"then","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"    mkdir ../../bin","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"# delete output from previous run","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"if [ -e \"./ACTUAL_1.TXT\" ]","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"then","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"    rm ACTUAL_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"# delete data directory from previous run","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"then","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":"    rm -r ./data","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"shopt -s globstar","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"# Define excluded files (space-separated list)","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"EXCLUDE_LIST\u003d\"Launcher.java Main.java Gui.java DialogBox.java\"","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"FILES\u003d$(find ../../src/main/java -type f -name \"*.java\" | grep -Ev \"$(echo $EXCLUDE_LIST | sed \u0027s/ /|/g\u0027)\")","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"if ! javac -cp ../../src/main/java -Xlint:none -d ../../bin $FILES; then","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    exit 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"# run the program, feed commands from input_1.txt file and redirect the output to the ACTUAL_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"java -cp ../../bin rover.main.Rover \u003c input_1.txt \u003e ACTUAL_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"# compare the output to the expected output","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"diff ACTUAL_1.TXT EXPECTED_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"then","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"    echo \"Input 1 result: PASSED\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"else","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"    echo \"Input 2 result: FAILED\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"    exit 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":"java -cp ../../bin rover.main.Rover \u003c input_2.txt \u003e ACTUAL_2.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"# compare the output to the expected output","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kumar2215"},"content":"diff ACTUAL_2.TXT EXPECTED_2.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kumar2215"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kumar2215"},"content":"then","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kumar2215"},"content":"    echo \"Input 2 result: PASSED\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kumar2215"},"content":"    exit 0","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kumar2215"},"content":"else","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kumar2215"},"content":"    echo \"Input 2 result: FAILED\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kumar2215"},"content":"    exit 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kumar2215"},"content":"fi","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":55}},{"path":"text-ui-test/windows/input_1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"help","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"todo","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"todo buy milk","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"CS3230 Assignment 2 /by 010225 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"deadline CS3230 Assignment 2 /by 010225 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"deadline CS3230 Assignment 2 /by 01/02/25 2359","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"event CS3230 Lecture /from 29/01/25 2pm /to 4pm","lastModifiedDate":"2025-01-30T02:19:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"todo read book","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"bye","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":13}},{"path":"text-ui-test/windows/input_2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"todo read book","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"mark 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"mark 4","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"delete 4","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"list","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"show before 02/02/25","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"show after 30/01/25","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"bye","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":11}},{"path":"text-ui-test/windows/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"kumar2215"},"content":"@ECHO OFF","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kumar2215"},"content":"REM delete output from previous run","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kumar2215"},"content":"if exist ACTUAL_1.TXT del ACTUAL_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kumar2215"},"content":"if exist data rmdir /s /q data","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kumar2215"},"content":"set exclude_list\u003d\"Launcher.java Main.java Gui.java DialogBox.java\"","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kumar2215"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kumar2215"},"content":"for /R ..\\..\\src\\main\\java %%f in (*.java) do (","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kumar2215"},"content":"    echo %exclude_list% | findstr /i /c:\"%%~nxf\" \u003enul || (","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kumar2215"},"content":"        javac -cp ..\\..\\src\\main\\java -Xlint:none -d ..\\..\\bin \"%%f\"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kumar2215"},"content":"        IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kumar2215"},"content":"            echo ********** BUILD FAILURE **********","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kumar2215"},"content":"            exit /b 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kumar2215"},"content":"        )","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kumar2215"},"content":"    )","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kumar2215"},"content":")","lastModifiedDate":"2025-02-07T13:40:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kumar2215"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kumar2215"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kumar2215"},"content":"java -classpath ..\\..\\bin rover.main.Rover \u003c input_1.txt \u003e ACTUAL_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kumar2215"},"content":"REM compare the output to the expected output","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kumar2215"},"content":"FC ACTUAL_1.TXT EXPECTED_1.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kumar2215"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kumar2215"},"content":"    echo ********** Input 1 FAILURE **********","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kumar2215"},"content":"    exit /b 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kumar2215"},"content":")","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kumar2215"},"content":"echo ********** Input 1 SUCCESS **********","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kumar2215"},"content":"REM delete output from previous run","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kumar2215"},"content":"if exist ACTUAL_2.TXT del ACTUAL_2.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kumar2215"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kumar2215"},"content":"java -classpath ..\\..\\bin rover.main.Rover \u003c input_2.txt \u003e ACTUAL_2.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kumar2215"},"content":"REM compare the output to the expected output","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kumar2215"},"content":"FC ACTUAL_2.TXT EXPECTED_2.TXT","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kumar2215"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kumar2215"},"content":"    echo ********** Input 2 FAILURE **********","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kumar2215"},"content":"    exit /b 1","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kumar2215"},"content":")","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kumar2215"},"content":"","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kumar2215"},"content":"echo ********** Input 2 SUCCESS **********","lastModifiedDate":"2025-01-29T17:12:42","isFullCredit":false}],"authorContributionMap":{"kumar2215":46}}]
