{"authorDailyContributionsMap":{"ToxOptimism":[{"date":"2025-01-16","commitResults":[{"hash":"115312c6587df31c7555678617cf6388284fcc2b","isMergeCommit":false,"messageTitle":"Renamed Chatbot, Chatbot Greets and Exits","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"8ac061ef6e9f584b1e937529762422eb3dce45f2","isMergeCommit":false,"messageTitle":"Added bye command \u0026 echo user input.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":5}}},{"hash":"b93cc566efc4196c1d43db45ca15f68bde8606a3","isMergeCommit":false,"messageTitle":"Added add tasks to tasklist \u0026 display tasklist, Removed echo","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":3}}},{"hash":"0ae648971d3307c92fffd6456bc944d16268cebb","isMergeCommit":false,"messageTitle":"Added Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"b48a67586018b2789b6405fcfca2a1b343ba4b21","isMergeCommit":false,"messageTitle":"Added list command now using Tasks, added mark and unmark task.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":5}}},{"hash":"8a09fde47db441e9a828e23cfa66be7fd42c488c","isMergeCommit":false,"messageTitle":"Added Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"755d6d2feb0f53c3d2f941903df8aec165669bbc","isMergeCommit":false,"messageTitle":"Added ToDo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"204ded07d7966cb8406b8226a93a10dd4d9a0252","isMergeCommit":false,"messageTitle":"Added Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"08dce21882913105a17f91e632e95faa080f4ff9","isMergeCommit":false,"messageTitle":"Added todo, deadline, event commands, adjusted add task command to match.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":6}}},{"hash":"a904d853d7d2db95a5efd4dc9f3aab6b4599b48a","isMergeCommit":false,"messageTitle":"Added additional printed details when creating a task of a specific type.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"3eac99079d43fa971c76ffddc560b95f11081d85","isMergeCommit":false,"messageTitle":"Added valid test cases till level 4","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"562e137007e216a991ec28387951c49a22a92c6d","isMergeCommit":false,"messageTitle":"Added exception handling, Added exception throwing for events, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":67,"deletions":29}}},{"hash":"defd9ed6a9e576f0b1a73d250a6a47042126350a","isMergeCommit":false,"messageTitle":"Added exception throwing for deadlines, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":17,"deletions":4}}},{"hash":"073312818bdcec9168350627b1d2ed82ce680880","isMergeCommit":false,"messageTitle":"Added exception throwing for todos, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":11,"deletions":2}}},{"hash":"a669b10fbf7ecfccb9c1f3ed05ca0fdcff62fe92","isMergeCommit":false,"messageTitle":"Added exceptions for mark and unmark, Updated test cases, Fixed an issue with index of list not printing correctly","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":12,"deletions":7}}},{"hash":"4002b0648f89a1822682c36cdd29a3071704699d","isMergeCommit":false,"messageTitle":"Added exception for unknown command, Updated test cases Removed unused function addTask and printException (printMsg was used instead)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":1,"deletions":14}}}]},{"date":"2025-01-17","commitResults":[{"hash":"a2ec6416db5a2afb0dbced474b15b0adbd1dae46","isMergeCommit":false,"messageTitle":"Added additional checks to prevent invalid arguments such as \"/fromtest\" rather than \"/from\", from working, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":6}}},{"hash":"662753bc5756df3669d887376226759d549cd9a6","isMergeCommit":false,"messageTitle":"Added delete, Added index not an int exceptions for mark, unmark and delete, Updated test cases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":69,"deletions":18}}}]},{"date":"2025-01-24","commitResults":[{"hash":"a176555f85669e1ab89d803895a7b31609d45291","isMergeCommit":false,"messageTitle":"Add generateTaskListFile function","messageBody":"There is no functionality to ensure the existence of the taskList file\nor its parent directory.\n\nThis results in potential errors when attempting to read or write to the\ntaskList file if the required file or directory does not exist.\n\nLet\u0027s,\n* check for the existence of the task list file and its directory\n* create the file and directory if they do not already exist\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"856b3776931caca576f5534e0b0c98575c2167b7","isMergeCommit":false,"messageTitle":"Add loadTaskList function","messageBody":"There is no functionality to load tasks from taskList file into the\napplication.\n\nThis results in the application being unable to retrieve and initialize\ntasks from previously saved data.\n\nLet\u0027s,\n* read taskList file\n* parse each line to appropriate task type\n* mark tasks as done if indicated\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"896e67d23c318b620aee1e197c20e6e0f5dd4231","isMergeCommit":false,"messageTitle":"Bug Fix: Adjust loadTaskList try-catch scope","messageBody":"Try-catch of loadTaskList function spanned the function, possibly\ncatching errors generated outside of the intended scope of reading file\nlines.\n\nLet\u0027s\n* extract task type parsing from try-catch\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"b3760a5359b754a16bb884fdd508ea6daf0df8d6","isMergeCommit":false,"messageTitle":"Add save to taskList file","messageBody":"There is no functionality to save task items into the data file.\n\nThis results in the application being unable to retrieve data between\nruns.\n\nThe save functionality needs to be able to account for different task\noperations such as creating new entry, removing entry and marking as\ndone.\n\nLet\u0027s\n* add an overwrite file function\n* add an append file function\n* add a method for tasks to parse into the appropriate file format\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}},{"hash":"ae4524cb8b5b2cdde61a0a0b1ba1fca24e55c1f5","isMergeCommit":false,"messageTitle":"Add usage of save task","messageBody":"The code did not utilize the overwriteTaskListFile and the\nappendTaskListFile function.\n\nThis resulted in it not saving the task list file.\n\nLet\u0027s\n* Add usage of append to addTask function\n* Add usage of overwrite to delete, mark and unmark functions\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":10}}},{"hash":"ac7e0d1bb1b55db9716bdaa719e2e8a380673dcb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8f004cc66945feba77c7e3096fa98fedbc01dfba","isMergeCommit":false,"messageTitle":"Convert deadline \u0026 events to use LocalDateTime","messageBody":"Deadlines and events use strings to represent datetime. This results in\ndifficulty handling and manipulating them.\n\nUtilizing LocalDateTime would ensure ease in formatting.\n\nLet\u0027s\n* Update deadline and event class to use LocalDateTime\n* Add checks when adding tasks to ensure format dd/mm/yyyy hhmm is used\n* Update text output to use a format identical to Oct 2 2019 2:10pm\n* Update file output to use dd/mm/yyyy hhmm for ease of parsing on load\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":16}}},{"hash":"928f7e4656844029cc4cc29fd35c09e0d40cedfe","isMergeCommit":false,"messageTitle":"Update test cases","messageBody":"Newly added local date time did not match with test cases, resulted in\nfailed test cases.\n\nLet\u0027s\n* Update test cases to use localDateTime\n* Include new cases to check for invalid date time inputs\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":12}}},{"hash":"50b5482b9dad5ad8e109d7ff737a81eebd44fa3f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"ce1677956c216630f319a20c773458b785ed5c51","isMergeCommit":false,"messageTitle":"TaskList class: extract tasklist behaviour","messageBody":"TaskList functions is handled by main file Aurora.java and coupled with\nother behaviour such as saving and displaying messages.\n\nExtracting the tasklist behaviour could improve code readability.\n\nLet\u0027s\n* Create a new class taskList\n* Extract add, delete from taskList\n* Extract mark, unmark tasks\n* Extract convert tasklist to file format and display format\n","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":27}}},{"hash":"1eac5c10a5741ff870032c14055d41fa2847806c","isMergeCommit":false,"messageTitle":"Storage class: extract storage behaviour","messageBody":"Storage functions is handled by main file Aurora.java and coupled with\nother behaviour such as displaying messages.\n\nExtracting the storage behaviour could improve code readability.\n\nLet\u0027s\n* Create a new class Storage\n* Extract generate data file\n* Extract load data file\n* Extract overwrite and append to data file\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":44}}},{"hash":"6b3e1c9f4965bdbb9b8cc11626b7d0f913f6dd77","isMergeCommit":false,"messageTitle":"Parser class: extract parser behaviour","messageBody":"Parser functions is handled by main file Aurora.java. These functions\nare primarily utility functions that convert data into other data types.\n\nLet\u0027s\n* Create a new class Parser\n* Extract parse lines from storage file\n* Extract parse int\n* Extract parse date time\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":46}}},{"hash":"3e464fa6c69c10ab47b7f0721a0aad92f04f16dd","isMergeCommit":false,"messageTitle":"Ui class: extract Ui behaviour","messageBody":"Ui display functions is handled by Aurora.java.\n\nExtracting these functions could improve code readability and reduce\ncoupling.\n\nLet\u0027s\n* Create a new class Ui\n* Extract print msg\n* Extract print taskList\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":39}}}]},{"date":"2025-01-25","commitResults":[{"hash":"d0eea67261cadaf944ae1560a670f0e5a3152b23","isMergeCommit":false,"messageTitle":"Add Command class: extract task creation commands","messageBody":"Creating new tasks requires parsing and executing the command, which is\ndone as functions in Aurora.java.\n\nExtracting these functions could serve to abstract the commands of the\nchatbot, thus improving code readability.\n\nLet\u0027s\n* Create a new Command class\n* Create add tasks command classes\n* Extract common calling of storage functionality (saving) as function\n* Extract parsing of arguments specific to commands\n* Extract execution of commands\n* Extract common calling of UI upon adding task as a function\n","fileTypesAndContributionMap":{"java":{"insertions":251,"deletions":0}}},{"hash":"f9ffe9ddf4f4354a41d378773ad133aa4b80f90e","isMergeCommit":false,"messageTitle":"Display Command classes: extract display commands","messageBody":"To standardize the level of abstraction of all commands, all commands\nwill be abstracted from Aurora.java, to improve code readability.\n\nLet\u0027s\n* Create a new ByeCommand class\n* Create a new ListCommand class\n* Extract execution of commands\n* Extract exiting chatbot functionality as a command\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"51f31283c55e29e44ffb07dca9b20e7773c49933","isMergeCommit":false,"messageTitle":"Edit List Command class: extract task modification commands","messageBody":"Editing tasks requires parsing of index and executing the command,\nwhich is done as functions in Aurora.java.\n\nTo standardize the level of abstraction of all commands, all commands\nwill be abstracted from Aurora.java, to improve code readability.\n\nLet\u0027s\n* Create a new DeleteCommand class\n* Create a MarkCommand \u0026 UnmarkCommand class\n* Create add tasks command classes\n* Extract parsing of arguments specific to commands\n* Extract execution of commands\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"5e9423aca94304c54ae8ea8a830816c73430f108","isMergeCommit":false,"messageTitle":"Parser Class: Add parse commands","messageBody":"Identification of commands is handled by Aurora.java, when it should be\nencapsulated under the Parser Class as part of its behaviour. This will\nimprove code readability as the functionality will be in a more\nreasonable location.\n\nLet\u0027s\n* Extract parsing of commands\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":1}}},{"hash":"01a7056bc13e3c951821b4b7c1fb6c7a1dacad55","isMergeCommit":false,"messageTitle":"Update Aurora.java to utilize new command classes","messageBody":"Removing outdated code that has been abstracted by new command classes.\n\nRefactor Aurora.java to call parser \u0026 command class functionality. The\nmain functionality of Aurora.java should not concern itself with\nidentifying individual commands.\n\nLet\u0027s\n* Remove outdated code\n* Use abstracted command identification\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":254}}},{"hash":"6e1ab16f77dd85100738b686dfd479912de0b0e8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"7dbce4623cca95280ad2b2c1f05869795d813daf","isMergeCommit":false,"messageTitle":"Add packages to organize classes","messageBody":"Classes are not categorized into their respective responsibilities.\n\nAdding packages can help to ease the management and readability of\nclasses.\n\nLet\u0027s\n* Create packages - aurora, command, exception, task\n* Create io package for interacting with input/ output/ storage\n* Create util package for parser class\n* Extract classes into respective packages\n","fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":11},"bat":{"insertions":1,"deletions":1}}},{"hash":"ad78762e484d11421c7e38f179779c365a11ec6f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"ca65b92bcc02fdf0af232234633a1a840f5e2924","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ba0d8630f3da031397badc1e09139466b6b752d2","isMergeCommit":false,"messageTitle":"Update gradle file reference","messageBody":"Gradle application and shadowJar does not match with current file names\n\nLet\u0027s\n- Update gradle to reference the new file names\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"27617d53a430fa2546d0e01e8cb9789db9079ced","isMergeCommit":false,"messageTitle":"Update Storage to singleton","messageBody":"Testing of adding commands would require a storage stub. Current static\nclass implementation of Storage would prevent the implementation of a\nstorage stub.\n\nSingleton based storage would allow overriding of methods.\n\nCommands can take in storage instance to differentiate Storage from its\nstub equivalent.\n\nLet\u0027s\n- Update storage to a singleton\n- Update commands to take in storage instance when executing\n- Add storage stub class with minimal functionality\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":51}}},{"hash":"73a346d22580203693318cb76f5943bd4f3006a9","isMergeCommit":false,"messageTitle":"Add JUnit add deadline test","messageBody":"Text UI test acts as system test, making identifying individual bugs\ndifficult.\n\nAutomated unit tests can help to identify issues in the code easily.\n\nLet\u0027s\n* Create a AddDeadlineCommandTest class to handle unit test\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}},{"hash":"641d936d8ad5e662d0da105865a5c53cca675155","isMergeCommit":false,"messageTitle":"Update Parser to singleton","messageBody":"Storage is a singleton, standardization of all classes in the same util\npackage would benefit code readability.\n\nLet\u0027s\n- Update parser to a singleton\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"8bf617d9517a94e6b2271e6c1855d523caf52e8a","isMergeCommit":false,"messageTitle":"Add JUnit parser test","messageBody":"Text UI test acts as system test, making identifying individual bugs\ndifficult.\n\nAutomated unit tests can help to identify issues in the code easily.\n\nLet\u0027s\n* Create a ParserTest class to handle unit test\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":0}}}]},{"date":"2025-01-26","commitResults":[{"hash":"6d2699164a07c6b6586a414fcc8a144d9fcc3add","isMergeCommit":false,"messageTitle":"Update gradle file for version","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"5fc912904afc60852627028c3e32d554c0ce145d","isMergeCommit":false,"messageTitle":"Add automated checkstyle to gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"cc613b270201e1fe3a9f0021585fe6fa77c44a6f","isMergeCommit":false,"messageTitle":"Add JavaDoc comments","messageBody":"Functions do not clearly indicate what they do.\n\nJavaDoc comments would help in code readability.\n\nLet\u0027s\n* Add JavaDoc comments to all application classes\n","fileTypesAndContributionMap":{"java":{"insertions":462,"deletions":16}}},{"hash":"edc70c47131e2615652edea666bd953857ca6acb","isMergeCommit":false,"messageTitle":"Update code to match coding standards","messageBody":"Code does not align with automated checkstyle.\n\nLet\u0027s\n* Run the automated checkstyle\n* Resolve any checkstyle issues\n","fileTypesAndContributionMap":{"java":{"insertions":137,"deletions":92}}},{"hash":"a9b81887d580cad48a7be73b9acaa93ee9365208","isMergeCommit":false,"messageTitle":"Add find keyword in description","messageBody":"TaskList can only be listed in full.\n\nSupport for filtering task list by key words could improve the\nusability of the application.\n\nLet\u0027s\n* Add a method to identify if a task has a keyword in its description.\n* Add a method to list the tasks with the keyword.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"90f053b7daba863f2d82323c53d23d2bb3c1227b","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"The user has no means of specifying a keyword to filter by.\n\nThe addition of a find command, could improve usability of the\napplication.\n\nLet\u0027s\n* Add a find command.\n* Allow the parser to recognize the command.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"2babe81d7f31b2e37fed5d5e132b538e0cb73388","isMergeCommit":false,"messageTitle":"Add find command tests","messageBody":"Find command does not have any corresponding unit or system tests.\n\nAutomated unit and system tests can help to identify issues in the code\neasily.\n\nLet\u0027s\n* Add a parser test to verify parsing of find command.\n* Add text ui test for valid and invalid use of the command.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":13,"deletions":8},"bat":{"insertions":1,"deletions":1}}},{"hash":"fcd3b8ee7271c10a747698a0bbfe31b9e06b2233","isMergeCommit":false,"messageTitle":"Update taskList java docs for clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"eb48bb466ffb46c920828dd6a7b76b47fbcc9e1f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"0f6a724308684d5363fee6652ce262a84742529d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/aurora/command/AddCommand.java\n#\tsrc/main/java/aurora/command/Command.java\n#\tsrc/main/java/aurora/io/Storage.java\n#\tsrc/main/java/aurora/task/Task.java\n#\tsrc/main/java/aurora/util/Parser.java\n\nResolution:\n* Use master branch for most.\n* For checkstyle issues, use coding standard branch.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"a0095ac5b67e212f748db16b717491a891f593b7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/aurora/task/Task.java\n#\tsrc/main/java/aurora/task/TaskList.java\n#\tsrc/main/java/aurora/util/Parser.java\n#\tsrc/test/java/aurora/util/ParserTest.java\n\nResolution:\n* Fix JavaDocs comment for different functions being overlapped when\nmerging.\n* Fix import order in accordance to checkstyle.\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-03","commitResults":[{"hash":"7892598342247b59f65a42ec0231cd113dad6aba","isMergeCommit":false,"messageTitle":"Update gradle dependencies for javaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"b72714a9e8968d063a3121a4b350b81218a76f91","isMergeCommit":false,"messageTitle":"Replace TUI with GUI","messageBody":"Text based UI can make the application feel unapproachable to new users\nas they are unsure of what to do.\n\nA familiar chatbot messaging style GUI would benefit user experience.\n\nLet\u0027s\n* Replace TUI with GUI based on Duke\u0027s JavaFX tutorial.\n* Get input using the GUI.\n* Display command responses using the GUI.\n* Add a launcher class to launch the main application.\n* Update the aurora application to load the UI scene.\n* Update the aurora application to execute input on event.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":45,"deletions":0},"java":{"insertions":246,"deletions":65}}},{"hash":"1c6290acc2ace37d466c74588a81ecb1f5aff909","isMergeCommit":false,"messageTitle":"Add UiStub for test cases","messageBody":"The test cases for adding a new deadline fails as execution of command\nis unable to access the Ui during test running.\n\nThis essential test cases if left unchanged might cause other issues\nto be hidden.\n\nA UiStub that can be referred to by the test cases would resolve the\nissue.\n\nLet\u0027s\n* Add a UiStub with limited functionality for the purpose of testing\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":1}}},{"hash":"a53f03bea95e5eafe922a48dcc1ad5519f6def77","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-10","commitResults":[{"hash":"2f048d12bb250613747c1dc539e08f1799fd5fb5","isMergeCommit":false,"messageTitle":"Update find command to display correctly","messageBody":"The find command displays the entire task list regardless of the filter.\n\nLet\u0027s\n*  Update find command\u0027s execute to display the filtered list\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"22b3158b752ca5a1c30ef1feb37cf817e3cffec9","isMergeCommit":false,"messageTitle":"Add assertion to various methods","messageBody":"The command, task, io classes assumes the arguments passed are not null.\n\nThe assertions will error if such assumptions are invalidated.\n\nThis guards against violating such assumptions in future iterations of\ndevelopment.\n\nLet\u0027s\n* Add null assertion checks to the command classes\n* Add null assertion checks to the task classes\n* Add null assertion checks to the io classes\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":0}}},{"hash":"014c23ed49b009ef2679b5c461147b798a0f4141","isMergeCommit":false,"messageTitle":"Update command execute with assertions","messageBody":"The command class uses an exception to prevent the usage of commands\nwithout parsing the necessary arguments. The command class uses an\nexception to re-execution of commands.\n\nThe cases represent issues with ordering of function calls, a programmer\nerror.\n\nThis does not follow the convention of using exceptions for user input\nerrors and assertions for programmer errors.\n\nLet\u0027s\n* Replace the arguments not parsed exception with an assertion\n* Replace the command already executed exception with an assertion\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":7}}},{"hash":"58ce7c9e1cb2b67ee685bae245857bc153a38851","isMergeCommit":false,"messageTitle":"Update variable names for clarity","messageBody":"Peer review has indicated that the usage of scratch variable naming\naffected code readability.\n\nAppropriate variable names could help improve the understanding of\ndevelopers involved in future iterations.\n\nLet\u0027s\n* Update scratch variables to utilize a more comprehensive name\n* Update JavaDocs to match the parameter and return variable names\n","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":76}}}]},{"date":"2025-02-11","commitResults":[{"hash":"e214327316aa72d24bb7537bd09f2d8cdc33f7c6","isMergeCommit":false,"messageTitle":"Replace magic literals with constant","messageBody":"Commands, Tasks and Io\u0027s various exception messages, usage messages and\nargument identifiers currently use various magic literals, leading to\nduplicated values that are meant to reference the same variable.\n\nUsing named constants help improve the readability and maintainability\nof the code.\n\nLet\u0027s\n* Replace exception messages literals with constants\n* Use a command usage constant for all exceptions in a command\n* Use a command keyword constant for the parser to identify commands\n* Use a task keyword constant for the parser to identify tasks\n","fileTypesAndContributionMap":{"java":{"insertions":229,"deletions":119}}}]},{"date":"2025-02-12","commitResults":[{"hash":"7a607c4c2f860f1e2160997b4a8422555ad8a409","isMergeCommit":false,"messageTitle":"Add comments to justify code duplication","messageBody":"The peer review highlighted enquiries regarding the duplication of\nselect code in parsing of arguments.\n\nHowever the code is designed such that it is easily extensible. As such,\nthe parsing of the arguments are coupled with the command such that\nmodifications to the command only affect that specific class.\n\nLet\u0027s\n* Add a comment to justify why the code is structured in such a manner\n","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":14}}},{"hash":"79cb3a8494c1587eec628b9571c65220fca7488e","isMergeCommit":false,"messageTitle":"Add not null assertion to more methods","messageBody":"The parser and aurora classes assumes the arguments passed are not null.\n\nThe assertions will error if such assumptions are invalidated.\n\nThis guards against violating such assumptions in future iterations of\ndevelopment.\n\nLet\u0027s\n* Add null assertion checks to the aurora classes\n* Add null assertion checks to the parser classes\n* Remove test cases that checked if an assumption, covered by an\n  assertion, was violated\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"49517f4a91ede6dc3df1d13269ffbdfd2f162624","isMergeCommit":true,"messageTitle":"Merge pull request #1 from ToxOptimism/branch-A-Assertions","messageBody":"Merge branch-A-Assertions into master branch","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"80aacb167649590100351dd9f6456ae3cb96ccb5","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"# Conflicts:\n#\tsrc/main/java/aurora/command/AddCommand.java\n#\tsrc/main/java/aurora/command/AddEventCommand.java\n#\tsrc/main/java/aurora/command/AddToDoCommand.java\n#\tsrc/main/java/aurora/command/Command.java\n#\tsrc/main/java/aurora/command/DeleteCommand.java\n#\tsrc/main/java/aurora/command/FindCommand.java\n#\tsrc/main/java/aurora/command/MarkCommand.java\n#\tsrc/main/java/aurora/command/UnmarkCommand.java\n#\tsrc/main/java/aurora/task/TaskList.java\n\nResolution:\n* Take both for most\n* For issues with variable name, take code quality branch\u0027s\n* Remove taskList\u0027s tasklist and task not null assertion, shift to when\n  adding tasks\n","fileTypesAndContributionMap":{}},{"hash":"f53ef6848905b8f2d2446075a07d0e7fa88ab315","isMergeCommit":true,"messageTitle":"Merge pull request #2 from ToxOptimism/branch-A-CodeQuality","messageBody":"Merge branch-A-CodeQuality into master branch","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-13","commitResults":[{"hash":"f5fa1ac1e007a131f11a1895c1fc76191e433ee9","isMergeCommit":false,"messageTitle":"Add DoWithinPeriod tasks","messageBody":"The set of deadlines, events and todos could be seen as limiting. Users\nmay find more options of task categories useful. A possible variation of\ntasks would be DoWithinPeriod tasks, which indicates tasks that should\nbe done within a certain period.\n\nFunctionally, a DoWithinPeriod task would be identical to an Event task,\nas the validation of whether a task is marked as done within a certain\ntime frame is out of scope. The distinguishing factor would be task\nkeyword that is displayed.\n\nNotably, the argument format will be identical to an Event task as well.\nHowever the parsing of arguments are to remain separate to avoid\ncoupling commands together for future changes.\n\nLet\u0027s\n* Add a DoWithinPeriod task\n* Add a AddDoWithinPeriod command\n* Add the command to Parser\n* Update the version of the application\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":243,"deletions":7}}},{"hash":"04e91b1bb21c74e11198b3f6f99fe25ee0a94d65","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-BCD-Extension\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2025-02-17","commitResults":[{"hash":"e97b22d6a3936e57593445e8b52ed696a64881c8","isMergeCommit":false,"messageTitle":"Reduce length of parse arguments methods","messageBody":"The issue tracker has flagged parsing of arguments as too lengthy.\n\nFinding of \"/{argIdentifier}\" in the input string can be extracted\nas a method to reduce code duplication and code length.\n\nLet\u0027s\n* Add a protected method for finding an argument\u0027s start index by the\n  argument identifier\n* Add a protected method for checking if there is any other text before\n  the argument identifier\n","fileTypesAndContributionMap":{"java":{"insertions":130,"deletions":131}}},{"hash":"dfee1f3214f53abd70aecba80c94b5dac2c81b92","isMergeCommit":false,"messageTitle":"Update JavaDocs","messageBody":"Issue tracker indicated areas where the non-plural form was used for\nmethod header comments\u0027 overview statement.\n\nLet\u0027s\n* Update all the JavaDoc\u0027s overview statements\n","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":36}}},{"hash":"5d8a11aa45940883add9ba5db97eb69a3f3c261a","isMergeCommit":false,"messageTitle":"Fix exception check to account for whitespace","messageBody":"Event and DoWithinPeriod did not throw the correct exception in the case\nof \"/from    /to\" and \"/start    /end\" due to the whitespaces.\n\nLet\u0027s\n* Account for whitespace by trimming the substring between the two\n  identifiers\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"a307abf33c904186dbb3be7baf4196c7512098e8","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":231,"deletions":13}}}]}]},"authorFileTypeContributionMap":{"ToxOptimism":{"java":2493,"md":231,"fxml":45,"sh":1,"bat":2,"gradle":23,"txt":43}},"authorContributionVariance":{"ToxOptimism":75118.34},"authorDisplayNameMap":{"ToxOptimism":"CS2103-F08-3 YAP ..O YI"}}
