{"authorDailyContributionsMap":{"ToxOptimism":[{"date":"2025-01-16","commitResults":[{"hash":"115312c6587df31c7555678617cf6388284fcc2b","isMergeCommit":false,"messageTitle":"Renamed Chatbot, Chatbot Greets and Exits","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"8ac061ef6e9f584b1e937529762422eb3dce45f2","isMergeCommit":false,"messageTitle":"Added bye command \u0026 echo user input.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":5}}},{"hash":"b93cc566efc4196c1d43db45ca15f68bde8606a3","isMergeCommit":false,"messageTitle":"Added add tasks to tasklist \u0026 display tasklist, Removed echo","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":3}}},{"hash":"0ae648971d3307c92fffd6456bc944d16268cebb","isMergeCommit":false,"messageTitle":"Added Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"b48a67586018b2789b6405fcfca2a1b343ba4b21","isMergeCommit":false,"messageTitle":"Added list command now using Tasks, added mark and unmark task.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":5}}},{"hash":"8a09fde47db441e9a828e23cfa66be7fd42c488c","isMergeCommit":false,"messageTitle":"Added Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"755d6d2feb0f53c3d2f941903df8aec165669bbc","isMergeCommit":false,"messageTitle":"Added ToDo class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"204ded07d7966cb8406b8226a93a10dd4d9a0252","isMergeCommit":false,"messageTitle":"Added Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"08dce21882913105a17f91e632e95faa080f4ff9","isMergeCommit":false,"messageTitle":"Added todo, deadline, event commands, adjusted add task command to match.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":6}}},{"hash":"a904d853d7d2db95a5efd4dc9f3aab6b4599b48a","isMergeCommit":false,"messageTitle":"Added additional printed details when creating a task of a specific type.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"3eac99079d43fa971c76ffddc560b95f11081d85","isMergeCommit":false,"messageTitle":"Added valid test cases till level 4","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"562e137007e216a991ec28387951c49a22a92c6d","isMergeCommit":false,"messageTitle":"Added exception handling, Added exception throwing for events, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":67,"deletions":29}}},{"hash":"defd9ed6a9e576f0b1a73d250a6a47042126350a","isMergeCommit":false,"messageTitle":"Added exception throwing for deadlines, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":17,"deletions":4}}},{"hash":"073312818bdcec9168350627b1d2ed82ce680880","isMergeCommit":false,"messageTitle":"Added exception throwing for todos, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":11,"deletions":2}}},{"hash":"a669b10fbf7ecfccb9c1f3ed05ca0fdcff62fe92","isMergeCommit":false,"messageTitle":"Added exceptions for mark and unmark, Updated test cases, Fixed an issue with index of list not printing correctly","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":12,"deletions":7}}},{"hash":"4002b0648f89a1822682c36cdd29a3071704699d","isMergeCommit":false,"messageTitle":"Added exception for unknown command, Updated test cases Removed unused function addTask and printException (printMsg was used instead)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":1,"deletions":14}}}]},{"date":"2025-01-17","commitResults":[{"hash":"a2ec6416db5a2afb0dbced474b15b0adbd1dae46","isMergeCommit":false,"messageTitle":"Added additional checks to prevent invalid arguments such as \"/fromtest\" rather than \"/from\", from working, Updated test cases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":6}}},{"hash":"662753bc5756df3669d887376226759d549cd9a6","isMergeCommit":false,"messageTitle":"Added delete, Added index not an int exceptions for mark, unmark and delete, Updated test cases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":69,"deletions":18}}}]},{"date":"2025-01-24","commitResults":[{"hash":"a176555f85669e1ab89d803895a7b31609d45291","isMergeCommit":false,"messageTitle":"Add generateTaskListFile function","messageBody":"There is no functionality to ensure the existence of the taskList file\nor its parent directory.\n\nThis results in potential errors when attempting to read or write to the\ntaskList file if the required file or directory does not exist.\n\nLet\u0027s,\n* check for the existence of the task list file and its directory\n* create the file and directory if they do not already exist\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"856b3776931caca576f5534e0b0c98575c2167b7","isMergeCommit":false,"messageTitle":"Add loadTaskList function","messageBody":"There is no functionality to load tasks from taskList file into the\napplication.\n\nThis results in the application being unable to retrieve and initialize\ntasks from previously saved data.\n\nLet\u0027s,\n* read taskList file\n* parse each line to appropriate task type\n* mark tasks as done if indicated\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"896e67d23c318b620aee1e197c20e6e0f5dd4231","isMergeCommit":false,"messageTitle":"Bug Fix: Adjust loadTaskList try-catch scope","messageBody":"Try-catch of loadTaskList function spanned the function, possibly\ncatching errors generated outside of the intended scope of reading file\nlines.\n\nLet\u0027s\n* extract task type parsing from try-catch\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"b3760a5359b754a16bb884fdd508ea6daf0df8d6","isMergeCommit":false,"messageTitle":"Add save to taskList file","messageBody":"There is no functionality to save task items into the data file.\n\nThis results in the application being unable to retrieve data between\nruns.\n\nThe save functionality needs to be able to account for different task\noperations such as creating new entry, removing entry and marking as\ndone.\n\nLet\u0027s\n* add an overwrite file function\n* add an append file function\n* add a method for tasks to parse into the appropriate file format\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}},{"hash":"ae4524cb8b5b2cdde61a0a0b1ba1fca24e55c1f5","isMergeCommit":false,"messageTitle":"Add usage of save task","messageBody":"The code did not utilize the overwriteTaskListFile and the\nappendTaskListFile function.\n\nThis resulted in it not saving the task list file.\n\nLet\u0027s\n* Add usage of append to addTask function\n* Add usage of overwrite to delete, mark and unmark functions\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":10}}},{"hash":"ac7e0d1bb1b55db9716bdaa719e2e8a380673dcb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8f004cc66945feba77c7e3096fa98fedbc01dfba","isMergeCommit":false,"messageTitle":"Convert deadline \u0026 events to use LocalDateTime","messageBody":"Deadlines and events use strings to represent datetime. This results in\ndifficulty handling and manipulating them.\n\nUtilizing LocalDateTime would ensure ease in formatting.\n\nLet\u0027s\n* Update deadline and event class to use LocalDateTime\n* Add checks when adding tasks to ensure format dd/mm/yyyy hhmm is used\n* Update text output to use a format identical to Oct 2 2019 2:10pm\n* Update file output to use dd/mm/yyyy hhmm for ease of parsing on load\n","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":16}}},{"hash":"928f7e4656844029cc4cc29fd35c09e0d40cedfe","isMergeCommit":false,"messageTitle":"Update test cases","messageBody":"Newly added local date time did not match with test cases, resulted in\nfailed test cases.\n\nLet\u0027s\n* Update test cases to use localDateTime\n* Include new cases to check for invalid date time inputs\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":12}}},{"hash":"50b5482b9dad5ad8e109d7ff737a81eebd44fa3f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"ce1677956c216630f319a20c773458b785ed5c51","isMergeCommit":false,"messageTitle":"TaskList class: extract tasklist behaviour","messageBody":"TaskList functions is handled by main file Aurora.java and coupled with\nother behaviour such as saving and displaying messages.\n\nExtracting the tasklist behaviour could improve code readability.\n\nLet\u0027s\n* Create a new class taskList\n* Extract add, delete from taskList\n* Extract mark, unmark tasks\n* Extract convert tasklist to file format and display format\n","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":27}}},{"hash":"1eac5c10a5741ff870032c14055d41fa2847806c","isMergeCommit":false,"messageTitle":"Storage class: extract storage behaviour","messageBody":"Storage functions is handled by main file Aurora.java and coupled with\nother behaviour such as displaying messages.\n\nExtracting the storage behaviour could improve code readability.\n\nLet\u0027s\n* Create a new class Storage\n* Extract generate data file\n* Extract load data file\n* Extract overwrite and append to data file\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":44}}},{"hash":"6b3e1c9f4965bdbb9b8cc11626b7d0f913f6dd77","isMergeCommit":false,"messageTitle":"Parser class: extract parser behaviour","messageBody":"Parser functions is handled by main file Aurora.java. These functions\nare primarily utility functions that convert data into other data types.\n\nLet\u0027s\n* Create a new class Parser\n* Extract parse lines from storage file\n* Extract parse int\n* Extract parse date time\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":46}}},{"hash":"3e464fa6c69c10ab47b7f0721a0aad92f04f16dd","isMergeCommit":false,"messageTitle":"Ui class: extract Ui behaviour","messageBody":"Ui display functions is handled by Aurora.java.\n\nExtracting these functions could improve code readability and reduce\ncoupling.\n\nLet\u0027s\n* Create a new class Ui\n* Extract print msg\n* Extract print taskList\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":39}}}]},{"date":"2025-01-25","commitResults":[{"hash":"d0eea67261cadaf944ae1560a670f0e5a3152b23","isMergeCommit":false,"messageTitle":"Add Command class: extract task creation commands","messageBody":"Creating new tasks requires parsing and executing the command, which is\ndone as functions in Aurora.java.\n\nExtracting these functions could serve to abstract the commands of the\nchatbot, thus improving code readability.\n\nLet\u0027s\n* Create a new Command class\n* Create add tasks command classes\n* Extract common calling of storage functionality (saving) as function\n* Extract parsing of arguments specific to commands\n* Extract execution of commands\n* Extract common calling of UI upon adding task as a function\n","fileTypesAndContributionMap":{"java":{"insertions":251,"deletions":0}}},{"hash":"f9ffe9ddf4f4354a41d378773ad133aa4b80f90e","isMergeCommit":false,"messageTitle":"Display Command classes: extract display commands","messageBody":"To standardize the level of abstraction of all commands, all commands\nwill be abstracted from Aurora.java, to improve code readability.\n\nLet\u0027s\n* Create a new ByeCommand class\n* Create a new ListCommand class\n* Extract execution of commands\n* Extract exiting chatbot functionality as a command\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"51f31283c55e29e44ffb07dca9b20e7773c49933","isMergeCommit":false,"messageTitle":"Edit List Command class: extract task modification commands","messageBody":"Editing tasks requires parsing of index and executing the command,\nwhich is done as functions in Aurora.java.\n\nTo standardize the level of abstraction of all commands, all commands\nwill be abstracted from Aurora.java, to improve code readability.\n\nLet\u0027s\n* Create a new DeleteCommand class\n* Create a MarkCommand \u0026 UnmarkCommand class\n* Create add tasks command classes\n* Extract parsing of arguments specific to commands\n* Extract execution of commands\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"5e9423aca94304c54ae8ea8a830816c73430f108","isMergeCommit":false,"messageTitle":"Parser Class: Add parse commands","messageBody":"Identification of commands is handled by Aurora.java, when it should be\nencapsulated under the Parser Class as part of its behaviour. This will\nimprove code readability as the functionality will be in a more\nreasonable location.\n\nLet\u0027s\n* Extract parsing of commands\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":1}}},{"hash":"01a7056bc13e3c951821b4b7c1fb6c7a1dacad55","isMergeCommit":false,"messageTitle":"Update Aurora.java to utilize new command classes","messageBody":"Removing outdated code that has been abstracted by new command classes.\n\nRefactor Aurora.java to call parser \u0026 command class functionality. The\nmain functionality of Aurora.java should not concern itself with\nidentifying individual commands.\n\nLet\u0027s\n* Remove outdated code\n* Use abstracted command identification\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":254}}},{"hash":"6e1ab16f77dd85100738b686dfd479912de0b0e8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"7dbce4623cca95280ad2b2c1f05869795d813daf","isMergeCommit":false,"messageTitle":"Add packages to organize classes","messageBody":"Classes are not categorized into their respective responsibilities.\n\nAdding packages can help to ease the management and readability of\nclasses.\n\nLet\u0027s\n* Create packages - aurora, command, exception, task\n* Create io package for interacting with input/ output/ storage\n* Create util package for parser class\n* Extract classes into respective packages\n","fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":11},"bat":{"insertions":1,"deletions":1}}},{"hash":"ad78762e484d11421c7e38f179779c365a11ec6f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"ca65b92bcc02fdf0af232234633a1a840f5e2924","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"ba0d8630f3da031397badc1e09139466b6b752d2","isMergeCommit":false,"messageTitle":"Update gradle file reference","messageBody":"Gradle application and shadowJar does not match with current file names\n\nLet\u0027s\n- Update gradle to reference the new file names\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"27617d53a430fa2546d0e01e8cb9789db9079ced","isMergeCommit":false,"messageTitle":"Update Storage to singleton","messageBody":"Testing of adding commands would require a storage stub. Current static\nclass implementation of Storage would prevent the implementation of a\nstorage stub.\n\nSingleton based storage would allow overriding of methods.\n\nCommands can take in storage instance to differentiate Storage from its\nstub equivalent.\n\nLet\u0027s\n- Update storage to a singleton\n- Update commands to take in storage instance when executing\n- Add storage stub class with minimal functionality\n","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":51}}},{"hash":"73a346d22580203693318cb76f5943bd4f3006a9","isMergeCommit":false,"messageTitle":"Add JUnit add deadline test","messageBody":"Text UI test acts as system test, making identifying individual bugs\ndifficult.\n\nAutomated unit tests can help to identify issues in the code easily.\n\nLet\u0027s\n* Create a AddDeadlineCommandTest class to handle unit test\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}},{"hash":"641d936d8ad5e662d0da105865a5c53cca675155","isMergeCommit":false,"messageTitle":"Update Parser to singleton","messageBody":"Storage is a singleton, standardization of all classes in the same util\npackage would benefit code readability.\n\nLet\u0027s\n- Update parser to a singleton\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"8bf617d9517a94e6b2271e6c1855d523caf52e8a","isMergeCommit":false,"messageTitle":"Add JUnit parser test","messageBody":"Text UI test acts as system test, making identifying individual bugs\ndifficult.\n\nAutomated unit tests can help to identify issues in the code easily.\n\nLet\u0027s\n* Create a ParserTest class to handle unit test\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":0}}}]},{"date":"2025-01-26","commitResults":[{"hash":"6d2699164a07c6b6586a414fcc8a144d9fcc3add","isMergeCommit":false,"messageTitle":"Update gradle file for version","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"5fc912904afc60852627028c3e32d554c0ce145d","isMergeCommit":false,"messageTitle":"Add automated checkstyle to gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"ToxOptimism":{"java":1168,"md":0,"fxml":0,"sh":1,"bat":2,"gradle":8,"txt":40}},"authorContributionVariance":{"ToxOptimism":104175.92},"authorDisplayNameMap":{"ToxOptimism":"YAP ..O YI"}}
