[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"# bearbot.BearBot project template","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"1. After that, locate the `src/main/java/bearbot.BearBot.java` file, right-click it, and choose `Run bearbot.BearBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"izniy":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"    mainClass.set(\"bearbot.BearBot\")","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    archiveBaseName \u003d \"bearbot\"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"izniy":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"# bearbot.BearBot User Guide","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"izniy":1,"-":29}},{"path":"src/main/java/bearbot/BearBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import bearbot.commands.Command;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.BearBotException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"import bearbot.parser.Parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"import bearbot.storage.Storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"import bearbot.ui.Ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":" * Main logic for BearBot, handling task management and user commands.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"public class BearBot {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    private static final String FILE_PATH \u003d \"./data/bearbot.txt\"; // Path to store tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"     * Initializes BearBot by loading tasks from storage.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    public BearBot() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"        TaskList tempTaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"            tempTaskList \u003d new TaskList(storage); // Load tasks from storage","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Error loading tasks. Starting with an empty list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"            tempTaskList \u003d new TaskList(storage, new ArrayList\u003c\u003e()); // Start fresh if loading fails","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d tempTaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"     * Runs BearBot in console mode.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"    public void run() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"        String input;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"        while (true) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"                handleExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"                break;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"            try {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"                Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"                command.execute();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"            } catch (BearBotException e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"izniy"},"content":"                System.out.println(\"UNKNOWN ERROR TO BEARS\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"izniy"},"content":"        saveTasksOnExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"izniy"},"content":"     * Processes user input and returns a response for GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"izniy"},"content":"     * @param input The user\u0027s command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"izniy"},"content":"     * @return The response generated by BearBot.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"izniy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"izniy"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"izniy"},"content":"            Platform.exit(); // Close the GUI","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"izniy"},"content":"            return handleExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"izniy"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"izniy"},"content":"            return command.execute();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"izniy"},"content":"        } catch (BearBotException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"izniy"},"content":"            return e.getMessage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"izniy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"izniy"},"content":"            return \"UNKNOWN ERROR TO BEARS\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"izniy"},"content":"     * Handles the \"bye\" command for both Console and GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"izniy"},"content":"     * @return Goodbye message for the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"izniy"},"content":"    private String handleExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"izniy"},"content":"        saveTasksOnExit();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"izniy"},"content":"        return \"Goodnight! BearBot is entering hibernation... 🐻\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"izniy"},"content":"     * Saves tasks before exiting the application.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"izniy"},"content":"    private void saveTasksOnExit() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"izniy"},"content":"            storage.save(taskList.getTasks()); // Save before exiting","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Tasks saved successfully!\"); // Log to console","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"izniy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Error saving tasks.\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"izniy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"izniy"},"content":"        new BearBot().run();","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"izniy":116}},{"path":"src/main/java/bearbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"public class Launcher {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":12}},{"path":"src/main/java/bearbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import bearbot.ui.MainWindow;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    private BearBot bearBot \u003d new BearBot();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBearBot(bearBot);  // inject the BearBot instance","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"            stage.show();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":32}},{"path":"src/main/java/bearbot/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.*;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.*;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":" * Supports adding three types of tasks:","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":" * {@link Todo} - A simple task without a deadline.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":" * {@link Deadline} - A task with a specific due date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":" * {@link Event} - A task that occurs within a date range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    private final String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    private final LocalDate date;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"     * Constructs an {@code AddCommand} to add a {@link Todo} task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"     * @param taskList    The task list to which the task will be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"    public AddCommand(TaskList taskList, String description) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"        this.date \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"        this.startDate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"        this.endDate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"     * Constructs an {@code AddCommand} to add a {@link Deadline} task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"     * @param taskList    The task list to which the task will be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"     * @param date        The due date of the deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"    public AddCommand(TaskList taskList, String description, LocalDate date) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"        this.startDate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"        this.endDate \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"     * Constructs an {@code AddCommand} to add an {@link Event} task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"     * @param taskList    The task list to which the task will be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"     * @param startDate   The start date of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"     * @param endDate     The end date of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"    public AddCommand(TaskList taskList, String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"izniy"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"izniy"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"izniy"},"content":"        this.date \u003d null;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"izniy"},"content":"     * Executes the command by adding the appropriate task to the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"izniy"},"content":"     * The task is added to the task list, and a confirmation message is displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"izniy"},"content":"     * @throws BearBotException If the task list reaches its limit.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"izniy"},"content":"    public String execute() throws BearBotException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"izniy"},"content":"        if (this.taskList.getSize() \u003e\u003d 100) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"izniy"},"content":"            throw new TaskLimitException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"izniy"},"content":"        Task newTask;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"izniy"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"izniy"},"content":"            newTask \u003d new Deadline(description, date, false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"izniy"},"content":"        } else if (startDate !\u003d null \u0026\u0026 endDate !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"izniy"},"content":"            newTask \u003d new Event(description, startDate, endDate, false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"izniy"},"content":"        } else {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"izniy"},"content":"            newTask \u003d new Todo(description, false);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"izniy"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"izniy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"izniy"},"content":"                + newTask.toString() + \"\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"izniy"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"izniy"},"content":"/*","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"izniy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"izniy"},"content":"    private final String input;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"izniy"},"content":"    // assigned once and cannot be modified","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"izniy"},"content":"    public AddCommand(TaskList taskList, String input) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"izniy"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"izniy"},"content":"    public void execute() throws BearBotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"izniy"},"content":"        if (this.taskList.getSize() \u003e\u003d 100) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"izniy"},"content":"            throw new TaskLimitException();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"izniy"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"izniy"},"content":"        if (words.length \u003c 2 || words[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"izniy"},"content":"            throw new EmptyDescriptionException(words[0]);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"izniy"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"izniy"},"content":"        String taskDetails \u003d words[1];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"izniy"},"content":"        switch (taskType) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"izniy"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"izniy"},"content":"                taskList.addTask(new Todo(taskDetails, false));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"izniy"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"izniy"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"izniy"},"content":"                if (!taskDetails.contains(\" /by \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"izniy"},"content":"                    throw new BearBotException(\"Deadline task must contain \u0027/by\u0027 date.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"izniy"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"izniy"},"content":"                String[] deadlineTaskParts \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"izniy"},"content":"                try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"izniy"},"content":"                    LocalDate dueDate \u003d LocalDate.parse(deadlineTaskParts[1].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"izniy"},"content":"                    taskList.addTask(new Deadline(deadlineTaskParts[0], dueDate, false));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"izniy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"izniy"},"content":"                    throw new BearBotException(\"Invalid date format for deadline! Use YYYY-MM-DD.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"izniy"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"izniy"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"izniy"},"content":"            case \"event\":","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"izniy"},"content":"                if (!taskDetails.contains(\" /from \") || !taskDetails.contains(\" /to \")) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"izniy"},"content":"                    throw new BearBotException(\"Event task must contain \u0027/from\u0027 and \u0027/to\u0027 fields.\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"izniy"},"content":"                }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"izniy"},"content":"                String[] eventParts \u003d words[1].split(\" /from | /to \", 3);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"izniy"},"content":"                try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"izniy"},"content":"                    LocalDate startDate \u003d LocalDate.parse(eventParts[1].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"izniy"},"content":"                    LocalDate endDate \u003d LocalDate.parse(eventParts[2].trim());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"izniy"},"content":"                    taskList.addTask(new Event(eventParts[0], startDate, endDate, false));  // ✅ Now Event enforces validity","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"izniy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"izniy"},"content":"                    throw new BearBotException(\"Invalid date format for event! Use yyyy-mm-dd.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"izniy"},"content":"                }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"izniy"},"content":"                break;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"izniy"},"content":"            default:","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"izniy"},"content":"                throw new BearBotException(\"Invalid command: \" + taskType);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"izniy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"izniy"},"content":"        System.out.println(taskList.getSize().get(taskList.getSize() - 1));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"izniy"},"content":"        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"izniy"},"content":"*/","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"izniy":157}},{"path":"src/main/java/bearbot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":" * All specific commands must extend this class and implement the {@code execute} method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"     * Executes the command\u0027s logic.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"     * Subclasses must provide their own implementation for this method.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"     * @throws Exception If an error occurs during command execution.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    public abstract String execute() throws Exception;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"izniy":16}},{"path":"src/main/java/bearbot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.*;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":" * This command removes the task at the specified index and displays a confirmation message.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"    private final int index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     * Constructs a {@code DeleteCommand} with the specified task list and index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     * @param index    The zero-based index of the task to be deleted.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    public DeleteCommand(TaskList taskList, int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"     * Executes the command by deleting the task at the specified index from the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     * If the index is invalid (out of range), a {@link BearBotException} is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     * Otherwise, the task is removed, and a confirmation message is displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     * @throws BearBotException If the specified index is out of range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"    public String execute() throws BearBotException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Task index is out of range!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"        Task toRemove \u003d taskList.getOneTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"        taskList.removeTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"        return \"Out of the honey jar! 🍯\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"                + toRemove.toString() + \"\\n\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":48}},{"path":"src/main/java/bearbot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     * Constructs a FindCommand with the specified task list and keyword.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * @param keyword  The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    public FindCommand(TaskList taskList, String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    public String execute() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"            return \"Honey jar is empty! No matching tasks found!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"        } else {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"            StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"                response.append(i + 1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"            return response.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"izniy":40}},{"path":"src/main/java/bearbot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * The {@code ListCommand} retrieves and displays all tasks currently stored in the {@link TaskList}.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"     * Constructs a {@code ListCommand} with the specified task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"     * @param taskList The task list whose tasks will be displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"     * Executes the command by printing all tasks in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"     * If the task list is empty, it still displays a message without tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    public String execute() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"            response.append(i + 1).append(\". \").append(taskList.getOneTask(i)).append(\"\\n\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"        return response.toString();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"izniy":37}},{"path":"src/main/java/bearbot/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.BearBotException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" * Updates the status of a task at a specified index and confirms the action by displaying the updated task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    private final int index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"     * Constructs a {@code MarkCommand} with the specified task list and task index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     * @param taskList The task list that contains the task to be marked.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     * @param index    The zero-based index of the task to be marked as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    public MarkCommand(TaskList taskList, int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"     * Executes the command by marking the task at the specified index as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"     * If the index is invalid (out of range), a {@link BearBotException} is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     * Otherwise, the task is updated, and a confirmation message is displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     * @throws BearBotException If the specified index is out of range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    public String execute() throws BearBotException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Task index is out of range!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        taskList.markTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.getOneTask(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":41}},{"path":"src/main/java/bearbot/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.commands;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.BearBotException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" * Updates the status of a task at a specified index,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" * marking it as not done and confirming the action by displaying the updated task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    private final int index;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task list and task index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     * @param taskList The task list that contains the task to be unmarked.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * @param index    The zero-based index of the task to be marked as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    public UnmarkCommand(TaskList taskList, int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"     * Executes the command by marking the task at the specified index as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     * If the index is invalid (out of range), a {@link BearBotException} is thrown.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     * Otherwise, the task is updated, and a confirmation message is displayed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     * @throws BearBotException If the specified index is out of range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    public String execute() throws BearBotException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Task index is out of range!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskList.getOneTask(index);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":43}},{"path":"src/main/java/bearbot/exceptions/BearBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"public class BearBotException extends Exception {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"RAWR! This is not Bear Behaviour! \";","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"    public BearBotException() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"        super(DEFAULT_MESSAGE);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"    public BearBotException(String message) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"        super(DEFAULT_MESSAGE + message);","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":13}},{"path":"src/main/java/bearbot/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"public class EmptyDescriptionException extends BearBotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"    public EmptyDescriptionException(String taskType) {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"        super(\"The description of a \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":7}},{"path":"src/main/java/bearbot/exceptions/TaskLimitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"public class TaskLimitException extends BearBotException {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"    public TaskLimitException() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"        super(\"Oh dear! Your honey jar is full!\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":7}},{"path":"src/main/java/bearbot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.parser;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.commands.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import bearbot.exceptions.BearBotException;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.TaskList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"public class Parser {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    public static Command parse(String input, TaskList taskList) throws BearBotException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"        case \"list\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"            return new ListCommand(taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"        case \"mark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"            return new MarkCommand(taskList, Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        case \"unmark\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"            return new UnmarkCommand(taskList, Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        case \"delete\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"            return new DeleteCommand(taskList, Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"            return new AddCommand(taskList, words[1]); // Todo doesn\u0027t need a date","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"            return parseDeadline(words[1], taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"        case \"event\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"            return parseEvent(words[1], taskList);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"        case \"find\":","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"                System.out.println(\"Please provide a keyword to search for.\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"                return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            return new FindCommand(taskList, words[1]);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Unknown command: \" + commandWord);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"    private static Command parseDeadline(String args, TaskList taskList) throws BearBotException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"        String[] parts \u003d args.split(\" /by \", 2);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Deadline must be in format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"            LocalDate date \u003d LocalDate.parse(parts[1]); //","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"            return new AddCommand(taskList, parts[0], date);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Invalid date format! Use yyyy-mm-dd.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"    private static Command parseEvent(String args, TaskList taskList) throws BearBotException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"        String regex \u003d \"(.+) /from (.+) /to (.+)\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Event must be in format: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"izniy"},"content":"            LocalDate startDate \u003d LocalDate.parse(matcher.group(2));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"izniy"},"content":"            LocalDate endDate \u003d LocalDate.parse(matcher.group(3));","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"izniy"},"content":"            return new AddCommand(taskList, matcher.group(1), startDate, endDate);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"izniy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"izniy"},"content":"            throw new BearBotException(\"Invalid date format! Use yyyy-mm-dd.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"izniy":73}},{"path":"src/main/java/bearbot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.tasks.Task;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"public class Storage {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"    private final String filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    // Loads tasks from file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Warning: No previous data found. Starting fresh.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"            System.out.println();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"            return tasks; // No existing data, return empty list","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"            String line;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"                tasks.add(Task.fromDataString(line)); // Convert file data back into tasks","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Warning: No previous data found. Starting fresh.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            System.out.println();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        return tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"    // Saves tasks to file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        // gets parent directory and creates it if missing to ensure directory exists","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"                writer.write(task.toDataString() + System.lineSeparator());","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"            }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"            // toDataString() allows each task type to implement write itself in the proper format","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"izniy":55}},{"path":"src/main/java/bearbot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * Represents a Deadline task that must be completed by a specific date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" * A Deadline task stores a description, due date, and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"     * Constructs a new Deadline task with the specified description, due date, and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     * @param dueDate     The due date of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     * @param isDone      {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    public Deadline(String description, LocalDate dueDate, boolean isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"     * Converts this Deadline task into a formatted string suitable for saving to a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"D | 1 | description | YYYY-MM-DD\"} for completed tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"     * and {@code \"D | 0 | description | YYYY-MM-DD\"} for incomplete tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     * The due date is stored in the {@code YYYY-MM-DD} format for easier parsing upon loading.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     * @return A string representation of the Deadline task in storage format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + dueDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"        // since dueDate is a LocalDate, Java automatically converts it to \"YYYY-MM-DD\"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        // store as YYYY-MM-DD --\u003e easier to parse when loading","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"     * Returns a string representation of this Deadline task, including its type, status, and due date.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"[D][X] description (by: MMM d yyyy)\"} for completed deadlines","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"     * and {@code \"[D][ ] description (by: MMM d yyyy)\"} for incomplete deadlines.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"     * The due date is formatted using {@code \"MMM d yyyy\"} (e.g., \"Feb 1 2025\").","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(formatter) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"        // format dueDate using formatter","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":55}},{"path":"src/main/java/bearbot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * Represents an Event task that occurs over a specified date range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" * An Event task stores a description, start date, end date, and its completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    protected LocalDate start;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    protected LocalDate end;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"     * Constructs a new Event task with the specified description, start date, end date, and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     * @param start       The starting date of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * @param end         The ending date of the event.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     * @param isDone      {@code true} if the event is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    public Event(String description, LocalDate start, LocalDate end, boolean isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     * Converts this Event task into a formatted string suitable for saving to a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"E | 1 | description | YYYY-MM-DD | YYYY-MM-DD\"} for completed tasks","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     * and {@code \"E | 0 | description | YYYY-MM-DD | YYYY-MM-DD\"} for incomplete tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     * @return A string representation of the Event task in storage format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"     * Returns a string representation of this Event task, including its type, status, and date range.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"[E][X] description (from: MMM d yyyy to: MMM d yyyy)\"} for completed events","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"     * and {@code \"[E][ ] description (from: MMM d yyyy to: MMM d yyyy)\"} for incomplete events.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"     * @return A string representing the Event task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(formatter) + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":52}},{"path":"src/main/java/bearbot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":" * It serves as a base class for different types of tasks such as {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"public abstract class Task {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"    protected String description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"     * Constructs a new {@code Task} with the specified description and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"     * @param isDone      {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"     * Converts the task into a formatted string suitable for data storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"     * This method must be implemented by all subclasses.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"     * @return A formatted string representing the task data.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"    public abstract String toDataString();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     * Creates a {@code Task} object from a formatted data string.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"     * Determines the correct subclass of {@code Task} (Todo, Deadline, Event) based on the stored type.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"     * @param data A string containing task data formatted as \"Type | isDone | Description | (Optional Dates)\".","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"     * @return The corresponding {@code Task} object.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"     * @throws IllegalArgumentException if the task type in the storage file is invalid.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"    public static Task fromDataString(String data) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"        String[] parts \u003d data.split(\" \\\\| \");  // | is a regex OR operator","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        switch (type) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"        case \"T\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"        case \"D\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"            return new Deadline(description, LocalDate.parse(parts[3]), isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"        case \"E\":","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"            return new Event(description, LocalDate.parse(parts[3]), LocalDate.parse(parts[4]), isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"        default:","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"            throw new IllegalArgumentException(\"Invalid task type in storage file\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"     * @return The task description.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"izniy"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"izniy"},"content":"        return this.description;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"izniy"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"izniy"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"izniy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"izniy"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"izniy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"izniy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"izniy"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"izniy"},"content":"     * @return A string representing the completion status: {@code \"[X]\"} if done, {@code \"[ ]\"} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"izniy"},"content":"    public String getStatus() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"izniy"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"izniy"},"content":"     * Returns the string representation of the task, including status and description.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"izniy"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"izniy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"izniy"},"content":"        return getStatus() + \" \" + getDescription();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":99}},{"path":"src/main/java/bearbot/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.storage.Storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import java.io.*;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":" * Represents a list of tasks managed by the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":" * This class allows adding, removing, marking, and unmarking tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":" * It also handles saving and loading tasks using {@code Storage}.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"public class TaskList {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * Constructs a TaskList with a given storage and an initial list of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"     * @param storage The storage handler for saving and loading tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"     * @param tasks   The initial list of tasks to be managed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    public TaskList(Storage storage, List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"     * Constructs a TaskList by loading tasks from storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"     * If no previous data is found, initializes an empty task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     * @param storage The storage handler for saving and loading tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"        // takes Storage object as input which allows TaskList to load tasks from a file","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        List\u003cTask\u003e loadedTasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"            loadedTasks \u003d storage.load();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"        } catch (IOException e) { // file missing or corrupt (load() throws IOException)","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"            loadedTasks \u003d new ArrayList\u003c\u003e(); // instead of crashing, recover by using empty task list","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Warning: No previous data found. Starting fresh.\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"            System.out.println();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"     * Adds a new task to the task list and saves the updated list to storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"        saveTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"     * Removes a task from the task list by its index and updates storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"izniy"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"izniy"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"izniy"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"izniy"},"content":"        saveTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"izniy"},"content":"     * Marks a task as done by its index and updates storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"izniy"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"izniy"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"izniy"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"izniy"},"content":"        saveTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"izniy"},"content":"     * Unmarks a task as not done by its index and updates storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"izniy"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"izniy"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"izniy"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"izniy"},"content":"        saveTasks();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"izniy"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"izniy"},"content":"        return tasks.stream()","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"izniy"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"izniy"},"content":"                .toList();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"izniy"},"content":"     * Saves the current task list to storage.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"izniy"},"content":"     * Prints an error message if saving fails.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"izniy"},"content":"    private void saveTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"izniy"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"izniy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"izniy"},"content":"            System.out.println(\"Error: Unable to save tasks!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"izniy"},"content":"            System.out.println();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"izniy"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"izniy"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"izniy"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"izniy"},"content":"        return tasks;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"izniy"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"izniy"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"izniy"},"content":"    public int getSize() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"izniy"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"izniy"},"content":"     * Retrieves a specific task by its index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"izniy"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"izniy"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"izniy"},"content":"    public Task getOneTask(int index) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"izniy"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-29","isFullCredit":false}],"authorContributionMap":{"izniy":135}},{"path":"src/main/java/bearbot/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":" * Represents a Todo task, which is a simple task without a specific deadline or event duration.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":" * A Todo task stores a description and whether it is marked as done.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"     * Constructs a new Todo task with the specified description and completion status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"     * @param isDone      {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     * Converts this Todo task into a formatted string suitable for saving to a file.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"T | 1 | description\"} for completed tasks and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"     * {@code \"T | 0 | description\"} for incomplete tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"     * @return A string representation of the Todo task in storage format.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    public String toDataString() {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"     * Returns a string representation of this Todo task, including its type and status.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"     * The format follows: {@code \"[T][X] description\"} for completed tasks and","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"     * {@code \"[T][ ] description\"} for incomplete tasks.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"     * @return A string representing the Todo task.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"    @Override","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"    public String toString() {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":42}},{"path":"src/main/java/bearbot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"    private void flip() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"    public static DialogBox getBearBotDialog(String text, Image img) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"        db.flip();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"        return db;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":61}},{"path":"src/main/java/bearbot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import bearbot.BearBot;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"    private BearBot bearBot;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"    private Image mochaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mocha.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"    private Image milkImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/milk.png\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"     * Injects the Duke instance","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"    public void setBearBot(BearBot b) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"        bearBot \u003d b;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"izniy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"izniy"},"content":"    @FXML","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"izniy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"izniy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"izniy"},"content":"        String response \u003d bearBot.getResponse(input);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"izniy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"izniy"},"content":"                DialogBox.getUserDialog(input, mochaImage),","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"izniy"},"content":"                DialogBox.getBearBotDialog(response, milkImage)","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"izniy"},"content":"        );","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"izniy"},"content":"        // If \"bye\" was entered, close GUI after displaying the response","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"izniy"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"izniy"},"content":"            Platform.exit(); // Gracefully closes JavaFX application","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"izniy"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"izniy"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":61}},{"path":"src/main/java/bearbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.ui;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":" * Handles the display of system messages to the user.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":" * Provides methods for showing welcome and goodbye messages.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"public class Ui {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"        System.out.println(\" ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"        System.out.println(\" Hello! I\u0027m BearBot, your trusted Bear companion!\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"        System.out.println(\" ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"     * Displays a goodbye message when the user exits the program.","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        System.out.println(\" ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"        System.out.println(\" ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ ฅ՞•ﻌ•՞ฅ \");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-23","isFullCredit":false}],"authorContributionMap":{"izniy":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"            fx:controller\u003d\"bearbot.ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"                text\u003d\"Send\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"                      prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"izniy":44}},{"path":"src/test/java/bearbot/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"class TaskTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"    void markTaskAsDone_correctlyUpdatesStatus() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"        Task task \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"        assertTrue(task.isDone, \"Task should be marked as done\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"    void markTaskAsNotDone_correctlyUpdatesStatus() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"        Task task \u003d new Todo(\"Read book\", true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"    void getStatus_correctlyReturnsStatus() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"        Task task1 \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"        Task task2 \u003d new Todo(\"Write report\", true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"        assertEquals(\"[ ]\", task1.getStatus(), \"Unmarked task should have [ ] status\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"        assertEquals(\"[X]\", task2.getStatus(), \"Marked task should have [X] status\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"izniy":30}},{"path":"src/test/java/bearbot/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"package bearbot.tasks;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"izniy"},"content":"class TodoTest {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"izniy"},"content":"    void constructor_createsTodoWithCorrectDescription() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"izniy"},"content":"        Todo todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"izniy"},"content":"        assertEquals(\"Read book\", todo.getDescription(), \"Description should match the given string\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"izniy"},"content":"    void constructor_initializesTaskAsNotDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"        Todo todo \u003d new Todo(\"Finish homework\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"izniy"},"content":"        assertFalse(todo.isDone, \"Newly created task should not be marked as done\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"izniy"},"content":"    void markAsDone_changesStatusCorrectly() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"izniy"},"content":"        Todo todo \u003d new Todo(\"Exercise\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"izniy"},"content":"        assertTrue(todo.isDone, \"Task should be marked as done\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"izniy"},"content":"    void markAsNotDone_changesStatusCorrectly() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"izniy"},"content":"        Todo todo \u003d new Todo(\"Exercise\", true); // Start as done","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"izniy"},"content":"        todo.markAsNotDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"izniy"},"content":"        assertFalse(todo.isDone, \"Task should be marked as not done\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"izniy"},"content":"    @Test","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"izniy"},"content":"    void toString_formatsCorrectly() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"izniy"},"content":"        Todo todo \u003d new Todo(\"Write report\", false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"izniy"},"content":"        assertEquals(\"[T][ ] Write report\", todo.toString(), \"String format should match expected output\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"izniy"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"izniy"},"content":"        assertEquals(\"[T][X] Write report\", todo.toString(), \"Task should show as completed\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"izniy"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"izniy"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"izniy"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"izniy":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"izniy"},"content":"todo read book","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"izniy"},"content":"list","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"izniy"},"content":"mark 1","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"izniy"},"content":"bye","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"izniy":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"izniy"},"content":"java -classpath ..\\bin bearbot.BearBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"izniy":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"izniy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bearbot/*.java","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"izniy"},"content":"java -classpath ../bin bearbot.BearBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"izniy":2}}]
