[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"# NiniNana project template","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _NiniNana_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"1. After that, locate the `src/main/java/NiniNana.java` file, right-click it, and choose `Run NiniNana.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    mainClass.set(\"NiniNana\")","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    archiveBaseName \u003d \"Nininana\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":2,"-":39}},{"path":"src/main/java/NiniNana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"public class NiniNana {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private final Ui ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    private final Storage storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private final Parser parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String FILENAME \u003d \"./data/chat.txt\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    public NiniNana(Ui ui, Storage storage, Parser parser, Scanner scanner) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public NiniNana() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        this(new Ui(), new Storage(), new Parser(), new Scanner(System.in));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    public void run() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        while (true) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"            try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"                String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"                if (!input.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"                    Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"                    command.execute(taskList, ui, storage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"                    if (command.isExit()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"                        break;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"            } catch (NiniException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        new NiniNana().run();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":64}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private final Task task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        ui.showTaskAdded(task, taskList.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        storage.saveTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    public Task getTask() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        return this.task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        return false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":15}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        if (taskList.isValidIndex(taskIndex)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            Task removedTask \u003d taskList.removeTask(taskIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            ui.showTaskRemoved(removedTask, taskList.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            storage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + taskList.size() + \".\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        return this.taskIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":33}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        return true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":18}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":14}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private final int markIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    public MarkCommand(int markIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        if (taskList.isValidIndex(markIndex)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"                taskList.markTask(markIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"                Ui.printLineWithMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.getTask(markIndex));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"                storage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            } catch (IllegalStateException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + taskList.size() + \".\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        return this.markIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":33}},{"path":"src/main/java/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class SortCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        taskList.sortTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        Ui.printLineWithMessage(\"Tasks sorted by date!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":14}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.Storage;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.Ui;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private final int unmarkIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    public UnmarkCommand(int unmarkIndex) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        this.unmarkIndex \u003d unmarkIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        if (taskList.isValidIndex(unmarkIndex)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"                taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"                Ui.printLineWithMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.getTask(unmarkIndex));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"                storage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            } catch (IllegalStateException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + taskList.size() + \".\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        return this.unmarkIndex;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":33}},{"path":"src/main/java/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import commands.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.MissingArgumentException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"public class Parser {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    public Command parseCommand(String input) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        switch (commandType) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            case \"list\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"                return new ListCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            case \"bye\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"            case \"mark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"                try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"                    int markIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"                    return new MarkCommand(markIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid integer for task index\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"            case \"unmark\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"                try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"                    int unmarkIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"                    return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid integer for task index\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            case \"todo\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"                if (details.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Description for todo cannot be empty\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"                return new AddCommand(new ToDoTask(details));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"            case \"event\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"                if (details.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Description cannot be empty for event\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"                if (!details.contains(\"/from\") || !details.contains(\"/to\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"                String[] eventParts \u003d details.split(\"/from|/to\", 3);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"                if (eventParts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"                if (eventParts[0].trim().isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Description cannot be empty\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"                return new AddCommand(new EventTask(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"            case \"deadline\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"                if (details.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Description cannot be empty for deadline\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"                if (!details.contains(\"/by\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"                String[] deadlineParts \u003d details.split(\"/by\", 2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"                if (deadlineParts[0].trim().isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Description cannot be empty\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                return new AddCommand(new DeadlineTask(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            case \"sort\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"                return new SortCommand();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"            case \"delete\":","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"                try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"                    int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"                    return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidFormatException(\"Invalid task index. Please enter a valid number.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            default:","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidCommandException(\"Unknown command\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":87}},{"path":"src/main/java/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.io.File;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"public class Storage {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    private final String fileName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public Storage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        this.fileName \u003d \"./data/chat.txt\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private void ensureFileDirectoryExists() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        File directory \u003d new File(new File(fileName).getParent());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"            boolean isCreated \u003d directory.mkdirs();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"            if (!isCreated) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"                Ui.printLineWithMessage(\"Failed to create the \u0027data\u0027 directory for saving tasks.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"            return tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"                Task task \u003d Task.deserialize(line);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"                tasks.add(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"            Ui.printLineWithMessage(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"            Ui.printLineWithMessage(e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        return tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    public void saveTask(Task task) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName, true))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            writer.write(task.serialize() + System.lineSeparator());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            throw new NiniException(\"Error saving task: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    public void overwriteTasks(ArrayList\u003cTask\u003e tasks) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName))) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                writer.write(task.serialize() + System.lineSeparator());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"            throw new NiniException(\"Error overwriting tasks: \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":79}},{"path":"src/main/java/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class TaskList {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"        return tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    public int size() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isValidIndex(int index) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    public void sortTasks() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        tasks.sort((task1, task2) -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            LocalDateTime date1 \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"            LocalDateTime date2 \u003d null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"            if (task1 instanceof DeadlineTask) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"                date1 \u003d ((DeadlineTask) task1).getDeadline();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            } else if (task1 instanceof EventTask) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"                date1 \u003d ((EventTask) task1).getStartDateTime(); // Assume tasks.EventTask has a startDateTime field","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"            if (task2 instanceof DeadlineTask) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"                date2 \u003d ((DeadlineTask) task2).getDeadline();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"            } else if (task2 instanceof EventTask) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"                date2 \u003d ((EventTask) task2).getStartDateTime();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"            if (date1 \u003d\u003d null \u0026\u0026 date2 \u003d\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"                return 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            } else if (date1 \u003d\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                return 1; // Null dates go to the end","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            } else if (date2 \u003d\u003d null) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"                return -1; // Null dates go to the end","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"            } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"                return date1.compareTo(date2); // Compare the dates","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":84}},{"path":"src/main/java/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"public class Ui {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    public static void printLine() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    public static void printLineWithMessage(String message) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(\" Hello! I\u0027m NiniNana\\n What can I do for you?\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(errorMessage);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"            System.out.println(\"The list is empty.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"                System.out.printf(\"%d. %s%n\", i + 1, tasks.get(i));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\", task, size));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    public void showTaskRemoved(Task task, int size) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\", task, size));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":51}},{"path":"src/main/java/data/chat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"T|0|234","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"T|0|123","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":2}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidCommandException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(\"INVALID COMMAND! \" + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/exceptions/InvalidDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidDataException extends NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidDataException(String message) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(\"INVALID DATA! \" + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidFormatException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(\"INVALID FORMAT! \" + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidTaskNumberException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(\"INVALID TASK NUMBER! \" + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class MissingArgumentException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(\"MISSING ARGUMENT! \" + message);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/exceptions/NiniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"public class NiniException extends Exception{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public NiniException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":7}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    public DeadlineTask(String description, String deadline) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    public DeadlineTask(String description, String deadline, boolean isDone) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        return this.deadline;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"D|%d|%s|%s\", isDone ? 1 : 0, description, deadline.format(INPUT_FORMATTER));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        return \"[D]\" + super.toString() + \" (deadline: \" + deadline.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":46}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public EventTask(String description, String from, String to) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"            this.from \u003d LocalDateTime.parse(from.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"            this.to \u003d LocalDateTime.parse(to.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            if (this.from.isAfter(this.to)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidFormatException(\"The start time must be earlier than the end time.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    public EventTask(String description, String from, String to, boolean isDone) throws NiniException{","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        super(description,isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"            this.from \u003d LocalDateTime.parse(from.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"            this.to \u003d LocalDateTime.parse(to.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"            if (this.from.isAfter(this.to)) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidFormatException(\"The start time must be earlier than the end time.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        return this.from;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"E|%d|%s|%s|%s\", isDone ? 1 : 0, description, from.format(INPUT_FORMATTER), to.format(INPUT_FORMATTER));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        return \"[E]\" + super.toString() + \" ( from: \" + from.format(OUTPUT_FORMATTER) + \" to: \" + to.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        return this.to;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":60}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidDataException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class Task {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    protected String description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    public Task (String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public Task (String description, boolean isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        this(description);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        return description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        return isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"            throw new IllegalStateException(\"Task is already marked as done\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        if (!this.isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"            throw new IllegalStateException(\"Task is already unmarked.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        return null;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    };","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    public static Task deserialize(String data) throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        if (data \u003d\u003d null || data.isEmpty()) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Error: Cannot deserialize null or empty data.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        final int TYPE_INDEX \u003d 0;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        final int DONE_INDEX \u003d 1;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Error: Incomplete data for task deserialization.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        if (!parts[DONE_INDEX].equals(\"1\") \u0026\u0026 !parts[DONE_INDEX].equals(\"0\")) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Data has invalid values for is_done status\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        String type \u003d parts[TYPE_INDEX].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        boolean isDone \u003d parts[DONE_INDEX].trim().equals(\"1\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        String description \u003d parts[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"            switch (type) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"                case \"T\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"                    return new ToDoTask(description, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"                case \"D\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidDataException(\"Error: Missing deadline information.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"                    String deadlineStr \u003d parts[3].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineStr, inputFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"                    return new DeadlineTask(description, deadlineStr, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"                case \"E\":","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"                    if (parts.length \u003c 5) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidDataException(\"Error: Missing event start or end time.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"                    String fromStr \u003d parts[3].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"                    String toStr \u003d parts[4].trim();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(fromStr, inputFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(toStr, inputFormatter);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"                    return new EventTask(description, fromStr, toStr, isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"                default:","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidDataException(\"Error: Unknown task type.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Error: Invalid date/time format during deserialization. \" + e.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":107}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    public ToDoTask(String description, boolean isDone) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        super(description,isDone);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"T|%d|%s\", isDone ? 1 : 0, description);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":24}},{"path":"src/test/java/NiniNanaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"public class NiniNanaTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(2,2);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":12}},{"path":"src/test/java/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import commands.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"class ParserTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    void testParseListCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"list\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    void testParseExitCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"bye\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    void testParseMarkCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"mark 1\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(0, ((MarkCommand) command).getTaskIndex());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    void testParseUnmarkCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"unmark 2\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(1, ((UnmarkCommand) command).getTaskIndex());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddToDoCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"todo Buy groceries\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof ToDoTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", ((AddCommand) command).getTask().getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddEventCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"event Meeting /from 1/1/2025 1000 /to 1/1/2025 1200\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof EventTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        EventTask task \u003d (EventTask) ((AddCommand) command).getTask();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Meeting\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T10:00\", task.getStartDateTime().toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T12:00\", task.getEndDateTime().toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddDeadlineCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"deadline Submit report /by 1/1/2025 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof DeadlineTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        DeadlineTask task \u003d (DeadlineTask) ((AddCommand) command).getTask();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T18:00\", task.getDeadline().toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    void testParseSortCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"sort\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof SortCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    void testParseDeleteCommand() throws NiniException {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"delete 3\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(2, ((DeleteCommand) command).getTaskIndex());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseCommand(\"invalidcommand\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"    void testParseMarkCommandWithInvalidIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"mark abc\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"    void testParseUnmarkCommandWithInvalidIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"unmark abc\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddToDoCommandWithEmptyDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"todo \"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddEventCommandWithInvalidFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"event Meeting /from 10:00\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddDeadlineCommandWithInvalidFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"deadline Submit report\"));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":127}},{"path":"src/test/java/components/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"class TaskListTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    void testAddTask() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    void testRemoveTask() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(task, removedTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    void testMarkTask() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    void testUnmarkTask() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        task.markAsDone();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    void testIsValidIndex() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(taskList.isValidIndex(0));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        assertFalse(taskList.isValidIndex(1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    void testSortTasks() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask deadlineTask \u003d new DeadlineTask(\"Deadline Task\", \"25/12/2025 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"            EventTask eventTask \u003d new EventTask(\"Event Task\", \"24/12/2025 0900\", \"24/12/2025 1700\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"            Task simpleTask \u003d new Task(\"Simple Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(simpleTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(eventTask);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"            taskList.sortTasks();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(eventTask, taskList.getTask(0));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(deadlineTask, taskList.getTask(1));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(simpleTask, taskList.getTask(2));","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    void testSize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":107}},{"path":"src/test/java/exceptions/InvalidCommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"class InvalidCommandExceptionTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    void testExceptionMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        InvalidCommandException exception \u003d new InvalidCommandException(\"Unknown command\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"INVALID COMMAND! Unknown command\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    void testExceptionWithDifferentMessage() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        InvalidCommandException exception \u003d new InvalidCommandException(\"Command not recognised\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"INVALID COMMAND! Command not recognised\", exception.getMessage());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":20}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    public void testConstructorWithValidInput() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025,12,25,18,0), task.getDeadline());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithInvalidDeadlineFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"            new DeadlineTask(\"Submit report\", \"25-12-2025 1800\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInputAndIsDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 18, 0), task.getDeadline());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"D|1|Submit report|25/12/2025 1800\", task.serialize());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"[D][ ] Submit report (deadline: Dec 25 2025, 6:00pm)\", task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    void testInvalidDeadlineThrowsException() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            new DeadlineTask(\"Invalid date\", \"invalid-date\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    void testEdgeCaseDeadline() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"New Year\u0027s Eve Party\", \"31/12/2025 2359\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 31, 23, 59), task.getDeadline());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid edge case.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":80}},{"path":"src/test/java/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"class EventTaskTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInput() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Conference\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 9, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 17, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithInvalidFormat() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25-12-2025 0900\", \"25/12/2025 1700\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25/12/2025 0900\", \"invalid-date\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInputAndIsDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Conference\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 9, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 17, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"E|0|Conference|25/12/2025 0900|25/12/2025 1700\", task.serialize());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"[E][ ] Conference ( from: Dec 25 2025, 9:00am to: Dec 25 2025, 5:00pm)\", task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    void testInvalidDateOrder() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25/12/2025 1700\", \"25/12/2025 0900\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    void testEdgeCaseDates() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Overnight Event\", \"31/12/2025 2300\", \"01/01/2026 0200\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 31, 23, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2026, 1, 1, 2, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid edge case.\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":86}},{"path":"src/test/java/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"class ToDoTaskTest {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\");","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidDescriptionAndIsDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", task.getDescription());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"T|1|Buy groceries\", task.serialize());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        task \u003d new ToDoTask(\"Buy groceries\", false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"T|0|Buy groceries\", task.serialize());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", false);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"[T][ ] Buy groceries\", task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"[T][X] Buy groceries\", task.toString());","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":41}},{"path":"text-ui-test/data/chat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"T|1|Clean the room","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"D|0|Submit assignment|2/12/2025 1800","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"D|0|Prepare slides|10/2/2025 1500","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"E|0|Team meeting|29/1/2025 1000|29/1/2025 1200","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"E|0|Workshop|30/1/2025 0900|30/1/2025 1700","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"todo Read a book","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"todo Clean the room","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"todo","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"todo","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"deadline Submit assignment /by 2/12/2025 1800","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"deadline Prepare slides /by 10/2/2025 1500","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"deadline Submit project","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"deadline Review /by Sunday","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"deadline Complete report /by 2025-01-31","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"event Team meeting /from 29/1/2025 1000 /to 29/1/2025 1200","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"event Workshop /from 30/1/2025 0900 /to 30/1/2025 1700","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"event Seminar /from /to 29/1/2025 1500","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"event Conference /from 30/1/2025","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"event Party","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"mark 2","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"mark 10","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"mark -1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"unmark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"unmark 3","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"unmark 10","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"delete 1","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"delete 10 # Invalid index (out of range)","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"sort","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"randomCommand","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"todo","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"deadline /by 2/12/2025 1800","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"event /from 10:00 AM /to 12:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"bye","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"if exist .\\data\\chat.TXT del .\\data\\chat.TXT","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"java -classpath ..\\bin NiniNana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":3,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"SRC_DIR\u003d\"../src/main/java\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"BIN_DIR\u003d\"../bin\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"TEST_DIR\u003d\"text-ui-test\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"INPUT_FILE\u003d\"$TEST_DIR/input.txt\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"EXPECTED_FILE\u003d\"$TEST_DIR/EXPECTED.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"ACTUAL_FILE\u003d\"$TEST_DIR/ACTUAL.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"OUTPUT_DATA\u003d\"$TEST_DIR/data/chat.txt\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"EXPECTED_UNIX_FILE\u003d\"$TEST_DIR/EXPECTED-UNIX.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"mkdir -p \"$BIN_DIR\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"# Clean previous build files","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"rm -rf \"$BIN_DIR\"/*","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"echo \"Compiling source files...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"if ! javac -cp \"$SRC_DIR\" -Xlint:none -d \"$BIN_DIR\" \"$SRC_DIR\"/*.java; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"echo \"Compilation successful.\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"# Delete previous test outputs","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"rm -f \"$ACTUAL_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"rm -f \"$OUTPUT_DATA\"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"# Run the program with input redirection and capture output","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"echo \"Running program...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"if ! java -classpath \"$BIN_DIR\" NiniNana \u003c \"$INPUT_FILE\" \u003e \"$ACTUAL_FILE\"; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    echo \"********** PROGRAM FAILURE **********\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    exit 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"fi","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"echo \"Program executed successfully.\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"# Convert to UNIX format","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"echo \"Converting files to UNIX format...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"cp \"$EXPECTED_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"dos2unix \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"# Compare actual output with expected output","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"echo \"Comparing output...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"if diff \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\" \u003e /dev/null; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    echo \"Differences found:\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    diff \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":37,"-":17}}]
