[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"# NiniNana project template","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _NiniNana_. Given below are instructions on how to use it.","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"1. After that, locate the `src/main/java/NiniNana.java` file, right-click it, and choose `Run NiniNana.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":3,"-":23}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    private String date;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public DeadlineTask(String name, String date) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(name);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":13}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    private String startDate;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"    private String endDate;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    public EventTask(String name, String startDate, String endDate) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"        super(name);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        return \"[E]\" + super.toString() + \" ( from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":14}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidCommandException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"src/main/java/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidFormatException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"src/main/java/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidTaskNumberException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"src/main/java/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class MissingArgumentException extends NiniException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    public MissingArgumentException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"src/main/java/NiniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class NiniException extends Exception{","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    public NiniException(String message) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":5}},{"path":"src/main/java/NiniNana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"public class NiniNana {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    private static final String GREETING \u003d \" Hello! I\u0027m NiniNana\\n What can I do for you?\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private enum Command {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        public static Command fromString(String command) throws InvalidCommandException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"            try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"                return Command.valueOf(command.toUpperCase());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static void printLine() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private static void printLineWithMessage(String message) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        System.out.println(message);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    private static void listTasks(ArrayList\u003cTask\u003e store) throws MissingArgumentException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        if (store.isEmpty()) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"            throw new MissingArgumentException(\"The list is empty. Add a task using \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            System.out.printf(\"%d. %s%n\", i + 1, store.get(i));","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        printLine();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    private static boolean isValidIndex(ArrayList\u003cTask\u003e store, int index) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c store.size();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    private static void markTask(ArrayList\u003cTask\u003e store, int index) throws InvalidTaskNumberException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        if (isValidIndex(store, index)) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"            store.get(index).markAsDone();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"            printLineWithMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + store.get(index));","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + store.size() + \".\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e store, int index) throws InvalidTaskNumberException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        if (isValidIndex(store, index)) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"            Task removedTask \u003d store.remove(index);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            printLineWithMessage(String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"                    removedTask, store.size()));","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + store.size() + \".\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"    private static void unmarkTask(ArrayList\u003cTask\u003e store, int index) throws InvalidTaskNumberException {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        if (isValidIndex(store, index)) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"            store.get(index).unmark();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"            printLineWithMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + store.get(index));","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Invalid task number. Please enter a number between 1 and \" + store.size() + \".\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    private static void HandleTaskCommand(ArrayList\u003cTask\u003e store, String input, Command command) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"            if (parts.length \u003c 2 \u0026\u0026 (command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK || command \u003d\u003d Command.DELETE)) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"                throw new MissingArgumentException(\"Please specify the task number. Example: \u0027mark 2\u0027.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"            if (command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK || command \u003d\u003d Command.DELETE) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"                try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"                    int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"                    if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"                        markTask(store, index);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"                    } else if (command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"                        unmarkTask(store, index);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"                    } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"                        deleteTask(store, index);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"                    return;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidTaskNumberException(\"Invalid task number. Please enter a valid number. Example: \u0027mark 2\u0027.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"                throw new MissingArgumentException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"            String details \u003d parts[1].trim();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"            switch (command) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"                case TODO:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"                    task \u003d new ToDoTask(details);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"                    break;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"                case DEADLINE:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"                    if (!details.contains(\"/by\")) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidFormatException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"                    String[] deadlineParts \u003d details.split(\"/by\", 2);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"                    if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidFormatException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"                    task \u003d new DeadlineTask(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"                    break;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"                case EVENT:","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"                    if (!details.contains(\"/from\") || !details.contains(\"/to\")) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidFormatException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"                    String[] eventParts \u003d details.split(\"/from|/to\");","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"                    if (eventParts.length \u003c 3 || eventParts[1].trim().isEmpty() || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"                        throw new InvalidFormatException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"                    task \u003d new EventTask(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim());","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"                    break;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"                default:","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"                    throw new InvalidCommandException(\"Unknown command.\");","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"            store.add(task);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"            printLineWithMessage(String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"                    task, store.size()));","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"            printLineWithMessage(e.getMessage());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"    private static void chat() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasohjj"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholasohjj"},"content":"            String input \u003d null;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholasohjj"},"content":"            do {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholasohjj"},"content":"                try {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholasohjj"},"content":"                    input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholasohjj"},"content":"                    if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholasohjj"},"content":"                        break;","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholasohjj"},"content":"                    String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholasohjj"},"content":"                    Command command \u003d Command.fromString(parts[0]);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholasohjj"},"content":"                    if (command \u003d\u003d Command.LIST) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholasohjj"},"content":"                        listTasks(store);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nicholasohjj"},"content":"                    } else {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nicholasohjj"},"content":"                        HandleTaskCommand(store, input, command);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nicholasohjj"},"content":"                    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nicholasohjj"},"content":"                } catch (NiniException e) {","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nicholasohjj"},"content":"                    printLineWithMessage(e.getMessage());","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nicholasohjj"},"content":"                }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nicholasohjj"},"content":"            } while (true);","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nicholasohjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(GREETING);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nicholasohjj"},"content":"        chat();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nicholasohjj"},"content":"        printLineWithMessage(GOODBYE);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":180}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"    private String name;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"    private boolean isDone;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"    public Task (String name) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    public void unmark() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", name);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":22}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"    public ToDoTask(String name) {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"        super(name);","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"todo Read a book","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"todo  ","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"todo","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"todo Organise files","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"deadline Submit project /by Sunday","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"deadline Prepare slides /by","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"deadline Complete report /by 2025-01-31","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"deadline Plan vacation /by","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"event Team meeting /from 10:00 AM /to 12:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"event Party /from 8:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"event Conference /from /to","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"event Workshop /from 9:00 AM /to 6:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"mark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"mark 10","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"mark -1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"mark 0","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"unmark 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"unmark 0","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"unmark 10","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"todo Clean the room","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"todo Clean","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"deadline Finish assignment /by 2025-01-25","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"deadline Review /by","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"event Workshop /from 9:00 AM /to 5:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"event Seminar /from /to 3:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"event Training /from 10:00 AM /to","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"list","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"mark 2","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"unmark 3","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"mark 5","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"randomCommand","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"event /from 10:00 AM /to 12:00 PM","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"deadline /by 2025-01-31","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"bye","lastModifiedDate":"2025-01-19","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"java -classpath ..\\bin NiniNana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"SRC_DIR\u003d\"../src/main/java\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"BIN_DIR\u003d\"../bin\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"TEST_DIR\u003d\"text-ui-test\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"INPUT_FILE\u003d\"$TEST_DIR/input.txt\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"EXPECTED_FILE\u003d\"$TEST_DIR/EXPECTED.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"ACTUAL_FILE\u003d\"$TEST_DIR/ACTUAL.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"EXPECTED_UNIX_FILE\u003d\"$TEST_DIR/EXPECTED-UNIX.TXT\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"# Create bin directory if it doesn\u0027t exist","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"mkdir -p \"$BIN_DIR\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"# Clean previous build files","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"rm -rf \"$BIN_DIR\"/*","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"echo \"Compiling source files...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"if ! javac -cp \"$SRC_DIR\" -Xlint:none -d \"$BIN_DIR\" \"$SRC_DIR\"/*.java; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"echo \"Compilation successful.\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"# Delete previous test outputs","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"rm -f \"$ACTUAL_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"# Run the program with input redirection and capture output","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"echo \"Running program...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"if ! java -classpath \"$BIN_DIR\" NiniNana \u003c \"$INPUT_FILE\" \u003e \"$ACTUAL_FILE\"; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    echo \"********** PROGRAM FAILURE **********\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    exit 1","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"fi","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"echo \"Program executed successfully.\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"# Convert to UNIX format","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"echo \"Converting files to UNIX format...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"cp \"$EXPECTED_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"dos2unix \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"# Compare actual output with expected output","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"echo \"Comparing output...\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"if diff \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\" \u003e /dev/null; then","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    echo \"Differences found:\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    diff \"$ACTUAL_FILE\" \"$EXPECTED_UNIX_FILE\"","lastModifiedDate":"2025-01-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":35,"-":17}}]
