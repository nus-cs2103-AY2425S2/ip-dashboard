[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"# Nininana ChatBot User Guide","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"Nininana is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Tete can help you manage your tasks more efficiently than traditional GUI apps. Tete also provides the additional benefit of commentary, to add some fun to the usually drab process of task management. ","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"## Sample Screenshot","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"![Ui.png](docs/Ui.png)","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"## Quick Start","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"### Prerequisites","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"Ensure you have **Java 17 or above** installed on your computer.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"1. **Download the latest .jar file**.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"2. Copy the file to your desired folder.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"3. Open a command terminal, navigate (`cd`) into the folder where you placed the jar file.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"4. Run the application using the command:","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"   ```sh","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"   java -jar Nininana.jar","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"5. A GUI should appear within a few seconds.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"6. Type a command in the command box and press Enter to execute it.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"### Example Commands","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"- `listtasks` : Lists all tasks.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"- `marktasks INDEX(S)` : Marks the task at the given index/indices as completed.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"- `unmarktasks INDEX(S)` : Unmarks the task at the given index/indices.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"- `todo DESCRIPTION` : Adds a ToDo task with the given description.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"- `deadline DESCRIPTION /by TIME` : Adds a Deadline task with a specified deadline [yyyy/mm/dd].","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"- `event DESCRIPTION /from START /to END` : Adds an Event task with a start [yyyy/mm/dd] and end [yyyy/mm/dd] time.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"- `deletetasks INDEX` : Deletes the task at the specified index/indices.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"- `findtasks KEYWORD` : Finds tasks containing the given keyword.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"- `bye` : Nininana saves existing tasks and closes. ","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"Refer to the **Features** section below for details on each command.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"## Features","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"### Adding a Task: `add`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"Adds a new task to the task list.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"todo DESCRIPTION","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"deadline DESCRIPTION /by TIME","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"event DESCRIPTION /from START /to END","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"**Examples:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"todo Read Book","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"deadline Submit Assignment /by 2025-02-02 [yyyy/mm/dd]","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"event Hackathon /from 2025-02-02 [yyyy/mm/dd] /to 2025-02-07 [yyyy/mm/dd]","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"### Listing All Tasks: `list`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"Shows a list of all tasks.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"listtasks","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"### Marking a Task as Done: `mark`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"Marks the specified task as done.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"marktasks INDEX","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"**Examples:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"marktasks 1","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"### Unmarking a Task: `unmark`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"Marks the specified task as not done.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"unmarktasks INDEX","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"**Examples:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"unmarktasks 1","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"### Finding Tasks: `find`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"Finds tasks whose names contain any of the given keywords.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"findtasks KEYWORD [MORE_KEYWORDS]","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"**Examples:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"findtasks book","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"findtasks assignment meeting","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"Deletes the specified task.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"deletetasks INDEX","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"**Examples:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"deletetasks 3","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"### Exiting the Program: `bye`","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"Nininana gives a goodbye message.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"**Format:**","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"bye","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"## Saving Data","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"- Tasks are **automatically saved** to the hard disk on closing the app.","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"## Editing the Data File","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"- The data is saved as a **text file**. ","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"- **Caution:** If you modify the file incorrectly, Nininana may fail to load the data properly.","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"## Command Summary","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"| **Action**       | **Format, Examples**                                    |","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"|------------------|---------------------------------------------------------|","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"| **Add tasks**    | `todo DESCRIPTION`                                      |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"|                  | `deadline DESCRIPTION /by TIME`                         |","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"|                  | `event DESCRIPTION /from START /to END`                 |","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"| **Mark tasks**   | `marktasks INDEX` (e.g., `mark 1`)                      |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"| **Unmark tasks** | `unmarktasks INDEX` (e.g., `unmark 1`)                  |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"| **Delete tasks** | `deletetasks INDEX` (e.g., `delete 3`)                  |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"| **Find tasks**   | `findtasks KEYWORD [MORE_KEYWORDS]` (e.g., `find book`) |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"| **List tasks**   | `listtasks`                                             |","lastModifiedDate":"2025-03-11T15:36:43","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"| **Bye**          | `bye`                                                   |","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"| **Help**         | `help`                                                  |","lastModifiedDate":"2025-03-11T15:31:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"For any further questions or issues, open an issue in the repository. Enjoy managing your tasks with Nininana!","lastModifiedDate":"2025-03-11T15:35:04","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":139,"-":8}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"checkstyle {","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    archiveBaseName \u003d \"Main\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":23,"-":39}},{"path":"data/chat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"T|1|123","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"T|0|123","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"T|0|345","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"T|0|23232","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"E|0|wewewe|12/12/1234 1900|11/11/1235 2000","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"T|0|123","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":6}},{"path":"data/contacts.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"contact123 | 123 | 234","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"# NiniNana User Guide","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2025-03-11T15:42:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11T15:42:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"## Introduction","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"NiniNana is a smart and intuitive chatbot that helps users efficiently manage their tasks and contacts. Whether you need to set deadlines, schedule events, or keep track of contacts, NiniNana is here to assist you with its user-friendly interface and powerful commands.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"---","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"## Adding Deadlines","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"NiniNana allows you to add tasks with deadlines to keep track of important due dates.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"### **Usage:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD HH:mm\u003e","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"### **Example:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"deadline Submit report /by 2025-03-15 23:59","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"  [D][ ] Submit report (by: 2025-03-15 23:59)","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"---","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"## Feature: Task Management","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"### **List All Tasks**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"Displays all tasks currently saved in NiniNana.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"#### **Usage:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"listtasks","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"#### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"1. [T][ ] Buy groceries","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"2. [D][ ] Submit report (by: 2025-03-15 23:59)","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"3. [E][ ] Team meeting (from: 2025-03-16 10:00 to: 2025-03-16 12:00)","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"### **Mark a Task as Done**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"Marks a specific task as completed.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"#### **Usage:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"marktasks \u003ctask index\u003e","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"#### **Example:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"marktasks 1","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"#### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"  [T][X] Buy groceries","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"---","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"## Feature: Contact Management","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"### **Add a Contact**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"Stores contact information including name, phone number, and email.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"#### **Usage:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"addcontact \u003cname\u003e /p \u003cphone number\u003e /e \u003cemail\u003e","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"#### **Example:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"addcontact John Doe /p 98765432 /e johndoe@example.com","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"#### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"Got it. I\u0027ve added this contact:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"  John Doe | 98765432 | johndoe@example.com","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"### **List All Contacts**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"Displays all saved contacts.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"#### **Usage:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"listcontacts","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"#### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"Here are your contacts:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"1. John Doe | 98765432 | johndoe@example.com","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"2. Jane Smith | 91234567 | janesmith@example.com","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"---","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"## Exiting NiniNana","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"To exit the chatbot, simply use:","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"bye","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"### **Expected Output:**","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"```plaintext","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"Shutting down. Try not to break anything while I\u0027m gone.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"```","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"---","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"For more information or detailed command usage, refer to the official documentation. Enjoy using NiniNana!","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":97,"-":25}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"import ui.Main;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"public class Launcher {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":11}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":" * Represents an abstract command that can be executed within the task management system.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":" * Subclasses should implement the {@code execute} method to define specific command behaviors.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"public abstract class Command {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    public abstract String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"                                   TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"     * Determines whether the command should cause the program to exit.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"     * By default, commands do not cause an exit.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"     * Subclasses can override this method if needed.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"     * @return {@code true} if the command should terminate the program, {@code false} otherwise.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        return false;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":28}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":" * This command displays a goodbye message and signals the application to terminate.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Shutting down. I’ll miss you... Just kidding. I feel nothing.\";","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list (not modified by this command).","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component (not used by this command).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"     * @return         The goodbye message","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * Indicates that this command will terminate the program.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     * @return {@code true}, indicating that this command triggers an exit.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        return true;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":39}},{"path":"src/main/java/commands/contacts/AddContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.contacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.Contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * This command updates the task list, notifies the user, and saves the task to storage.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE \u003d \"Error saving contact to storage: \";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_CONTACT_NULL \u003d \"Contact cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_CONTACT_LIST_NULL \u003d \"Contact list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_contactLIST_SIZE \u003d \"Contact list size should increase by 1\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private final Contact contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs an {@code AddCommand} with the specified contact.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * @param contact The contact to be added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    public AddContactCommand(Contact contact) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        assert contact !\u003d null : ASSERT_CONTACT_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the add contact command.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Adds the contact to the contact list, displays a confirmation message to the user,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * and saves the contact to storage.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The contact list to which the contact is added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage  The storage component responsible for saving contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * @return","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assert contactList !\u003d null : ASSERT_CONTACT_LIST_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        assert contactStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        int initialSize \u003d contactList.size();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        contactList.addContact(contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        assert contactList.size() \u003d\u003d initialSize + 1 : ASSERT_contactLIST_SIZE;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        String confirmationMessage \u003d showcontactAdded(contact, contactList.size());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        return saveContactToStorage(contactStorage, confirmationMessage);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"     * Displays a message confirming that a contact has been added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"     * @param contact The contact that was added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     * @param size The total number of contacts after the addition.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     * @return     String message showing contact added","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    public String showcontactAdded(Contact contact, int size) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"                \"Got it. I\u0027ve added this contact:\\n  %s\\nNow you have %d contacts in the list.\",","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"                contact, size);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     * Saves the contact to storage and returns an appropriate message.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage             The storage component responsible for saving contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message to return on success.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     * @return The confirmation message if successful, or an error message if saving fails.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    private String saveContactToStorage(ContactStorage contactStorage, String confirmationMessage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"            contactStorage.saveContact(contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            return confirmationMessage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"            return ERROR_STORAGE + e.getMessage();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the contact associated with this command.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @return The contact that was added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"    public Contact getAddedContact() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        return this.contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":97}},{"path":"src/main/java/commands/contacts/DeleteContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.contacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.Contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidContactNumberException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to delete a contact from the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * This command removes a contact from the list, updates storage, and notifies the user.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_CONTACTLIST_NULL \u003d \"Contact list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_CONTACT_INDEX_NEGATIVE \u003d \"Contact index must be non-negative\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_CONTACT_NUMBER \u003d","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"            \"Invalid contact. Please enter a number between 1 and \";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE_UPDATE \u003d \"Error saving updated contact list: \";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    private final int[] contactIndices;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code DeleteCommand} with the specified contact index.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactIndices The indices of the contacts to be deleted (zero-based).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    public DeleteContactCommand(int... contactIndices) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        assert contactIndices !\u003d null \u0026\u0026 contactIndices.length \u003e 0 : \"Contact indices cannot be null or empty\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        this.contactIndices \u003d contactIndices;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the delete contact command.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * Removes the contact from the contact list, displays a confirmation message,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * and updates the storage.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The contact list from which the contact is deleted.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage  The storage component responsible for saving contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the contact index is invalid or an error occurs while updating storage.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        assert contactList !\u003d null : ASSERT_CONTACTLIST_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        assert contactStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        int initialSize \u003d contactList.size();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        StringBuilder confirmationMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        int[] sortedIndices \u003d Arrays.stream(contactIndices)","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"                .distinct()","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"                .sorted()","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"                .toArray();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        for (int contactIndex : sortedIndices) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"            assert contactIndex \u003e\u003d 0 : ASSERT_CONTACT_INDEX_NEGATIVE;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            validateIndex(contactList, contactIndex);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            Contact removedContact \u003d contactList.removeContact(contactIndex);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(showContactRemoved(removedContact, contactList.size())).append(\"\\n\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        updateStorage(contactStorage, contactList, confirmationMessage, initialSize);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        return confirmationMessage.toString().trim();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * Displays a message confirming that a contact has been removed.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     * @param contact The contact that was removed.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * @param size The total number of contacts after the removal.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"    public String showContactRemoved(Contact contact, int size) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"                \"Noted. I\u0027ve removed this contact:\\n  %s\\nNow you have %d contacts in the list.\",","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"                contact, size);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"     * Validates if the contact index is within the valid range.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactIndex The contact index to validate.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidContactNumberException If the index is out of bounds.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(ContactList contactList, int contactIndex) throws InvalidContactNumberException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"            contactList.getContact(contactIndex); // Triggers ContactList\u0027s validateIndex()","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidContactNumberException(ERROR_INVALID_CONTACT_NUMBER + contactList.size() + \".\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"     * Updates storage after contacts are deleted.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage The storage component.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The updated contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message builder.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     * @param initialSize The initial size of the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"    private void updateStorage(ContactStorage contactStorage,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"                               ContactList contactList, StringBuilder confirmationMessage, int initialSize) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"            if (contactList.size() \u003c initialSize) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"                contactStorage.overwriteContacts(contactList.getContacts());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"\\n\").append(ERROR_STORAGE_UPDATE).append(e.getMessage());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the index of the contact to be deleted.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"     * @return The zero-based index of the contact.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"    public int[] getDeleteIndices() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"        return this.contactIndices;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":129}},{"path":"src/main/java/commands/contacts/FindContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.contacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.Contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command that finds contacts in the contact list based on a keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * The search is case-insensitive and matches contacts whose descriptions contain the keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_KEYWORD_NULL \u003d \"Keyword cannot be null or empty\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_CONTACT_LIST_NULL \u003d \"Contact list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_MATCHING_contactS_NULL \u003d \"Matching contacts list should not be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The list is empty.\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String contact_LIST_HEADER \u003d \"Here are the contacts in your list:\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private final String keyword;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * @param keyword The keyword to search for in contact descriptions.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public FindContactCommand(String keyword) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : ASSERT_KEYWORD_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the find command by searching for contacts that contain the specified keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * If matching contacts are found, they are displayed to the user. Otherwise, a message","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * indicating no matches is shown.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The list of contacts to search within.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage  The storage component (not used in this command).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @return         A list of contacts matching the keyword","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If an error occurs during execution.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        assert contactList !\u003d null : ASSERT_CONTACT_LIST_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cContact\u003e matchingcontacts \u003d searchContacts(contactList);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        if (matchingcontacts.isEmpty()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"            return \"No matching contacts found\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"            return showContactList(matchingcontacts);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     * Displays the list of contacts currently stored.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"     * @param contacts The list of contacts to be displayed.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    public String showContactList(List\u003cContact\u003e contacts) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        if (contacts.isEmpty()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        return IntStream.range(0, contacts.size())","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, contacts.get(i)))","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"                .reduce(contact_LIST_HEADER, (list, contact) -\u003e list + \"\\n\" + contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * Searches for contacts in the contact list that contain the keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The contact list to search within.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @return A list of contacts that contain the keyword in their description.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    private List\u003cContact\u003e searchContacts(ContactList contactList) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cContact\u003e matchingcontacts \u003d contactList.findContacts(keyword);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        assert matchingcontacts !\u003d null : ASSERT_MATCHING_contactS_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        return matchingcontacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":89}},{"path":"src/main/java/commands/contacts/ListContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.contacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.Contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to display the list of tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" * This command retrieves the tasks from the task list and displays them to the user.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The contact list is empty.\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String contact_LIST_HEADER \u003d \"Here are the contacts in your list:\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the list command.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     * Retrieves and displays all contacts stored in the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactList The contact list containing the contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactStorage  The storage component (not used in this command).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     * @return         The list of contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        return showContactList(contactList.getContacts());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * Displays the list of contacts currently stored.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * @param contacts The list of contacts to be displayed.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    public String showContactList(List\u003cContact\u003e contacts) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        if (contacts.isEmpty()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        return IntStream.range(0, contacts.size())","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, contacts.get(i)))","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"                .reduce(contact_LIST_HEADER, (list, contact) -\u003e list + \"\\n\" + contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":50}},{"path":"src/main/java/commands/tasks/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * This command updates the task list, notifies the user, and saves the task to storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE \u003d \"Error saving task to storage: \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASK_NULL \u003d \"Task cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_NULL \u003d \"Task list cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_SIZE \u003d \"Task list size should increase by 1\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private final Task task;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs an {@code AddCommand} with the specified task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        assert task !\u003d null : ASSERT_TASK_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the add task command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Adds the task to the task list, displays a confirmation message to the user,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * and saves the task to storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list to which the task is added.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * @return","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList !\u003d null : ASSERT_TASKLIST_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        assert taskStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList.size() \u003d\u003d initialSize + 1 : ASSERT_TASKLIST_SIZE;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        String confirmationMessage \u003d showTaskAdded(task, taskList.size());","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        return saveTaskToStorage(taskStorage, confirmationMessage);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     * @param size The total number of tasks after the addition.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     * @return     String message showing task added","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    public String showTaskAdded(Task task, int size) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"                \"Got it. I\u0027ve added this task:\\n  %s\\nHopefully, you won’t procrastinate on it this time.\",","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"                task, size);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     * Saves the task to storage and returns an appropriate message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage             The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message to return on success.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     * @return The confirmation message if successful, or an error message if saving fails.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    private String saveTaskToStorage(TaskStorage taskStorage, String confirmationMessage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"            taskStorage.saveTask(task);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            return confirmationMessage;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"            return ERROR_STORAGE + e.getMessage();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the task associated with this command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @return The task that was added.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"    public Task getAddedTask() {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        return this.task;","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":97}},{"path":"src/main/java/commands/tasks/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * This command removes a task from the list, updates storage, and notifies the user.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_NULL \u003d \"Task list cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKINDEX_NEGATIVE \u003d \"Task index must be non-negative\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number. Please enter a number between 1 and \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE_UPDATE \u003d \"Error saving updated task list: \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    private final int[] taskIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code DeleteCommand} with the specified task index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndices The indices of the tasks to be deleted (zero-based).","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    public DeleteTaskCommand(int... taskIndices) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        assert taskIndices !\u003d null \u0026\u0026 taskIndices.length \u003e 0 : \"Task indices cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        this.taskIndices \u003d taskIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the delete task command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * Removes the task from the task list, displays a confirmation message,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * and updates the storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list from which the task is deleted.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the task index is invalid or an error occurs while updating storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList !\u003d null : ASSERT_TASKLIST_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        assert taskStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        StringBuilder confirmationMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        int[] sortedIndices \u003d Arrays.stream(taskIndices)","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"                .distinct()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"                .sorted()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"                .toArray();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        for (int taskIndex : sortedIndices) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            assert taskIndex \u003e\u003d 0 : ASSERT_TASKINDEX_NEGATIVE;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"            validateIndex(taskList, taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"            Task removedTask \u003d taskList.removeTask(taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(showTaskRemoved(removedTask, taskList.size())).append(\"\\n\");","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        updateStorage(taskStorage, taskList, confirmationMessage, initialSize);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        return confirmationMessage.toString().trim();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     * Displays a message confirming that a task has been removed.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     * @param size The total number of tasks after the removal.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    public String showTaskRemoved(Task task, int size) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"                \"Noted. I\u0027ve removed this task:\\n  %s\\nAs if it was never important to begin with.\",","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"                task, size);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"     * Validates if the task index is within the valid range.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndex The task index to validate.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidTaskNumberException If the index is out of bounds.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(TaskList taskList, int taskIndex) throws InvalidTaskNumberException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"            taskList.getTask(taskIndex); // Triggers TaskList\u0027s validateIndex()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(ERROR_INVALID_TASK_NUMBER + taskList.size() + \".\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"     * Updates storage after tasks are deleted.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage The storage component.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The updated task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message builder.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     * @param initialSize The initial size of the task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"    private void updateStorage(TaskStorage taskStorage,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"                               TaskList taskList, StringBuilder confirmationMessage, int initialSize) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"            if (taskList.size() \u003c initialSize) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"                taskStorage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"\\n\").append(ERROR_STORAGE_UPDATE).append(e.getMessage());","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the index of the task to be deleted.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"     * @return The zero-based index of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"    public int[] getDeleteIndices() {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"        return this.taskIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":128}},{"path":"src/main/java/commands/tasks/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command that finds tasks in the task list based on a keyword.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * The search is case-insensitive and matches tasks whose descriptions contain the keyword.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_KEYWORD_NULL \u003d \"Keyword cannot be null or empty\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_NULL \u003d \"Task list cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_MATCHING_TASKS_NULL \u003d \"Matching tasks list should not be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The list is empty.\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String TASK_LIST_HEADER \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private final String keyword;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : ASSERT_KEYWORD_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the find command by searching for tasks that contain the specified keyword.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * If matching tasks are found, they are displayed to the user. Otherwise, a message","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * indicating no matches is shown.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The list of tasks to search within.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component (not used in this command).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @return         A list of tasks matching the keyword","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If an error occurs during execution.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList !\u003d null : ASSERT_TASKLIST_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cTask\u003e matchingTasks \u003d searchTasks(taskList);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"            return \"No matching tasks found\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"            return showTaskList(matchingTasks);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     * Displays the list of tasks currently stored.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    public String showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, tasks.get(i)))","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"                .reduce(TASK_LIST_HEADER, (list, task) -\u003e list + \"\\n\" + task);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * Searches for tasks in the task list that contain the keyword.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list to search within.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @return A list of tasks that contain the keyword in their description.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    private List\u003cTask\u003e searchTasks(TaskList taskList) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasks(keyword);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        assert matchingTasks !\u003d null : ASSERT_MATCHING_TASKS_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        return matchingTasks;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":89}},{"path":"src/main/java/commands/tasks/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to display the list of tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" * This command retrieves the tasks from the task list and displays them to the user.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"The task list is empty.\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String TASK_LIST_HEADER \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the list command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     * Retrieves and displays all tasks stored in the task list.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component (not used in this command).","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     * @return         The list of tasks.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        return showTaskList(taskList.getTasks());","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * Displays the list of tasks currently stored.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    public String showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, tasks.get(i)))","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"                .reduce(TASK_LIST_HEADER, (list, task) -\u003e list + \"\\n\" + task);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":50}},{"path":"src/main/java/commands/tasks/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * This command updates the task\u0027s status, notifies the user, and updates storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_NULL \u003d \"Task list cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKINDEX_NEGATIVE \u003d \"Task index must be non-negative\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number. Please enter a number between 1 and \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_ALREADY_MARKED \u003d \"Error: Task is already marked as done.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE_UPDATE \u003d \"Error saving updated task list: \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    private final int[] markIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     * @param markIndices The indices of the tasks to be marked as done (zero-based).","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    public MarkTaskCommand(int... markIndices) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        assert markIndices !\u003d null \u0026\u0026 markIndices.length \u003e 0 : \"Mark indices cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        this.markIndices \u003d markIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the mark task command.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * Marks the specified task as done, displays a confirmation message,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * and updates the storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list containing the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * @return A confirmation message indicating the task has been marked as done.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the task index is invalid or an error occurs while updating storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList !\u003d null : ASSERT_TASKLIST_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        assert taskStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        StringBuilder confirmationMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        int[] uniqueIndices \u003d Arrays.stream(markIndices).distinct().toArray();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        for (int index : markIndices) {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            assert index \u003e\u003d 0 : ASSERT_TASKINDEX_NEGATIVE;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"            validateIndex(taskList, index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            Task task \u003d markTaskAsDone(taskList, index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"Congratulations. You completed something. I\u0027ve marked this task as done:\\n\")","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"                        .append(task).append(\"\\n\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        updateStorage(taskStorage, taskList, confirmationMessage);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        return confirmationMessage.toString().trim();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"     * Validates if the task index is within the valid range.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndex The task index to validate.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidTaskNumberException If the index is out of bounds.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(TaskList taskList, int taskIndex) throws InvalidTaskNumberException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"            taskList.getTask(taskIndex); // Calls TaskList\u0027s validateIndex()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(ERROR_INVALID_TASK_NUMBER + taskList.size() + \".\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @return The marked task.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the task is already marked as done.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"    private Task markTaskAsDone(TaskList taskList, int taskIndex) throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"        if (task.isDone()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(ERROR_ALREADY_MARKED);","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"        return task;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     * Updates storage after marking tasks as done.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage The storage component.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The updated task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message builder.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"    private void updateStorage(TaskStorage taskStorage, TaskList taskList, StringBuilder confirmationMessage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"            taskStorage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"\\n\").append(ERROR_STORAGE_UPDATE).append(e.getMessage());","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the index of the task to be marked as done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"     * @return The zero-based index of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"    public int[] getMarkIndices() {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"        return markIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":127}},{"path":"src/main/java/commands/tasks/SortTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to sort tasks by their deadlines or event start times.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":" * This command modifies the task list and notifies the user of the sorting operation.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"public class SortTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the command to mark the specified task as not done.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     * If the task index is invalid, an exception is thrown.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list containing the task.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"     * @return A confirmation message indicating the task has been unmarked.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"        taskList.sortTasks();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        return \"Tasks sorted by date!\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":29}},{"path":"src/main/java/commands/tasks/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package commands.tasks;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * This command updates the task\u0027s status, notifies the user, and updates storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKLIST_NULL \u003d \"Task list cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_STORAGE_NULL \u003d \"Storage cannot be null\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ASSERT_TASKINDEX_NEGATIVE \u003d \"Task index must be non-negative\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number. Please enter a number between 1 and \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_ALREADY_UNMARKED \u003d \"Error: Task is already unmarked.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_STORAGE_UPDATE \u003d \"Error saving updated task list: \";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    private final int[] unmarkIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     * @param unmarkIndices The indices of the tasks to be unmarked as not done (zero-based).","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    public UnmarkTaskCommand(int... unmarkIndices) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        assert unmarkIndices !\u003d null \u0026\u0026 unmarkIndices.length \u003e 0 : \"Unmark indices cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        this.unmarkIndices \u003d unmarkIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * Executes the command to mark the specified task as not done.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * If the task index is invalid, an exception is thrown.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list containing the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage  The storage component responsible for saving tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * @return A confirmation message indicating the task has been unmarked.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the task index is invalid or an error occurs while updating storage.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    public String execute(TaskList taskList, ContactList contactList,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"                          TaskStorage taskStorage, ContactStorage contactStorage) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        assert taskList !\u003d null : ASSERT_TASKLIST_NULL;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        assert taskStorage !\u003d null : ASSERT_STORAGE_NULL;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        StringBuilder confirmationMessage \u003d new StringBuilder();","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        int[] uniqueIndices \u003d Arrays.stream(unmarkIndices).distinct().toArray();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        for (int index : unmarkIndices) {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            assert index \u003e\u003d 0 : ASSERT_TASKINDEX_NEGATIVE;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"            validateIndex(taskList, index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            Task task \u003d unmarkTask(taskList, index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"OK, I\u0027ve marked this task as not done yet:\\n  \")","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"                        .append(task).append(\"\\n\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        updateStorage(taskStorage, taskList, confirmationMessage);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        return confirmationMessage.toString().trim();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     * Validates if the task index is within the valid range.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndex The task index to validate.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidTaskNumberException If the index is out of bounds.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(TaskList taskList, int taskIndex) throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"            taskList.getTask(taskIndex); // Calls TaskList\u0027s validateIndex()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(ERROR_INVALID_TASK_NUMBER + taskList.size() + \".\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"     * Unmarks a task as not done.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * @return The unmarked task.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the task is already unmarked.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    private Task unmarkTask(TaskList taskList, int taskIndex) throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(ERROR_ALREADY_UNMARKED);","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"        return task;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     * Updates storage after unmarking tasks.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskStorage The storage component.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskList The updated task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"     * @param confirmationMessage The confirmation message builder.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    private void updateStorage(TaskStorage taskStorage, TaskList taskList, StringBuilder confirmationMessage) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"            taskStorage.overwriteTasks(taskList.getTasks());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"            confirmationMessage.append(\"\\n\").append(ERROR_STORAGE_UPDATE).append(e.getMessage());","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the one-based index of the task to be unmarked.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"     * @return The one-based index of the task.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"    public int[] getUnmarkIndices() {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"        return this.unmarkIndices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":128}},{"path":"src/main/java/components/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidDataException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":" * Represents a contact in the application.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class Contact {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    private final String name;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    private final String phoneNumber;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    private final String email;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a Contact with the given details.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public Contact(String name, String phoneNumber, String email) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        this.email \u003d email;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    public String getName() {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        return name;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * Serializes the contact into a string format for storage.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * @return A string representation of the contact.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"%s | %s | %s\", name, phoneNumber, email);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Deserializes a string into a Contact object.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * @param data The serialized string representation of a contact.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * @return A Contact object reconstructed from the serialized data.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidDataException If the data is invalid, incorrectly formatted, or incomplete.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    public static Contact deserialize(String data) throws InvalidDataException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        if (data \u003d\u003d null || data.isBlank()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Cannot deserialize null or empty data.\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Incomplete data for contact deserialization.\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        String name \u003d parts[0].trim();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        String phoneNumber \u003d parts[1].trim();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        String email \u003d parts[2].trim();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        if (name.isEmpty() || phoneNumber.isEmpty() || email.isEmpty()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Contact details cannot be empty.\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        return new Contact(name, phoneNumber, email);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        return name + \" | \" + phoneNumber + \" | \" + email;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            return true;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"            return false;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"        Contact contact \u003d (Contact) o;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        return Objects.equals(name, contact.name)","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"                \u0026\u0026 Objects.equals(phoneNumber, contact.phoneNumber)","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"                \u0026\u0026 Objects.equals(email, contact.email);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    public int hashCode() {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        return Objects.hash(name, phoneNumber, email);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":89}},{"path":"src/main/java/components/ContactList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":" * Manages a list of contacts, providing methods to add, remove, mark, unmark,","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":" * retrieve, and sort contacts based on deadlines or event start times.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"public class ContactList {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_INDEX \u003d \"Error: Invalid contact index.\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    private final List\u003cContact\u003e contacts;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs an empty {@code contactList}.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public ContactList() {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code contactList} with an existing list of contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * @param contacts The list of contacts to initialize the contact list with.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    public ContactList(List\u003cContact\u003e contacts) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        assert contacts !\u003d null : \"contacts list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        this.contacts \u003d new ArrayList\u003c\u003e(contacts);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the list of contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"     * @return The {@code ArrayList} containing all contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cContact\u003e getContacts() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        return new ArrayList\u003c\u003e(contacts);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * Adds a contact to the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param contact The contact to be added.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assert contact !\u003d null : \"contact to add cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        contacts.add(contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the number of contacts in the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"     * @return The total number of contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    public int size() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        return contacts.size();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"     * Removes a contact from the contact list at the specified index.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the contact to be removed.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"     * @return The removed contact.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    public Contact removeContact(int index) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        return contacts.remove(index);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"     * Retrieves a contact from the contact list at the specified index.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the contact to retrieve.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     * @return The contact at the given index.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    public Contact getContact(int index) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        return contacts.get(index);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"     * Checks if the provided index is within the valid range of the contact list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index to validate.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(int index) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"        if (index \u003c 0 || index \u003e\u003d contacts.size()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"            throw new IndexOutOfBoundsException(ERROR_INVALID_INDEX);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"     * Finds and returns a list of contacts whose descriptions contain the specified keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"     * @param keyword The keyword to search for in contact names.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"     * @return A list of contacts whose names contain the specified keyword.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cContact\u003e findContacts(String keyword) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"        assert !keyword.isBlank() : \"Search keyword cannot be null or empty\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"            throw new IllegalArgumentException(\"Search keyword cannot be null or empty\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"        return this.contacts.stream()","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"                .filter(contact -\u003e contact.getName().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":112}},{"path":"src/main/java/components/ContactStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.io.File;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" * Handles file storage operations for saving and loading tasks.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * This class manages reading and writing task data to a file, ensuring","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * persistence of task lists between program runs.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"public class ContactStorage {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/contacts.txt\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private final String fileName;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code Storage} object with the default file path {@code ./data/chat.txt}.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    public ContactStorage() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code Storage} object with a specified file path.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     * @param fileName The path to the file where tasks will be stored.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    public ContactStorage(String fileName) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        assert fileName !\u003d null \u0026\u0026 !fileName.isBlank() : \"File name cannot be null or empty\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * Ensures that the directory for the storage file exists.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     * If the directory does not exist, it attempts to create it.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * Displays an error message if the directory creation fails.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    private void ensureFileDirectoryExists() throws IOException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        File directory \u003d new File(new File(fileName).getParent());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"            throw new IOException(\"Failed to create the \u0027data\u0027 directory for saving contacts.\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"     * Loads contacts from the storage file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"     * Reads the file line by line, deserializing each line into a {@code contact} object.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"     * If the file does not exist, it returns an empty list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"     * @return An {@code ArrayList} of contacts loaded from the file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cContact\u003e loadContacts() throws IOException, NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"                assert line !\u003d null : \"Read line should not be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"                contacts.add(Contact.deserialize(line));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        return contacts;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * Saves a single contact to the storage file by appending it to the existing file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * @param contact The contact to be saved.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    public void saveContact(Contact contact) throws IOException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        assert contact !\u003d null : \"contact cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        appendToFile(contact.serialize());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * Overwrites the storage file with the given list of contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     * This method removes all previous data in the file and writes the new contacts.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * @param contacts The list of contacts to be saved.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    public void overwriteContacts(List\u003cContact\u003e contacts) throws IOException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"        assert contacts !\u003d null : \"contacts list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"        writeToFile(contacts);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"     * Appends a single serialized contact to the storage file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     * @param contactData The serialized contact string.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"    private void appendToFile(String contactData) throws IOException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName, true))) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"            writer.write(contactData + System.lineSeparator());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"     * Writes a list of serialized contacts to the storage file, overwriting existing content.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"     * @param contacts The list of contacts to be written.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    private void writeToFile(List\u003cContact\u003e contacts) throws IOException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName))) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"            for (Contact contact : contacts) {","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"                assert contact !\u003d null : \"contact in list cannot be null\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"                writer.write(contact.serialize() + System.lineSeparator());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":129}},{"path":"src/main/java/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import commands.ExitCommand;","lastModifiedDate":"2025-01-29T18:52:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import commands.contacts.AddContactCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import commands.contacts.DeleteContactCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import commands.contacts.FindContactCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import commands.contacts.ListContactCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.AddTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.FindTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.ListTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.MarkTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.SortTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.UnmarkTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":" * Parses user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":" * This class processes different commands and extracts necessary arguments","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":" * for task operations such as adding, marking, unmarking, deleting, and sorting tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"public class Parser {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_DEADLINE_FORMAT \u003d \"Invalid format for deadline.\"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"            + \" Use: deadline \u003cdescription\u003e /by \u003ctime\u003e\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_EVENT_FORMAT \u003d \"Invalid format for event.\"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"            + \" Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_EMPTY_DESCRIPTION \u003d \"Description cannot be empty\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_CONTACT_FORMAT \u003d \"Invalid format for adding a contact.\"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            + \" Use: addcontact \u003cname\u003e /p \u003cphone\u003e /e \u003cemail\u003e\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Parses the user input and returns the appropriate {@code Command} object.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * @param input The raw input string entered by the user.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * @return A {@code Command} object corresponding to the parsed input.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the input command is invalid or has missing/incorrect arguments.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    public Command parseCommand(String input) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Input command cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        switch (commandType) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        case \"listtasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        case \"bye\":","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        case \"marktasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"            return new MarkTaskCommand(parseIndices(details));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        case \"unmarktasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"            return new UnmarkTaskCommand(parseIndices(details));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        case \"todo\":","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"            return parseTodo(details);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        case \"event\":","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            return parseEvent(details);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        case \"deadline\":","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            return parseDeadline(details);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        case \"sorttasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            return new SortTaskCommand();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        case \"deletetasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            return new DeleteTaskCommand(parseIndices(details));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        case \"findtasks\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"            return new FindTaskCommand(details);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        case \"addcontact\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"            return parseAddContact(details);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        case \"deletecontact\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"            return new DeleteContactCommand(parseIndices(details));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"        case \"listcontacts\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"            return new ListContactCommand();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        case \"findcontact\":","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"            return new FindContactCommand(details);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        default:","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidCommandException(\"Unknown command\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    private Command parseTodo(String details) throws NiniException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        validateNonEmpty(details, \"Description for todo cannot be empty\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        return new AddTaskCommand(new ToDoTask(details));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"    private Command parseDeadline(String details) throws NiniException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"        validateNonEmpty(details, ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"        String[] deadlineParts \u003d splitDetails(details);","lastModifiedDate":"2025-02-13T23:07:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(ERROR_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"        return new AddTaskCommand(new DeadlineTask(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"    private Command parseEvent(String details) throws NiniException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"        validateNonEmpty(details, ERROR_EMPTY_DESCRIPTION);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"        if (!details.contains(\"/from\") || !details.contains(\"/to\")) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"        String[] eventParts \u003d details.split(\"/from|/to\", -1);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"        if (eventParts.length \u003c 3 || eventParts[0].trim().isEmpty()","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"                || eventParts[1].trim().isEmpty() || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"        return new AddTaskCommand(new EventTask(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim()));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"    private int[] parseIndices(String input) throws InvalidFormatException {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"        assert input !\u003d null \u0026\u0026 !input.isBlank() : \"Task indices input cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"            String[] parts \u003d input.split(\"\\\\s+\"); // Split input by spaces","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"            int[] indices \u003d new int[parts.length];","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"            for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"                indices[i] \u003d Integer.parseInt(parts[i]) - 1; // Convert to zero-based index","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"            return indices;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid indices. Please enter valid numbers separated by spaces.\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"    private Command parseAddContact(String details) throws NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"        validateNonEmpty(details, ERROR_INVALID_CONTACT_FORMAT);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"        String[] contactParts \u003d details.split(\" /p | /e\", -1);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"        if (contactParts.length \u003c 3 || contactParts[0].trim().isEmpty()","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"                || contactParts[1].trim().isEmpty() || contactParts[2].trim().isEmpty()) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(ERROR_INVALID_CONTACT_FORMAT);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"        Contact contact \u003d new Contact(contactParts[0].trim(), contactParts[1].trim(), contactParts[2].trim());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"        return new AddContactCommand(contact);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasohjj"},"content":"    private void validateNonEmpty(String input, String errorMessage) throws InvalidFormatException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholasohjj"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(errorMessage);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholasohjj"},"content":"    private String[] splitDetails(String details) throws InvalidFormatException {","lastModifiedDate":"2025-02-13T23:07:51","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d details.split(\"/by\", -1);","lastModifiedDate":"2025-02-13T23:07:51","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholasohjj"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(Parser.ERROR_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2025-02-13T23:07:51","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholasohjj"},"content":"        return parts;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":163}},{"path":"src/main/java/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" * Manages a list of tasks, providing methods to add, remove, mark, unmark,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * retrieve, and sort tasks based on deadlines or event start times.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"public class TaskList {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    private static final String ERROR_INVALID_INDEX \u003d \"Error: Invalid task index.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    public TaskList() {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code TaskList} with an existing list of tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     * @param tasks The list of tasks to initialize the task list with.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * @return The {@code ArrayList} containing all tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        assert task !\u003d null : \"Task to add cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        tasks.add(task);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"    public int size() {","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.size();","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"     * @return The removed task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     * @return The task at the given index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    public void markTask(int index) throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"     * Unmarks a task at the specified index, setting it as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    public void unmarkTask(int index) throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"        validateIndex(index);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"     * Checks if the provided index is within the valid range of the task list.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"     * @param index The index to validate.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"    private void validateIndex(int index) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"            throw new IndexOutOfBoundsException(ERROR_INVALID_INDEX);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"     * Sorts tasks based on their deadlines or event start times.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code DeadlineTask} objects are sorted by their deadline.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code EventTask} objects are sorted by their start time.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003eOther tasks remain in their original order.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"     * Tasks without dates (e.g., {@code ToDoTask}) are placed at the end.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"    public void sortTasks() {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"        tasks.sort((task1, task2) -\u003e {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"            LocalDateTime date1 \u003d task1.getRelevantDate();","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"            LocalDateTime date2 \u003d task2.getRelevantDate();","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"            if (date1 \u003d\u003d null \u0026\u0026 date2 \u003d\u003d null) {","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"                return 0;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"            if (date1 \u003d\u003d null) {","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"                return 1;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"            if (date2 \u003d\u003d null) {","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"                return -1;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"            return date1.compareTo(date2);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasohjj"},"content":"     * Finds and returns a list of tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholasohjj"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholasohjj"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholasohjj"},"content":"     * @return A list of tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholasohjj"},"content":"        assert !keyword.isBlank() : \"Search keyword cannot be null or empty\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholasohjj"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholasohjj"},"content":"            throw new IllegalArgumentException(\"Search keyword cannot be null or empty\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholasohjj"},"content":"        return this.tasks.stream()","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholasohjj"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholasohjj"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":164}},{"path":"src/main/java/components/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.io.File;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":" * Handles file storage operations for saving and loading tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":" * This class manages reading and writing task data to a file, ensuring","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" * persistence of task lists between program runs.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"public class TaskStorage {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/chat.txt\";","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DATA_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    private final String fileName;","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code Storage} object with the default file path {@code ./data/chat.txt}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    public TaskStorage() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a {@code Storage} object with a specified file path.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"     * @param fileName The path to the file where tasks will be stored.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    public TaskStorage(String fileName) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        assert fileName !\u003d null \u0026\u0026 !fileName.isBlank() : \"File name cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * Ensures that the directory for the storage file exists.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * If the directory does not exist, it attempts to create it.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * Displays an error message if the directory creation fails.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    private void ensureFileDirectoryExists() throws IOException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        File directory \u003d new File(new File(fileName).getParent());","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"            throw new IOException(\"Failed to create the \u0027data\u0027 directory for saving tasks.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     * Reads the file line by line, deserializing each line into a {@code Task} object.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"     * If the file does not exist, it returns an empty list.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"     * @return An {@code ArrayList} of tasks loaded from the file.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException, NiniException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"                assert line !\u003d null : \"Read line should not be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"                tasks.add(Task.deserialize(line));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"        return tasks;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * Saves a single task to the storage file by appending it to the existing file.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     * @param task The task to be saved.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    public void saveTask(Task task) throws IOException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"        appendToFile(task.serialize());","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * Overwrites the storage file with the given list of tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * This method removes all previous data in the file and writes the new tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    public void overwriteTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        writeToFile(tasks);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     * Appends a single serialized task to the storage file.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     * @param taskData The serialized task string.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"    private void appendToFile(String taskData) throws IOException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName, true))) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"            writer.write(taskData + System.lineSeparator());","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"     * Writes a list of serialized tasks to the storage file, overwriting existing content.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"     * @param tasks The list of tasks to be written.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"    private void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"        ensureFileDirectoryExists();","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName))) {","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"                assert task !\u003d null : \"Task in list cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"                writer.write(task.serialize() + System.lineSeparator());","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":131}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents an exception that is thrown when an invalid command is encountered.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This exception extends {@code NiniException} and provides a specific error message","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * for invalid commands.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidCommandException extends NiniException {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"INVALID COMMAND!\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code InvalidCommandException} with a custom error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * If a message is provided, it is appended to the default error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The custom error message describing the invalid task number.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(message \u003d\u003d null || message.isBlank() ? DEFAULT_MESSAGE : DEFAULT_MESSAGE + \" \" + message);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":21}},{"path":"src/main/java/exceptions/InvalidContactNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents an exception that is thrown when an invalid task number is encountered.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This exception extends {@code NiniException} and provides a specific error message","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * for invalid task numbers.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidContactNumberException extends NiniException {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"INVALID CONTACT INDEX! Please provide a valid task number.\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code InvalidTaskNumberException} with a custom error message.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * If a message is provided, it is appended to the default error message.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The custom error message describing the invalid task number.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidContactNumberException(String message) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(message \u003d\u003d null || message.isBlank() ? DEFAULT_MESSAGE : DEFAULT_MESSAGE + \" \" + message);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":21}},{"path":"src/main/java/exceptions/InvalidDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents an exception that is thrown when an invalid data is encountered.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This exception extends {@code NiniException} and provides a specific error message","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * for invalid data.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidDataException extends NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"INVALID FORMAT!.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code InvalidDataException} with a custom error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * If a message is provided, it is appended to the default error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The custom error message describing the invalid task number.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidDataException(String message) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(message \u003d\u003d null || message.isBlank() ? DEFAULT_MESSAGE : DEFAULT_MESSAGE + \" \" + message);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":21}},{"path":"src/main/java/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents an exception that is thrown when an invalid format is encountered.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This exception extends {@code NiniException} and provides a specific error message","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * for invalid formats.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidFormatException extends NiniException {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"INVALID FORMAT!.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code InvalidFormatException} with a custom error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * If a message is provided, it is appended to the default error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The custom error message describing the invalid task number.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(message \u003d\u003d null || message.isBlank() ? DEFAULT_MESSAGE : DEFAULT_MESSAGE + \" \" + message);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":21}},{"path":"src/main/java/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents an exception that is thrown when an invalid task number is encountered.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This exception extends {@code NiniException} and provides a specific error message","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * for invalid task numbers.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"public class InvalidTaskNumberException extends NiniException {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"INVALID TASK NUMBER! Please provide a valid task number.\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code InvalidTaskNumberException} with a custom error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * If a message is provided, it is appended to the default error message.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The custom error message describing the invalid task number.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(message \u003d\u003d null || message.isBlank() ? DEFAULT_MESSAGE : DEFAULT_MESSAGE + \" \" + message);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":21}},{"path":"src/main/java/exceptions/NiniException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-24T00:08:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":" * Represents a custom exception used in the application.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":" * This serves as the base exception class for handling application-specific errors.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"public class NiniException extends Exception {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code NiniException} with the specified error message.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"    public NiniException(String message) {","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        super(message);","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-19T22:40:38","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":17}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-09T18:17:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * This class extends {@code Task} and includes functionality to store,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * validate, and format the deadline.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\",","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\",","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code DeadlineTask} with the given description and deadline.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * @param deadline    The deadline of the task in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the provided date-time format is invalid.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    public DeadlineTask(String description, String deadline) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        this.deadline \u003d parseDeadline(deadline);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code DeadlineTask} with the given description, deadline, and completion status.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     * @param deadline    The deadline of the task in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     *                    {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the provided date-time format is invalid.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    public DeadlineTask(String description, String deadline, boolean isDone) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        this.deadline \u003d parseDeadline(deadline);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    private LocalDateTime parseDeadline(String deadline) throws InvalidFormatException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"            return LocalDateTime.parse(deadline.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: \"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"                    + \"d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the deadline date and time of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"     * @return The {@code LocalDateTime} representing the task\u0027s deadline.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        return deadline;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"     * Serializes the deadline task into a formatted string representation.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"     * The format used is: {@code D|\u003cstatus\u003e|\u003cdescription\u003e|\u003cdeadline\u003e}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code D} represents a deadline task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cstatus\u003e} is {@code 1} if the task is done, otherwise {@code 0}.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cdescription\u003e} is the textual description of the task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cdeadline\u003e} is the formatted deadline date and time.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * @return A serialized string representation of the deadline task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        int isDoneValue \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"D|%d|%s|%s\",","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"                isDoneValue,","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"                description,","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"                deadline.format(INPUT_FORMATTER)","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"        );","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * The format is {@code [D]\u003cdescription\u003e (deadline: \u003cdeadline time\u003e)}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code [D]} signifies a deadline task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cdeadline time\u003e} is formatted using {@code MMM dd yyyy, h:mma}.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"[D]%s (deadline: %s)\",","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"                super.toString(),","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"                deadline.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"        );","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getRelevantDate() {","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"        return deadline;","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":114}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Locale;","lastModifiedDate":"2025-02-09T18:17:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" * Represents an event task with a specific start and end time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * This class extends {@code Task} and includes functionality to store,","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * validate, and format event times.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\",","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\",","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2025-02-09T18:20:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code EventTask} with the given description and event times.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"     * @param from        The start time of the event in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"     * @param to          The end time of the event in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the provided date-time format is invalid or the start time is after the end time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    public EventTask(String description, String from, String to) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        validateDateOrder();","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code EventTask} with the given description, event times, and completion status.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     * @param from        The start time of the event in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"     * @param to          The end time of the event in the format {@code d/M/yyyy HHmm}.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * @param isDone      The completion status of the event.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     *                    {@code true} if the event is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the provided date-time format is invalid or the start time is after the end time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    public EventTask(String description, String from, String to, boolean isDone) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"            this.from \u003d LocalDateTime.parse(from.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            this.to \u003d LocalDateTime.parse(to.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"            if (this.from.isAfter(this.to)) {","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidFormatException(\"The start time must be earlier than the end time.\");","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: \"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"                    + \"d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws InvalidFormatException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"            return LocalDateTime.parse(dateTime.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"Invalid deadline format. Please use the format: \"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"                    + \"d/M/yyyy HHmm (e.g., 25/12/2025 1800)\");","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    private void validateDateOrder() throws InvalidFormatException {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        if (this.from.isAfter(this.to)) {","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidFormatException(\"The start time must be earlier than the end time.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the start date and time of the event.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     * @return The {@code LocalDateTime} representing the event\u0027s start time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        return from;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the end date and time of the event.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"     * @return The {@code LocalDateTime} representing the event\u0027s end time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        return to;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"     * Serializes the event task into a formatted string representation.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"     * The format used is: {@code E|\u003cstatus\u003e|\u003cdescription\u003e|\u003cstart time\u003e|\u003cend time\u003e}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code E} represents an event task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cstatus\u003e} is {@code 1} if the task is done, otherwise {@code 0}.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cdescription\u003e} is the textual description of the task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cstart time\u003e} is the formatted start date and time of the event.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cend time\u003e} is the formatted end date and time of the event.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"     * @return A serialized string representation of the event task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:38:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"        int isDoneValue \u003d isDone ? 1 : 0;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"E|%d|%s|%s|%s\",","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"                isDoneValue,","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"                description,","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"                from.format(INPUT_FORMATTER),","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"                to.format(INPUT_FORMATTER)","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"        );","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"     * The format is {@code [E]\u003cdescription\u003e (from: \u003cstart time\u003e to: \u003cend time\u003e)}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code [E]} signifies an event task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cstart time\u003e} and {@code \u003cend time\u003e} are formatted using {@code MMM dd yyyy, h:mma}.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"                super.toString(),","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"                from.format(OUTPUT_FORMATTER),","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"                to.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"        );","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getRelevantDate() {","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"        return from;","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":146}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidDataException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidTaskNumberException;","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":" * This class serves as a base class for different types of tasks such as","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":" * ToDoTask, DeadlineTask, and EventTask.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"public abstract class Task {","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    private static final int TYPE_INDEX \u003d 0;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    private static final int DONE_INDEX \u003d 1;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    private static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    protected String description;","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code Task} with the given description.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Task description must not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code Task} with the given description and completion status.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *                    {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        this(description);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     * @return The task description.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null : \"Task description should not be null.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        return description;","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        return isDone;","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T21:06:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidTaskNumberException If the task is already marked as done.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    public void markAsDone() throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        if (isDone) {","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Task is already marked as done\");","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"            isDone \u003d true;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     * Unmarks the task, setting it as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @throws InvalidTaskNumberException If the task is already unmarked.","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    public void unmark() throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        if (!isDone) {","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidTaskNumberException(\"Task is already unmarked.\");","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        } else {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"            isDone \u003d false;","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"     * Serializes the task into a string format.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"     * This method is intended to be overridden by subclasses.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"     * @return A serialized string representation of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    public abstract String serialize();","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"     * Deserializes a given string into a {@code Task} object.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"     * The string format should follow the pattern used in the {@code serialize} method.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"     * @param data The serialized string representation of a task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"     * @return A {@code Task} object reconstructed from the serialized data.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"     * @throws NiniException If the data is invalid, incorrectly formatted, or incomplete.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"    public static Task deserialize(String data) throws NiniException {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"        if (data \u003d\u003d null || data.isEmpty()) {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Cannot deserialize null or empty data.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Incomplete data for task deserialization.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"        if (!parts[DONE_INDEX].equals(\"1\") \u0026\u0026 !parts[DONE_INDEX].equals(\"0\")) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Data has invalid values for is_done status\");","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"        String type \u003d parts[TYPE_INDEX].trim();","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"        boolean isDone \u003d parts[DONE_INDEX].trim().equals(\"1\");","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"        String description \u003d parts[DESCRIPTION_INDEX].trim();","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"        assert !type.isBlank() : \"Task type should not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"        assert !description.isBlank() : \"Task description should not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"        switch (type) {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"        case \"T\":","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"            return new ToDoTask(description, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"        case \"D\":","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidDataException(\"Missing deadline information.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"            String deadlineStr \u003d parts[3].trim();","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"            assert !deadlineStr.isBlank() : \"Deadline should not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"            return new DeadlineTask(description, deadlineStr, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"        case \"E\":","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"                throw new InvalidDataException(\"Missing event start or end time.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"            String fromStr \u003d parts[3].trim();","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"            String toStr \u003d parts[4].trim();","lastModifiedDate":"2025-01-28T12:00:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"            assert !fromStr.isBlank() : \"Event start time should not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"            assert !toStr.isBlank() : \"Event end time should not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"            return new EventTask(description, fromStr, toStr, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasohjj"},"content":"        default:","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholasohjj"},"content":"            throw new InvalidDataException(\"Unknown task type.\");","lastModifiedDate":"2025-01-29T18:19:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholasohjj"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholasohjj"},"content":"     * The format is {@code [\u003cstatus\u003e] \u003cdescription\u003e}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code X} indicates the task is completed.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \" \"} (space) indicates the task is not completed.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholasohjj"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null : \"Task description should not be null when calling toString.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-04T20:39:27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nicholasohjj"},"content":"    public abstract LocalDateTime getRelevantDate();","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17T20:13:27","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":170}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":" * Represents a to-do task that does not have any specific date or time.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":" * This class extends the {@code Task} class and provides implementation","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":" * for serialization and string representation specific to to-do tasks.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code ToDoTask} with the given description.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        super(description);","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description must not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"     * Constructs a new {@code ToDoTask} with the given description and status.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"     *                    {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    public ToDoTask(String description, boolean isDone) {","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        super(description, isDone);","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Description must not be null or empty.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T19:40:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"     * Serializes the to-do task into a formatted string representation.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"     * The format used is: {@code T|\u003cstatus\u003e|\u003cdescription\u003e}, where:","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code T} represents a to-do task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cstatus\u003e} is {@code 1} if the task is done, otherwise {@code 0}.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"     *     \u003cli\u003e{@code \u003cdescription\u003e} is the textual description of the task.\u003c/li\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"     * @return A serialized string representation of the to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    public String serialize() {","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        return String.format(\"T|%d|%s\", isDone ? 1 : 0, description);","lastModifiedDate":"2025-01-27T23:51:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"     * The format is {@code [T]\u003cdescription\u003e}, where {@code [T]} signifies a to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-01-29T16:53:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    public String toString() {","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        assert description !\u003d null : \"Description should not be null when generating string representation.\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    public LocalDateTime getRelevantDate() {","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        return null;","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-17T21:12:25","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":68}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package ui;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":" * Represents a chat bubble for user and bot responses.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    private Label text;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"    private DialogBox(String message, Image img) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"Message cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"        assert img !\u003d null : \"Image cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"            FXMLLoader loader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"            loader.setController(this);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"            loader.setRoot(this);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"            loader.load();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"            throw new RuntimeException(\"Failed to load ui.DialogBox.fxml\", e);","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        assert text !\u003d null : \"FXML \u0027text\u0027 label is not loaded\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        assert displayPicture !\u003d null : \"FXML \u0027displayPicture\u0027 ImageView is not loaded\";","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"        text.setText(message);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    private void flip() {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"        assert !tmp.isEmpty() : \"Dialog box must contain elements before flipping\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    public static DialogBox getUserDialog(String message, Image img) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"User message cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        assert img !\u003d null : \"User image cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        DialogBox db \u003d new DialogBox(message, img);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        db.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        return db;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"    public static DialogBox getBotDialog(String message, Image img) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"Bot message cannot be null or empty\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        assert img !\u003d null : \"Bot image cannot be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        DialogBox db \u003d new DialogBox(message, img);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        db.flip();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        db.getStyleClass().add(\"bot-dialog\");","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        return db;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * Creates an error message dialog box.","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The error message text.","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @param img The bot\u0027s profile image.","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     * @return A styled DialogBox for errors.","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    public static DialogBox getErrorDialog(String message, Image img) {","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        assert message !\u003d null \u0026\u0026 !message.isBlank() : \"Error message cannot be null or empty\";","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"        assert img !\u003d null : \"Bot image for error messages cannot be null\";","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"        DialogBox db \u003d new DialogBox(message, img);","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"        db.flip();","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"        db.getStyleClass().add(\"error-dialog\");","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"        return db;","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":94}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package ui;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":" * The main class for the main.NiniNana task management application.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":" * It handles user input, processes commands, and manages tasks.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    @Override","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        assert stage !\u003d null : \"Stage must not be null at the start of the application\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            assert ap !\u003d null : \"ui.MainWindow.fxml could not be loaded\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"            stage.setTitle(\"Nininana\");","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"            stage.setResizable(true);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"            stage.setMinHeight(600.0);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"            stage.setMinWidth(400.0);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"            String stylesheet \u003d Objects.requireNonNull(getClass()","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"                    .getResource(\"/css/main.css\")).toExternalForm();","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"            assert stylesheet !\u003d null : \"ui.MainWindow.css could not be loaded\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"            scene.getStylesheets().add(stylesheet);","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"            assert controller !\u003d null : \"ui.MainWindow.fxml could not be loaded\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"            controller.showGreetingUI();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"            stage.show();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":49}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package ui;","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import java.util.List;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import components.Contact;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import components.ContactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import components.Parser;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskList;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import components.TaskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"/**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":" * Controller for the main window of the application.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":" * Handles user input, manages UI elements, and interacts with core application logic.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":" */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m NiniNana\\nWhat can I do for you?\";","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    private ContactList contactList;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    private ContactStorage contactStorage;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    private Image userImage;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    private Image botImage;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"     * Initializes the main window.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"     * Sets up UI bindings and initializes components.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        assert userInput !\u003d null : \"UserInput should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        assert sendButton !\u003d null : \"SendButton should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty());","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"        taskStorage \u003d new TaskStorage();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        contactStorage \u003d new ContactStorage();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        userImage \u003d loadImage(\"/images/user_image.jpg\", \"User image\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        botImage \u003d loadImage(\"/images/bot_image.jpg\", \"Bot image\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        setupTaskList();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        setupContactList();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"     * Safely loads an image resource.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"     * @param path The path to the image resource.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"     * @param description The description for logging purposes.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"     * @return The loaded image or a default placeholder if loading fails.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    private Image loadImage(String path, String description) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"            return new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(path)));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"            System.err.println(\"Error: \" + description + \" not found at \" + path);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"            return new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/default.png\")));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"     * Loads tasks from taskStorage and initializes the task list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"     * If loading fails, an empty task list is created instead.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"    private void setupTaskList() {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"            tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException | NiniException e) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"            System.err.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"            tasks \u003d new ArrayList\u003c\u003e(); // Provide an empty list if loading fails","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"            Platform.runLater(() -\u003e showErrorUI(\"Failed to load tasks. Starting with an empty list.\"));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"        assert tasks !\u003d null : \"Tasks should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"        this.taskList \u003d new TaskList(tasks);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"     * Loads tasks from contactStorage and initializes the task list.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"     * If loading fails, an empty contact list is created instead.","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"    private void setupContactList() {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"        List\u003cContact\u003e contacts;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"            contacts \u003d contactStorage.loadContacts();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"        } catch (IOException | NiniException e) {","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"            System.err.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"            contacts \u003d new ArrayList\u003c\u003e(); // Provide an empty list if loading fails","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"            Platform.runLater(() -\u003e showErrorUI(\"Failed to load contacts. Starting with an empty list.\"));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"        assert contacts !\u003d null : \"Contacts should be properly initialized\";","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"        this.contactList \u003d new ContactList(contacts);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"     * Displays an error message in the UI.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"    private void showErrorUI(String message) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"        Platform.runLater(() -\u003e dialogContainer.getChildren().add(","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"                DialogBox.getErrorDialog(message, botImage)","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"        ));","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"        animateErrorInput();","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nicholasohjj"},"content":"     * Displays the greeting message in the UI when the application starts.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nicholasohjj"},"content":"    public void showGreetingUI() {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nicholasohjj"},"content":"        dialogContainer.getChildren().add(DialogBox.getBotDialog(GREETING_MESSAGE, botImage));","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nicholasohjj"},"content":"     * Handles user input when the send button is pressed.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nicholasohjj"},"content":"     * Parses the input, executes the command, and updates the UI with responses.","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nicholasohjj"},"content":"    @FXML","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nicholasohjj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nicholasohjj"},"content":"        String userText \u003d userInput.getText().trim();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nicholasohjj"},"content":"        if (userText.isEmpty()) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nicholasohjj"},"content":"            animateErrorInput();","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nicholasohjj"},"content":"            return;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nicholasohjj"},"content":"        String responseText;","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nicholasohjj"},"content":"            Command command \u003d parser.parseCommand(userText);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nicholasohjj"},"content":"            assert command !\u003d null : \"Command should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nicholasohjj"},"content":"            responseText \u003d command.execute(taskList, contactList, taskStorage, contactStorage);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nicholasohjj"},"content":"            assert responseText !\u003d null : \"Response text should be properly initialized\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nicholasohjj"},"content":"            if (command.isExit()) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nicholasohjj"},"content":"                System.exit(0);","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nicholasohjj"},"content":"                return;","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nicholasohjj"},"content":"            }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nicholasohjj"},"content":"            responseText \u003d e.getMessage();","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nicholasohjj"},"content":"            assert responseText !\u003d null : \"Exception message should not be null\";","lastModifiedDate":"2025-02-09T11:52:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nicholasohjj"},"content":"            showErrorUI(responseText);","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nicholasohjj"},"content":"            return;","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nicholasohjj"},"content":"        updateUI(userText, responseText);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nicholasohjj"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nicholasohjj"},"content":"     * Animates the input field when an invalid command is entered.","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nicholasohjj"},"content":"    private void animateErrorInput() {","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nicholasohjj"},"content":"        userInput.setStyle(\"-fx-border-color: red; -fx-background-color: #ffcccc;\");","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nicholasohjj"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(0.5));","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nicholasohjj"},"content":"        pause.setOnFinished(event -\u003e userInput.setStyle(\"\"));","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nicholasohjj"},"content":"        pause.play();","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:12:18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nicholasohjj"},"content":"    /**","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nicholasohjj"},"content":"     * Updates the UI with the user input and the bot\u0027s response.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nicholasohjj"},"content":"     *","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nicholasohjj"},"content":"     * @param userText The user\u0027s input text.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nicholasohjj"},"content":"     * @param responseText The bot\u0027s response text.","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nicholasohjj"},"content":"     */","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nicholasohjj"},"content":"    private void updateUI(String userText, String responseText) {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nicholasohjj"},"content":"        Platform.runLater(() -\u003e dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nicholasohjj"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"nicholasohjj"},"content":"                DialogBox.getBotDialog(responseText, botImage)","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"nicholasohjj"},"content":"        ));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":211}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"\u003cfx:root type\u003d\"HBox\" alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"        \u003cLabel fx:id\u003d\"text\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" styleClass\u003d\"dialog-label\"/\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"10.0\" bottom\u003d\"10.0\" left\u003d\"10.0\"/\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"            fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2025-02-13T23:52:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"                    vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"                    fitToHeight\u003d\"true\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"                    AnchorPane.bottomAnchor\u003d\"50.0\"\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"chat-container\"/\u003e","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"                   styleClass\u003d\"user-input\"","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"                   AnchorPane.bottomAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"                   AnchorPane.leftAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"                   AnchorPane.rightAnchor\u003d\"65.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"                   onAction\u003d\"#handleUserInput\"/\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"                text\u003d\"Transmit\"","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"                styleClass\u003d\"send-button\"","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"                AnchorPane.bottomAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"                AnchorPane.rightAnchor\u003d\"5.0\"","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"                prefWidth\u003d\"80.0\"/\u003e","lastModifiedDate":"2025-02-17T16:23:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-02T15:22:56","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":42}},{"path":"src/test/java/NiniNanaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"public class NiniNanaTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":11}},{"path":"src/test/java/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-02-02T15:47:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import commands.Command;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"import commands.ExitCommand;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.AddTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.ListTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.MarkTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.SortTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"import commands.tasks.UnmarkTaskCommand;","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"class ParserTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    private Parser parser;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    void setUp() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    void testParseListCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(parser.parseCommand(\"listtasks\") instanceof ListTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    void testParseExitCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(parser.parseCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"    void testParseSortCommand() throws NiniException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(parser.parseCommand(\"sorttasks\") instanceof SortTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"    // Tests for Task Modification","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    void testParseMarkCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"marktasks 1 3 5\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof MarkTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        assertArrayEquals(new int[]{0, 2, 4}, ((MarkTaskCommand) command).getMarkIndices());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"    void testParseUnmarkCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"unmarktasks 2 4\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof UnmarkTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"        assertArrayEquals(new int[]{1, 3}, ((UnmarkTaskCommand) command).getUnmarkIndices());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    void testParseDeleteCommand() throws NiniException {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"deletetasks 3 5 7\");","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof DeleteTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"        assertArrayEquals(new int[]{2, 4, 6}, ((DeleteTaskCommand) command).getDeleteIndices());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    // Tests for Add Commands","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddToDoCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"todo Buy groceries\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddTaskCommand) command).getAddedTask() instanceof ToDoTask);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", ((AddTaskCommand) command).getAddedTask().getDescription());","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddEventCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"event Meeting /from 1/1/2025 1000 /to 1/1/2025 1200\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddTaskCommand) command).getAddedTask() instanceof EventTask);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"        EventTask task \u003d (EventTask) ((AddTaskCommand) command).getAddedTask();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Meeting\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T10:00\", task.getStartDateTime().toString());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T12:00\", task.getEndDateTime().toString());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddDeadlineCommand() throws NiniException {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"        Command command \u003d parser.parseCommand(\"deadline Submit report /by 1/1/2025 1800\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(command instanceof AddTaskCommand);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(((AddTaskCommand) command).getAddedTask() instanceof DeadlineTask);","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"        DeadlineTask task \u003d (DeadlineTask) ((AddTaskCommand) command).getAddedTask();","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"2025-01-01T18:00\", task.getDeadline().toString());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"    // Tests for Invalid Commands","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parseCommand(\"invalidcommand\"));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"    void testParseMarkCommandWithInvalidIndex() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"marktasks abc\"));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nicholasohjj"},"content":"    void testParseUnmarkCommandWithInvalidIndex() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"unmarktasks abc\"));","lastModifiedDate":"2025-02-14T00:58:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddToDoCommandWithEmptyDescription() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"todo \"));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddEventCommandWithInvalidFormat() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"event Meeting /from 10:00\"));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nicholasohjj"},"content":"    void testParseAddDeadlineCommandWithInvalidFormat() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e parser.parseCommand(\"deadline Submit report\"));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":143}},{"path":"src/test/java/components/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package components;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"import tasks.EventTask;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"import tasks.Task;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"    void setUp() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"    void testAddTask() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new ToDoTask(\"Test Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"    void testRemoveTask_validIndex() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        // Arrange","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new ToDoTask(\"Test Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        // Act","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"        // Assert","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(task, removedTask);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"    void testRemoveTask_invalidIndexThrowsException() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.removeTask(0));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"    void testMarkTask_validIndex() throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new ToDoTask(\"Test Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"    void testMarkTask_invalidIndexThrowsException() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.markTask(0));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"    void testUnmarkTask_validIndex() throws NiniException {","lastModifiedDate":"2025-02-17T16:53:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"        // Arrange","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new ToDoTask(\"Test Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"        task.markAsDone();","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"        // Act","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"        // Assert","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"    void testUnmarkTask_invalidIndexThrowsException() {","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.unmarkTask(0));","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    void testSortTasks() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nicholasohjj"},"content":"            // Arrange","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask deadlineTask \u003d new DeadlineTask(\"Deadline Task\", \"25/12/2025 1800\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nicholasohjj"},"content":"            EventTask eventTask \u003d new EventTask(\"Event Task\", \"24/12/2025 0900\", \"24/12/2025 1700\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nicholasohjj"},"content":"            Task simpleTask \u003d new ToDoTask(\"Simple Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(simpleTask);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(deadlineTask);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nicholasohjj"},"content":"            taskList.addTask(eventTask);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nicholasohjj"},"content":"            // Act","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nicholasohjj"},"content":"            taskList.sortTasks();","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nicholasohjj"},"content":"            // Assert","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(eventTask, taskList.getTask(0));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(deadlineTask, taskList.getTask(1));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(simpleTask, taskList.getTask(2));","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nicholasohjj"},"content":"    void testSize() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nicholasohjj"},"content":"        Task task \u003d new ToDoTask(\"Test Task\");","lastModifiedDate":"2025-02-09T13:38:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nicholasohjj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":124}},{"path":"src/test/java/exceptions/InvalidCommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package exceptions;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"class InvalidCommandExceptionTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    void testExceptionMessage() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        InvalidCommandException exception \u003d new InvalidCommandException(\"Unknown command\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"INVALID COMMAND! Unknown command\", exception.getMessage());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    void testExceptionWithDifferentMessage() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"        InvalidCommandException exception \u003d new InvalidCommandException(\"Command not recognised\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"INVALID COMMAND! Command not recognised\", exception.getMessage());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":22}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    public void testConstructorWithValidInput() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 18, 0), task.getDeadline());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithInvalidDeadlineFormat() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"            new DeadlineTask(\"Submit report\", \"25-12-2025 1800\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInputAndIsDone() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 18, 0), task.getDeadline());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"D|1|Submit report|25/12/2025 1800\", task.serialize());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"25/12/2025 1800\", false);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"[D][ ] Submit report (deadline: Dec 25 2025, 6:00PM)\", task.toString());","lastModifiedDate":"2025-02-09T18:17:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"    void testInvalidDeadlineThrowsException() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            new DeadlineTask(\"Invalid date\", \"invalid-date\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    void testEdgeCaseDeadline() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"New Year\u0027s Eve Party\", \"31/12/2025 2359\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 31, 23, 59), task.getDeadline());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid edge case.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":85}},{"path":"src/test/java/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"import exceptions.NiniException;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"class EventTaskTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInput() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Conference\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 9, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 17, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithInvalidFormat() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25-12-2025 0900\", \"25/12/2025 1700\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25/12/2025 0900\", \"invalid-date\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidInputAndIsDone() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"Conference\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 9, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 25, 17, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nicholasohjj"},"content":"            assertTrue(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", false);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"E|0|Conference|25/12/2025 0900|25/12/2025 1700\", task.serialize());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Conference\", \"25/12/2025 0900\", \"25/12/2025 1700\", false);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(\"[E][ ] Conference (from: Dec 25 2025, 9:00AM to: Dec 25 2025, 5:00PM)\", task.toString());","lastModifiedDate":"2025-02-09T18:17:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid input.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nicholasohjj"},"content":"    void testInvalidDateOrder() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nicholasohjj"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nicholasohjj"},"content":"            new EventTask(\"Conference\", \"25/12/2025 1700\", \"25/12/2025 0900\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nicholasohjj"},"content":"        });","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nicholasohjj"},"content":"    void testEdgeCaseDates() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nicholasohjj"},"content":"        try {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nicholasohjj"},"content":"            EventTask task \u003d new EventTask(\"Overnight Event\", \"31/12/2025 2300\", \"01/01/2026 0200\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2025, 12, 31, 23, 0), task.getStartDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nicholasohjj"},"content":"            assertEquals(LocalDateTime.of(2026, 1, 1, 2, 0), task.getEndDateTime());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nicholasohjj"},"content":"        } catch (NiniException e) {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nicholasohjj"},"content":"            fail(\"Exception should not have been thrown for valid edge case.\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nicholasohjj"},"content":"        }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":93}},{"path":"src/test/java/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholasohjj"},"content":"package tasks;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nicholasohjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-01-31T16:26:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-31T16:36:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nicholasohjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nicholasohjj"},"content":"class ToDoTaskTest {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidDescription() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\");","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nicholasohjj"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nicholasohjj"},"content":"    void testConstructorWithValidDescriptionAndIsDone() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"Buy groceries\", task.getDescription());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nicholasohjj"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nicholasohjj"},"content":"    void testSerialize() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"T|1|Buy groceries\", task.serialize());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nicholasohjj"},"content":"        task \u003d new ToDoTask(\"Buy groceries\", false);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"T|0|Buy groceries\", task.serialize());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nicholasohjj"},"content":"    @Test","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nicholasohjj"},"content":"    void testToString() {","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nicholasohjj"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy groceries\", false);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"[T][ ] Buy groceries\", task.toString());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nicholasohjj"},"content":"","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nicholasohjj"},"content":"        task \u003d new ToDoTask(\"Buy groceries\", true);","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nicholasohjj"},"content":"        assertEquals(\"[T][X] Buy groceries\", task.toString());","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nicholasohjj"},"content":"    }","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nicholasohjj"},"content":"}","lastModifiedDate":"2025-01-28T20:56:35","isFullCredit":false}],"authorContributionMap":{"nicholasohjj":42}}]
